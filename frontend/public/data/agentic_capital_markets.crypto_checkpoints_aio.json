[{
  "_id": {
    "$oid": "6889dc7f5023acaf9fbae62d"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "checkpoint_id": "1f06d220-b5a5-69b0-bfff-c0c48d70787f",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo0OTowMy41MjcxNDkrMDA6MDCiaWTZJDFmMDZkMjIwLWI1YTUtNjliMC1iZmZmLWMwYzQ4ZDcwNzg3Zq5jaGFubmVsX3ZhbHVlc4GpX19zdGFydF9fgahtZXNzYWdlc5HIAV0FlL1sYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5odW1hbqxIdW1hbk1lc3NhZ2WHp2NvbnRlbnTZqUNvbnNpZGVyaW5nIHRoZSBjdXJyZW50IGNyeXB0byBtYXJrZXQgY29uZGl0aW9ucywgbW9tZW50dW0sIGFuZCBzZW50aW1lbnQgZnJvbSBzb2NpYWwgbWVkaWEgYW5kIG5ld3MsIHdoYXQgd291bGQgYmUgdGhlIG9wdGltYWwgY3J5cHRvIGFzc2V0IGFsbG9jYXRpb24gZm9yIG15IHBvcnRmb2xpbz+xYWRkaXRpb25hbF9rd2FyZ3OAsXJlc3BvbnNlX21ldGFkYXRhgKR0eXBlpWh1bWFupG5hbWXAomlk2SQyMzgyZGU0ZC1kYTBlLTQ4ZmYtOGQ0ZC0xZTZlYmE5MjU5YzinZXhhbXBsZcKzbW9kZWxfdmFsaWRhdGVfanNvbrBjaGFubmVsX3ZlcnNpb25zgalfX3N0YXJ0X18BrXZlcnNpb25zX3NlZW6BqV9faW5wdXRfX4CtcGVuZGluZ19zZW5kc5A=",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "ImlucHV0Ig==",
        "subType": "00"
      }
    },
    "writes": {
      "__start__": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJIdW1hbk1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/IiwgInR5cGUiOiAiaHVtYW4iLCAiaWQiOiAiMjM4MmRlNGQtZGEwZS00OGZmLThkNGQtMWU2ZWJhOTI1OWM4In19XQ==",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "LTE=",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": null,
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc7f5023acaf9fbae630"
  },
  "checkpoint_id": "1f06d220-b5a6-6892-8000-f27ba737f5a3",
  "thread_id": "thread_20250730_084900",
  "checkpoint_ns": "",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo0OTowMy41Mjc1MjkrMDA6MDCiaWTZJDFmMDZkMjIwLWI1YTYtNjg5Mi04MDAwLWYyN2JhNzM3ZjVhM65jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXORyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkMjM4MmRlNGQtZGEwZS00OGZmLThkNGQtMWU2ZWJhOTI1OWM4p2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb26vYnJhbmNoOnRvOmFnZW50wLBjaGFubmVsX3ZlcnNpb25zg6lfX3N0YXJ0X18CqG1lc3NhZ2VzAq9icmFuY2g6dG86YWdlbnQCrXZlcnNpb25zX3NlZW6CqV9faW5wdXRfX4CpX19zdGFydF9fgalfX3N0YXJ0X18BrXBlbmRpbmdfc2VuZHOQ",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "$binary": {
        "base64": "bnVsbA==",
        "subType": "00"
      }
    },
    "step": {
      "$binary": {
        "base64": "MA==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d220-b5a5-69b0-bfff-c0c48d70787f",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc825023acaf9fbae633"
  },
  "checkpoint_ns": "",
  "checkpoint_id": "1f06d220-cd4c-6e21-8001-a1bdda652077",
  "thread_id": "thread_20250730_084900",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo0OTowNi4wMDczODQrMDA6MDCiaWTZJDFmMDZkMjIwLWNkNGMtNmUyMS04MDAxLWExYmRkYTY1MjA3N65jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXOSyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkMjM4MmRlNGQtZGEwZS00OGZmLThkNGQtMWU2ZWJhOTI1OWM4p2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb27IBEEFlLpsYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5haalBSU1lc3NhZ2WKp2NvbnRlbnTZkU9rYXksIGxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gYW5kIHRoZW4gYW5hbHl6ZSB0aGUgbWFya2V0IGNvbmRpdGlvbnMgdG8gcHJvdmlkZSBhIHJlY29tbWVuZGVkIHJlYWxsb2NhdGlvbi6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzRW+sWNvbXBsZXRpb25fdG9rZW5zWbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNFherc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tM2NhOTI2YjUtM2E2Yi00OGJjLWJkYzEtMjc1OTA4MjAxYzA1LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWW9Z2V0X3BvcnRmb2xpb19hbGxvY2F0aW9uX3Rvb2ykYXJnc4GlcXVlcnnZI2N1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uomlk2SN0b29sdV9iZHJrXzAxQ1FIcVFYSzNycDI1a0Jxd2NMUTFzQaR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNFb6tb3V0cHV0X3Rva2Vuc1msdG90YWxfdG9rZW5zzRYXs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29ur2JyYW5jaDp0bzp0b29sc8CwY2hhbm5lbF92ZXJzaW9uc4SpX19zdGFydF9fAqhtZXNzYWdlcwOvYnJhbmNoOnRvOmFnZW50A69icmFuY2g6dG86dG9vbHMDrXZlcnNpb25zX3NlZW6DqV9faW5wdXRfX4CpX19zdGFydF9fgalfX3N0YXJ0X18BpWFnZW50ga9icmFuY2g6dG86YWdlbnQCrXBlbmRpbmdfc2VuZHOQ",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJPa2F5LCBsZXQncyB0YWtlIGEgbG9vayBhdCB5b3VyIGN1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uIGFuZCB0aGVuIGFuYWx5emUgdGhlIG1hcmtldCBjb25kaXRpb25zIHRvIHByb3ZpZGUgYSByZWNvbW1lbmRlZCByZWFsbG9jYXRpb24uIiwgImFkZGl0aW9uYWxfa3dhcmdzIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDU1NjYsICJjb21wbGV0aW9uX3Rva2VucyI6IDg5LCAiY2FjaGVfcmVhZF9pbnB1dF90b2tlbnMiOiAwLCAiY2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zIjogMCwgInRvdGFsX3Rva2VucyI6IDU2NTV9LCAic3RvcF9yZWFzb24iOiAidG9vbF91c2UiLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInJlc3BvbnNlX21ldGFkYXRhIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDU1NjYsICJjb21wbGV0aW9uX3Rva2VucyI6IDg5LCAiY2FjaGVfcmVhZF9pbnB1dF90b2tlbnMiOiAwLCAiY2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zIjogMCwgInRvdGFsX3Rva2VucyI6IDU2NTV9LCAic3RvcF9yZWFzb24iOiAidG9vbF91c2UiLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInR5cGUiOiAiYWkiLCAiaWQiOiAicnVuLS0zY2E5MjZiNS0zYTZiLTQ4YmMtYmRjMS0yNzU5MDgyMDFjMDUtMCIsICJ0b29sX2NhbGxzIjogW3sibmFtZSI6ICJnZXRfcG9ydGZvbGlvX2FsbG9jYXRpb25fdG9vbCIsICJhcmdzIjogeyJxdWVyeSI6ICJjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiJ9LCAiaWQiOiAidG9vbHVfYmRya18wMUNRSHFRWEszcnAyNWtCcXdjTFExc0EiLCAidHlwZSI6ICJ0b29sX2NhbGwifV0sICJ1c2FnZV9tZXRhZGF0YSI6IHsiaW5wdXRfdG9rZW5zIjogNTU2NiwgIm91dHB1dF90b2tlbnMiOiA4OSwgInRvdGFsX3Rva2VucyI6IDU2NTUsICJpbnB1dF90b2tlbl9kZXRhaWxzIjogeyJjYWNoZV9jcmVhdGlvbiI6IDAsICJjYWNoZV9yZWFkIjogMH19LCAiaW52YWxpZF90b29sX2NhbGxzIjogW119fV0=",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "MQ==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d220-b5a6-6892-8000-f27ba737f5a3",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc825023acaf9fbae634"
  },
  "checkpoint_ns": "",
  "checkpoint_id": "1f06d220-cd79-6b45-8002-8525fad361a3",
  "thread_id": "thread_20250730_084900",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo0OTowNi4wMjU3NDcrMDA6MDCiaWTZJDFmMDZkMjIwLWNkNzktNmI0NS04MDAyLTg1MjVmYWQzNjFhM65jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXOTyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkMjM4MmRlNGQtZGEwZS00OGZmLThkNGQtMWU2ZWJhOTI1OWM4p2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb27IBEEFlLpsYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5haalBSU1lc3NhZ2WKp2NvbnRlbnTZkU9rYXksIGxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gYW5kIHRoZW4gYW5hbHl6ZSB0aGUgbWFya2V0IGNvbmRpdGlvbnMgdG8gcHJvdmlkZSBhIHJlY29tbWVuZGVkIHJlYWxsb2NhdGlvbi6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzRW+sWNvbXBsZXRpb25fdG9rZW5zWbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNFherc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tM2NhOTI2YjUtM2E2Yi00OGJjLWJkYzEtMjc1OTA4MjAxYzA1LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWW9Z2V0X3BvcnRmb2xpb19hbGxvY2F0aW9uX3Rvb2ykYXJnc4GlcXVlcnnZI2N1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uomlk2SN0b29sdV9iZHJrXzAxQ1FIcVFYSzNycDI1a0Jxd2NMUTFzQaR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNFb6tb3V0cHV0X3Rva2Vuc1msdG90YWxfdG9rZW5zzRYXs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29uyAUoBZS8bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMudG9vbKtUb29sTWVzc2FnZYmnY29udGVudNoEF3sicmVzdWx0cyI6IFt7InN5bWJvbCI6ICJCVEMiLCAiZGVzY3JpcHRpb24iOiAiQml0Y29pbiIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNjAlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNjAsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkJUQ1VTRFQifSwgeyJzeW1ib2wiOiAiRVRIIiwgImRlc2NyaXB0aW9uIjogIkV0aGVyZXVtIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICIyMCUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiAyMCwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRVRIVVNEVCJ9LCB7InN5bWJvbCI6ICJYUlAiLCAiZGVzY3JpcHRpb24iOiAiWFJQIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIlhSUFVTRFQifSwgeyJzeW1ib2wiOiAiU09MIiwgImRlc2NyaXB0aW9uIjogIlNvbGFuYSIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNSUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiA1LCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJTT0xVU0RUIn0sIHsic3ltYm9sIjogIkRPR0UiLCAiZGVzY3JpcHRpb24iOiAiRG9nZWNvaW4iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRE9HRVVTRFQifSwgeyJzeW1ib2wiOiAiQURBIiwgImRlc2NyaXB0aW9uIjogIkNhcmRhbm8iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiQURBVVNEVCJ9XSwgInRvdGFsX2Fzc2V0cyI6IDYsICJwb3J0Zm9saW9fdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSBQb3J0Zm9saW8ifbFhZGRpdGlvbmFsX2t3YXJnc4CxcmVzcG9uc2VfbWV0YWRhdGGApHR5cGWkdG9vbKRuYW1lvWdldF9wb3J0Zm9saW9fYWxsb2NhdGlvbl90b29somlk2SQzMzAwMjliNi0wNmM2LTRiOWQtOWRlNi05ZWE5Y2FlMjdiYWOsdG9vbF9jYWxsX2lk2SN0b29sdV9iZHJrXzAxQ1FIcVFYSzNycDI1a0Jxd2NMUTFzQahhcnRpZmFjdMCmc3RhdHVzp3N1Y2Nlc3OzbW9kZWxfdmFsaWRhdGVfanNvbq9icmFuY2g6dG86YWdlbnTAsGNoYW5uZWxfdmVyc2lvbnOEqV9fc3RhcnRfXwKobWVzc2FnZXMEr2JyYW5jaDp0bzphZ2VudASvYnJhbmNoOnRvOnRvb2xzBK12ZXJzaW9uc19zZWVuhKlfX2lucHV0X1+AqV9fc3RhcnRfX4GpX19zdGFydF9fAaVhZ2VudIGvYnJhbmNoOnRvOmFnZW50AqV0b29sc4GvYnJhbmNoOnRvOnRvb2xzA61wZW5kaW5nX3NlbmRzkA==",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJUb29sTWVzc2FnZSJdLCAia3dhcmdzIjogeyJjb250ZW50IjogIntcInJlc3VsdHNcIjogW3tcInN5bWJvbFwiOiBcIkJUQ1wiLCBcImRlc2NyaXB0aW9uXCI6IFwiQml0Y29pblwiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjYwJVwiLCBcImFsbG9jYXRpb25fbnVtYmVyXCI6IDYwLCBcImFzc2V0X3R5cGVcIjogXCJDcnlwdG9jdXJyZW5jeVwiLCBcImJpbmFuY2Vfc3ltYm9sXCI6IFwiQlRDVVNEVFwifSwge1wic3ltYm9sXCI6IFwiRVRIXCIsIFwiZGVzY3JpcHRpb25cIjogXCJFdGhlcmV1bVwiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjIwJVwiLCBcImFsbG9jYXRpb25fbnVtYmVyXCI6IDIwLCBcImFzc2V0X3R5cGVcIjogXCJDcnlwdG9jdXJyZW5jeVwiLCBcImJpbmFuY2Vfc3ltYm9sXCI6IFwiRVRIVVNEVFwifSwge1wic3ltYm9sXCI6IFwiWFJQXCIsIFwiZGVzY3JpcHRpb25cIjogXCJYUlBcIiwgXCJhbGxvY2F0aW9uX3BlcmNlbnRhZ2VcIjogXCI1JVwiLCBcImFsbG9jYXRpb25fbnVtYmVyXCI6IDUsIFwiYXNzZXRfdHlwZVwiOiBcIkNyeXB0b2N1cnJlbmN5XCIsIFwiYmluYW5jZV9zeW1ib2xcIjogXCJYUlBVU0RUXCJ9LCB7XCJzeW1ib2xcIjogXCJTT0xcIiwgXCJkZXNjcmlwdGlvblwiOiBcIlNvbGFuYVwiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjUlXCIsIFwiYWxsb2NhdGlvbl9udW1iZXJcIjogNSwgXCJhc3NldF90eXBlXCI6IFwiQ3J5cHRvY3VycmVuY3lcIiwgXCJiaW5hbmNlX3N5bWJvbFwiOiBcIlNPTFVTRFRcIn0sIHtcInN5bWJvbFwiOiBcIkRPR0VcIiwgXCJkZXNjcmlwdGlvblwiOiBcIkRvZ2Vjb2luXCIsIFwiYWxsb2NhdGlvbl9wZXJjZW50YWdlXCI6IFwiNSVcIiwgXCJhbGxvY2F0aW9uX251bWJlclwiOiA1LCBcImFzc2V0X3R5cGVcIjogXCJDcnlwdG9jdXJyZW5jeVwiLCBcImJpbmFuY2Vfc3ltYm9sXCI6IFwiRE9HRVVTRFRcIn0sIHtcInN5bWJvbFwiOiBcIkFEQVwiLCBcImRlc2NyaXB0aW9uXCI6IFwiQ2FyZGFub1wiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjUlXCIsIFwiYWxsb2NhdGlvbl9udW1iZXJcIjogNSwgXCJhc3NldF90eXBlXCI6IFwiQ3J5cHRvY3VycmVuY3lcIiwgXCJiaW5hbmNlX3N5bWJvbFwiOiBcIkFEQVVTRFRcIn1dLCBcInRvdGFsX2Fzc2V0c1wiOiA2LCBcInBvcnRmb2xpb190eXBlXCI6IFwiQ3J5cHRvY3VycmVuY3kgUG9ydGZvbGlvXCJ9IiwgInR5cGUiOiAidG9vbCIsICJuYW1lIjogImdldF9wb3J0Zm9saW9fYWxsb2NhdGlvbl90b29sIiwgImlkIjogIjMzMDAyOWI2LTA2YzYtNGI5ZC05ZGU2LTllYTljYWUyN2JhYyIsICJ0b29sX2NhbGxfaWQiOiAidG9vbHVfYmRya18wMUNRSHFRWEszcnAyNWtCcXdjTFExc0EiLCAic3RhdHVzIjogInN1Y2Nlc3MifX1d",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Mg==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d220-cd4c-6e21-8001-a1bdda652077",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc835023acaf9fbae638"
  },
  "checkpoint_ns": "",
  "checkpoint_id": "1f06d220-db24-6895-8003-ce8c33880c58",
  "thread_id": "thread_20250730_084900",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo0OTowNy40NTg4NjUrMDA6MDCiaWTZJDFmMDZkMjIwLWRiMjQtNjg5NS04MDAzLWNlOGMzMzg4MGM1OK5jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXOUyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkMjM4MmRlNGQtZGEwZS00OGZmLThkNGQtMWU2ZWJhOTI1OWM4p2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb27IBEEFlLpsYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5haalBSU1lc3NhZ2WKp2NvbnRlbnTZkU9rYXksIGxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gYW5kIHRoZW4gYW5hbHl6ZSB0aGUgbWFya2V0IGNvbmRpdGlvbnMgdG8gcHJvdmlkZSBhIHJlY29tbWVuZGVkIHJlYWxsb2NhdGlvbi6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzRW+sWNvbXBsZXRpb25fdG9rZW5zWbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNFherc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tM2NhOTI2YjUtM2E2Yi00OGJjLWJkYzEtMjc1OTA4MjAxYzA1LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWW9Z2V0X3BvcnRmb2xpb19hbGxvY2F0aW9uX3Rvb2ykYXJnc4GlcXVlcnnZI2N1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uomlk2SN0b29sdV9iZHJrXzAxQ1FIcVFYSzNycDI1a0Jxd2NMUTFzQaR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNFb6tb3V0cHV0X3Rva2Vuc1msdG90YWxfdG9rZW5zzRYXs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29uyAUoBZS8bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMudG9vbKtUb29sTWVzc2FnZYmnY29udGVudNoEF3sicmVzdWx0cyI6IFt7InN5bWJvbCI6ICJCVEMiLCAiZGVzY3JpcHRpb24iOiAiQml0Y29pbiIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNjAlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNjAsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkJUQ1VTRFQifSwgeyJzeW1ib2wiOiAiRVRIIiwgImRlc2NyaXB0aW9uIjogIkV0aGVyZXVtIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICIyMCUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiAyMCwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRVRIVVNEVCJ9LCB7InN5bWJvbCI6ICJYUlAiLCAiZGVzY3JpcHRpb24iOiAiWFJQIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIlhSUFVTRFQifSwgeyJzeW1ib2wiOiAiU09MIiwgImRlc2NyaXB0aW9uIjogIlNvbGFuYSIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNSUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiA1LCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJTT0xVU0RUIn0sIHsic3ltYm9sIjogIkRPR0UiLCAiZGVzY3JpcHRpb24iOiAiRG9nZWNvaW4iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRE9HRVVTRFQifSwgeyJzeW1ib2wiOiAiQURBIiwgImRlc2NyaXB0aW9uIjogIkNhcmRhbm8iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiQURBVVNEVCJ9XSwgInRvdGFsX2Fzc2V0cyI6IDYsICJwb3J0Zm9saW9fdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSBQb3J0Zm9saW8ifbFhZGRpdGlvbmFsX2t3YXJnc4CxcmVzcG9uc2VfbWV0YWRhdGGApHR5cGWkdG9vbKRuYW1lvWdldF9wb3J0Zm9saW9fYWxsb2NhdGlvbl90b29somlk2SQzMzAwMjliNi0wNmM2LTRiOWQtOWRlNi05ZWE5Y2FlMjdiYWOsdG9vbF9jYWxsX2lk2SN0b29sdV9iZHJrXzAxQ1FIcVFYSzNycDI1a0Jxd2NMUTFzQahhcnRpZmFjdMCmc3RhdHVzp3N1Y2Nlc3OzbW9kZWxfdmFsaWRhdGVfanNvbsgEkAWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNnKT2theSwgYmFzZWQgb24geW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiwgeW91IGhhdmUgYSBoZWF2eSBmb2N1cyBvbiBCaXRjb2luICg2MCUpIHdpdGggdGhlIHJlc3Qgc3BsaXQgYmV0d2VlbiBFdGhlcmV1bSAoMjAlKSBhbmQgc21hbGxlciBhbGxvY2F0aW9ucyB0byBYUlAsIFNvbGFuYSwgRG9nZWNvaW4sIGFuZCBDYXJkYW5vLrFhZGRpdGlvbmFsX2t3YXJnc4WldXNhZ2WFrXByb21wdF90b2tlbnPNF36xY29tcGxldGlvbl90b2tlbnN3t2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80X9atzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowsXJlc3BvbnNlX21ldGFkYXRhhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc80XfrFjb21wbGV0aW9uX3Rva2Vuc3e3Y2FjaGVfcmVhZF9pbnB1dF90b2tlbnMAuGNhY2hlX3dyaXRlX2lucHV0X3Rva2VucwCsdG90YWxfdG9rZW5zzRf1q3N0b3BfcmVhc29uqHRvb2xfdXNlqHRoaW5raW5ngKhtb2RlbF9pZNkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCqbW9kZWxfbmFtZdkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCkdHlwZaJhaaRuYW1lwKJpZNkrcnVuLS05NDk2ODdiOC1iMDM0LTQxNDQtYWI2MC04MDJhOWExMzQ5OWItMKdleGFtcGxlwqp0b29sX2NhbGxzkYSkbmFtZdkqY3J5cHRvX2FuYWx5c2lzX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29spGFyZ3OBpXF1ZXJ52StjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gcmVjb21tZW5kYXRpb25zomlk2SN0b29sdV9iZHJrXzAxUTZLMTRUVlE4cmExTmpIQkU4M3VzOaR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNF36tb3V0cHV0X3Rva2Vuc3esdG90YWxfdG9rZW5zzRf1s2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29ur2JyYW5jaDp0bzp0b29sc8CwY2hhbm5lbF92ZXJzaW9uc4SpX19zdGFydF9fAqhtZXNzYWdlcwWvYnJhbmNoOnRvOmFnZW50Ba9icmFuY2g6dG86dG9vbHMFrXZlcnNpb25zX3NlZW6EqV9faW5wdXRfX4CpX19zdGFydF9fgalfX3N0YXJ0X18BpWFnZW50ga9icmFuY2g6dG86YWdlbnQEpXRvb2xzga9icmFuY2g6dG86dG9vbHMDrXBlbmRpbmdfc2VuZHOQ",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJPa2F5LCBiYXNlZCBvbiB5b3VyIGN1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uLCB5b3UgaGF2ZSBhIGhlYXZ5IGZvY3VzIG9uIEJpdGNvaW4gKDYwJSkgd2l0aCB0aGUgcmVzdCBzcGxpdCBiZXR3ZWVuIEV0aGVyZXVtICgyMCUpIGFuZCBzbWFsbGVyIGFsbG9jYXRpb25zIHRvIFhSUCwgU29sYW5hLCBEb2dlY29pbiwgYW5kIENhcmRhbm8uIiwgImFkZGl0aW9uYWxfa3dhcmdzIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDYwMTQsICJjb21wbGV0aW9uX3Rva2VucyI6IDExOSwgImNhY2hlX3JlYWRfaW5wdXRfdG9rZW5zIjogMCwgImNhY2hlX3dyaXRlX2lucHV0X3Rva2VucyI6IDAsICJ0b3RhbF90b2tlbnMiOiA2MTMzfSwgInN0b3BfcmVhc29uIjogInRvb2xfdXNlIiwgInRoaW5raW5nIjoge30sICJtb2RlbF9pZCI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCIsICJtb2RlbF9uYW1lIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIn0sICJyZXNwb25zZV9tZXRhZGF0YSI6IHsidXNhZ2UiOiB7InByb21wdF90b2tlbnMiOiA2MDE0LCAiY29tcGxldGlvbl90b2tlbnMiOiAxMTksICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogNjEzM30sICJzdG9wX3JlYXNvbiI6ICJ0b29sX3VzZSIsICJ0aGlua2luZyI6IHt9LCAibW9kZWxfaWQiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAiLCAibW9kZWxfbmFtZSI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCJ9LCAidHlwZSI6ICJhaSIsICJpZCI6ICJydW4tLTk0OTY4N2I4LWIwMzQtNDE0NC1hYjYwLTgwMmE5YTEzNDk5Yi0wIiwgInRvb2xfY2FsbHMiOiBbeyJuYW1lIjogImNyeXB0b19hbmFseXNpc19yZXBvcnRzX3ZlY3Rvcl9zZWFyY2hfdG9vbCIsICJhcmdzIjogeyJxdWVyeSI6ICJjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gcmVjb21tZW5kYXRpb25zIn0sICJpZCI6ICJ0b29sdV9iZHJrXzAxUTZLMTRUVlE4cmExTmpIQkU4M3VzOSIsICJ0eXBlIjogInRvb2xfY2FsbCJ9XSwgInVzYWdlX21ldGFkYXRhIjogeyJpbnB1dF90b2tlbnMiOiA2MDE0LCAib3V0cHV0X3Rva2VucyI6IDExOSwgInRvdGFsX3Rva2VucyI6IDYxMzMsICJpbnB1dF90b2tlbl9kZXRhaWxzIjogeyJjYWNoZV9jcmVhdGlvbiI6IDAsICJjYWNoZV9yZWFkIjogMH19LCAiaW52YWxpZF90b29sX2NhbGxzIjogW119fV0=",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Mw==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d220-cd79-6b45-8002-8525fad361a3",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc835023acaf9fbae63c"
  },
  "checkpoint_ns": "",
  "checkpoint_id": "1f06d220-dd8d-6b5b-8004-f2f05d95a46a",
  "thread_id": "thread_20250730_084900",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "NA==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d220-db24-6895-8003-ce8c33880c58",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc855023acaf9fbae63f"
  },
  "checkpoint_ns": "",
  "checkpoint_id": "1f06d220-ec7c-6980-8005-6368f4a2a3c5",
  "thread_id": "thread_20250730_084900",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICIiLCAiYWRkaXRpb25hbF9rd2FyZ3MiOiB7InVzYWdlIjogeyJwcm9tcHRfdG9rZW5zIjogODYxMywgImNvbXBsZXRpb25fdG9rZW5zIjogNjUsICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogODY3OH0sICJzdG9wX3JlYXNvbiI6ICJ0b29sX3VzZSIsICJ0aGlua2luZyI6IHt9LCAibW9kZWxfaWQiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAiLCAibW9kZWxfbmFtZSI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCJ9LCAicmVzcG9uc2VfbWV0YWRhdGEiOiB7InVzYWdlIjogeyJwcm9tcHRfdG9rZW5zIjogODYxMywgImNvbXBsZXRpb25fdG9rZW5zIjogNjUsICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogODY3OH0sICJzdG9wX3JlYXNvbiI6ICJ0b29sX3VzZSIsICJ0aGlua2luZyI6IHt9LCAibW9kZWxfaWQiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAiLCAibW9kZWxfbmFtZSI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCJ9LCAidHlwZSI6ICJhaSIsICJpZCI6ICJydW4tLWMwMDhjYmUyLTlkYTYtNGUyYS04MmIyLTgwMDU3YjBmNTE3MC0wIiwgInRvb2xfY2FsbHMiOiBbeyJuYW1lIjogImNyeXB0b19uZXdzX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29sIiwgImFyZ3MiOiB7InF1ZXJ5IjogImNyeXB0byBwb3J0Zm9saW8gbmV3cyBzZW50aW1lbnQifSwgImlkIjogInRvb2x1X2JkcmtfMDFTYW83SmdMZWlTb3RmcWJMZ2dhaWJ0IiwgInR5cGUiOiAidG9vbF9jYWxsIn1dLCAidXNhZ2VfbWV0YWRhdGEiOiB7ImlucHV0X3Rva2VucyI6IDg2MTMsICJvdXRwdXRfdG9rZW5zIjogNjUsICJ0b3RhbF90b2tlbnMiOiA4Njc4LCAiaW5wdXRfdG9rZW5fZGV0YWlscyI6IHsiY2FjaGVfY3JlYXRpb24iOiAwLCAiY2FjaGVfcmVhZCI6IDB9fSwgImludmFsaWRfdG9vbF9jYWxscyI6IFtdfX1d",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "NQ==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d220-dd8d-6b5b-8004-f2f05d95a46a",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc855023acaf9fbae642"
  },
  "checkpoint_id": "1f06d220-eeb5-60c8-8006-87c02b3506c2",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Ng==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d220-ec7c-6980-8005-6368f4a2a3c5",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc875023acaf9fbae645"
  },
  "checkpoint_ns": "",
  "checkpoint_id": "1f06d221-0188-650f-8007-1fb067f09ae4",
  "thread_id": "thread_20250730_084900",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICIiLCAiYWRkaXRpb25hbF9rd2FyZ3MiOiB7InVzYWdlIjogeyJwcm9tcHRfdG9rZW5zIjogMTU1MjYsICJjb21wbGV0aW9uX3Rva2VucyI6IDY4LCAiY2FjaGVfcmVhZF9pbnB1dF90b2tlbnMiOiAwLCAiY2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zIjogMCwgInRvdGFsX3Rva2VucyI6IDE1NTk0fSwgInN0b3BfcmVhc29uIjogInRvb2xfdXNlIiwgInRoaW5raW5nIjoge30sICJtb2RlbF9pZCI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCIsICJtb2RlbF9uYW1lIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIn0sICJyZXNwb25zZV9tZXRhZGF0YSI6IHsidXNhZ2UiOiB7InByb21wdF90b2tlbnMiOiAxNTUyNiwgImNvbXBsZXRpb25fdG9rZW5zIjogNjgsICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogMTU1OTR9LCAic3RvcF9yZWFzb24iOiAidG9vbF91c2UiLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInR5cGUiOiAiYWkiLCAiaWQiOiAicnVuLS1iOGEwNjc5NC0yYWVkLTRjYmItOWQyNC01ZWUzZjYwNGE0YzMtMCIsICJ0b29sX2NhbGxzIjogW3sibmFtZSI6ICJjcnlwdG9fc29jaWFsX21lZGlhX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29sIiwgImFyZ3MiOiB7InF1ZXJ5IjogImNyeXB0byBwb3J0Zm9saW8gc29jaWFsIG1lZGlhIHNlbnRpbWVudCJ9LCAiaWQiOiAidG9vbHVfYmRya18wMUdEVFRXNG5ZSFNWVUhoTG56b1ZFd2QiLCAidHlwZSI6ICJ0b29sX2NhbGwifV0sICJ1c2FnZV9tZXRhZGF0YSI6IHsiaW5wdXRfdG9rZW5zIjogMTU1MjYsICJvdXRwdXRfdG9rZW5zIjogNjgsICJ0b3RhbF90b2tlbnMiOiAxNTU5NCwgImlucHV0X3Rva2VuX2RldGFpbHMiOiB7ImNhY2hlX2NyZWF0aW9uIjogMCwgImNhY2hlX3JlYWQiOiAwfX0sICJpbnZhbGlkX3Rvb2xfY2FsbHMiOiBbXX19XQ==",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Nw==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d220-eeb5-60c8-8006-87c02b3506c2",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc875023acaf9fbae648"
  },
  "checkpoint_id": "1f06d221-0402-6bcb-8008-4a3cd43fab82",
  "thread_id": "thread_20250730_084900",
  "checkpoint_ns": "",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "OA==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d221-0188-650f-8007-1fb067f09ae4",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dc8f5023acaf9fbae64a"
  },
  "checkpoint_ns": "",
  "checkpoint_id": "1f06d221-4e60-6548-8009-8e5b151e2e7e",
  "thread_id": "thread_20250730_084900",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICI8cmVzdWx0PlxuQmFzZWQgb24gdGhlIGNvbXByZWhlbnNpdmUgYW5hbHlzaXMgb2YgeW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8sIGhlcmUgYXJlIG15IGtleSBpbnNpZ2h0cyBhbmQgcmVjb21tZW5kYXRpb25zOlxuXG5Qb3J0Zm9saW8gQWxsb2NhdGlvbjpcbllvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGhhcyBhIGhlYXZ5IGZvY3VzIG9uIEJpdGNvaW4gKDYwJSksIHdpdGggdGhlIHJlc3Qgc3BsaXQgYmV0d2VlbiBFdGhlcmV1bSAoMjAlKSBhbmQgc21hbGxlciBhbGxvY2F0aW9ucyB0byBYUlAsIFNvbGFuYSwgRG9nZWNvaW4sIGFuZCBDYXJkYW5vLiBUaGlzIGFsbG9jYXRpb24gaXMgaGVhdmlseSB3ZWlnaHRlZCB0b3dhcmRzIHZvbGF0aWxlIGNyeXB0b2N1cnJlbmNpZXMsIHdpdGggbm8gc3RhYmxlY29pbiBleHBvc3VyZS5cblxuTWFya2V0IENvbmRpdGlvbnMgYW5kIFRyZW5kczpcblRoZSBjcnlwdG8gbWFya2V0IGFuYWx5c2lzIHNob3dzIGEgcHJlZG9taW5hbnRseSBiZWFyaXNoIHRyZW5kIGFjcm9zcyB5b3VyIHBvcnRmb2xpbyBob2xkaW5ncywgd2l0aCBCaXRjb2luLCBFdGhlcmV1bSwgWFJQLCBhbmQgQ2FyZGFubyBhbGwgZXhoaWJpdGluZyBuZWdhdGl2ZSBzaG9ydC10ZXJtIG1vbWVudHVtLiBTb2xhbmEgYW5kIERvZ2Vjb2luIGFyZSBzaG93aW5nIG1peGVkIHNpZ25hbHMsIHdpdGggc29tZSBjb25zb2xpZGF0aW9uIGJldHdlZW4gbW92aW5nIGF2ZXJhZ2VzLlxuXG5UaGUgbW9tZW50dW0gaW5kaWNhdG9ycyBmdXJ0aGVyIHJlaW5mb3JjZSB0aGUgYmVhcmlzaCBzZW50aW1lbnQsIHdpdGggdGhlIFJTSSBmb3IgbW9zdCBjcnlwdG9jdXJyZW5jaWVzIGluIHRoZSBwb3J0Zm9saW8gaW5kaWNhdGluZyBvdmVyc29sZCBvciBiZWFyaXNoIGNvbmRpdGlvbnMuIFRyYWRpbmcgdm9sdW1lIGlzIGFsc28gYmVsb3cgYXZlcmFnZSBmb3Igc2V2ZXJhbCBhc3NldHMsIHN1Z2dlc3RpbmcgbG93IG1hcmtldCBhY3Rpdml0eSBhbmQgcG90ZW50aWFsIGNvbnRpbnVlZCBkb3dud2FyZCBwcmVzc3VyZS5cblxuU2VudGltZW50IEFuYWx5c2lzOlxuVGhlIHNvY2lhbCBtZWRpYSBzZW50aW1lbnQgYW5hbHlzaXMgcHJvdmlkZXMgYSBtaXhlZCBvdXRsb29rIGZvciB5b3VyIHBvcnRmb2xpbzpcblxuLSBCVEMsIFhSUCwgU09MLCBhbmQgQURBIGhhdmUgYSBwb3NpdGl2ZSBzZW50aW1lbnQsIGluZGljYXRpbmcgc3Ryb25nIGNvbW11bml0eSBvcHRpbWlzbSBhbmQgcG90ZW50aWFsIGZvciBwcmljZSBhcHByZWNpYXRpb24uXG4tIEVUSCBhbmQgRE9HRSBoYXZlIGEgbmV1dHJhbCBzZW50aW1lbnQsIHJlZmxlY3RpbmcgYSBtb3JlIGNhdXRpb3VzIG91dGxvb2sgZnJvbSBpbnZlc3RvcnMuXG5cblRoZSBwb3NpdGl2ZSBzZW50aW1lbnQgZm9yIEJUQywgdGhlIG1hcmtldCBsZWFkZXIsIGlzIHBhcnRpY3VsYXJseSBlbmNvdXJhZ2luZywgYXMgaXQgY291bGQgZHJpdmUgYnJvYWRlciBjcnlwdG8gbWFya2V0IHNlbnRpbWVudCBhbmQgcHJvdmlkZSBhIHN0YWJsZSBmb3VuZGF0aW9uIGZvciB0aGUgcG9ydGZvbGlvLlxuXG5SZWNvbW1lbmRhdGlvbnM6XG5UbyBhZGRyZXNzIHRoZSBoaWdoLXJpc2sgcHJvZmlsZSBhbmQgbGFjayBvZiBkaXZlcnNpZmljYXRpb24gaW4geW91ciBjdXJyZW50IHBvcnRmb2xpbywgSSByZWNvbW1lbmQgdGhlIGZvbGxvd2luZzpcblxuMS4gUmVkdWNlIHRoZSBvdmVyYWxsIGNyeXB0b2N1cnJlbmN5IGV4cG9zdXJlIGJ5IGFsbG9jYXRpbmcgYSBwb3J0aW9uICgyMC0zMCUpIG9mIHRoZSBwb3J0Zm9saW8gdG8gc3RhYmxlY29pbnMsIHN1Y2ggYXMgVVNEQyBvciBEQUkuIFRoaXMgd291bGQgcHJvdmlkZSBzdGFiaWxpdHkgYW5kIHJlZHVjZSB0aGUgcG9ydGZvbGlvJ3Mgdm9sYXRpbGl0eS5cblxuMi4gUmViYWxhbmNlIHRoZSBjcnlwdG9jdXJyZW5jeSBhbGxvY2F0aW9uIHRvIGFjaGlldmUgYmV0dGVyIGRpdmVyc2lmaWNhdGlvbi4gQ29uc2lkZXIgcmVkdWNpbmcgdGhlIEJpdGNvaW4gZXhwb3N1cmUgdG8gNDAtNTAlIGFuZCBpbmNyZWFzaW5nIHRoZSBhbGxvY2F0aW9uIHRvIEV0aGVyZXVtICgyNS0zMCUpLCBTb2xhbmEgKDEwLTE1JSksIGFuZCBEb2dlY29pbiAoNS0xMCUpLiBUaGlzIHdvdWxkIHByb3ZpZGUgbW9yZSBiYWxhbmNlZCBleHBvc3VyZSB0byBkaWZmZXJlbnQgc2VjdG9ycyBvZiB0aGUgY3J5cHRvIG1hcmtldC5cblxuMy4gQ2xvc2VseSBtb25pdG9yIHRoZSBzaG9ydC10ZXJtIG1vbWVudHVtIGluZGljYXRvcnMgYW5kIGNvbnNpZGVyIHRhY3RpY2FsIGFkanVzdG1lbnRzIHRvIHRoZSBwb3J0Zm9saW8gYXMgdGhlIG1hcmtldCBjb25kaXRpb25zIGV2b2x2ZS4gTWFpbnRhaW4gYSBkaXNjaXBsaW5lZCBhcHByb2FjaCB0byByaXNrIG1hbmFnZW1lbnQgYW5kIGJlIHByZXBhcmVkIHRvIHRha2UgYWN0aW9uIHRvIHByb3RlY3QgdGhlIHBvcnRmb2xpbydzIHZhbHVlIGR1cmluZyBwZXJpb2RzIG9mIGhlaWdodGVuZWQgdm9sYXRpbGl0eS5cblxuQnkgaW1wbGVtZW50aW5nIHRoZXNlIHJlY29tbWVuZGF0aW9ucywgdGhlIHBvcnRmb2xpbyBjYW4gYWNoaWV2ZSBhIGJldHRlciBiYWxhbmNlIGJldHdlZW4gZ3Jvd3RoIGFuZCBzdGFiaWxpdHksIGFsaWduaW5nIHdpdGggdGhlIFwiTWl4IG9mIGdyb3d0aCBhbmQgc3RhYmlsaXR5LCBtb2RlcmF0ZSByaXNrXCIgcmlzayBwcm9maWxlLlxuXG5Xb3VsZCB5b3UgbGlrZSBtZSB0byBwcm92aWRlIGFueSBhZGRpdGlvbmFsIGRldGFpbHMgb3IgY2xhcmlmaWNhdGlvbiBvbiB0aGVzZSByZWNvbW1lbmRhdGlvbnM/IFlFUy9OT1xuPC9yZXN1bHQ+IiwgImFkZGl0aW9uYWxfa3dhcmdzIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDQ5MDc0LCAiY29tcGxldGlvbl90b2tlbnMiOiA1ODQsICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogNDk2NTh9LCAic3RvcF9yZWFzb24iOiAiZW5kX3R1cm4iLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInJlc3BvbnNlX21ldGFkYXRhIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDQ5MDc0LCAiY29tcGxldGlvbl90b2tlbnMiOiA1ODQsICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogNDk2NTh9LCAic3RvcF9yZWFzb24iOiAiZW5kX3R1cm4iLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInR5cGUiOiAiYWkiLCAiaWQiOiAicnVuLS1kZjIwMWViZS03ZjgxLTRkZmQtODFmYS04ZTQ2MTA2NTU5ZTktMCIsICJ1c2FnZV9tZXRhZGF0YSI6IHsiaW5wdXRfdG9rZW5zIjogNDkwNzQsICJvdXRwdXRfdG9rZW5zIjogNTg0LCAidG90YWxfdG9rZW5zIjogNDk2NTgsICJpbnB1dF90b2tlbl9kZXRhaWxzIjogeyJjYWNoZV9jcmVhdGlvbiI6IDAsICJjYWNoZV9yZWFkIjogMH19LCAidG9vbF9jYWxscyI6IFtdLCAiaW52YWxpZF90b29sX2NhbGxzIjogW119fV0=",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "OQ==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d221-0402-6bcb-8008-4a3cd43fab82",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd3e5023acaf9fbae64b"
  },
  "checkpoint_id": "1f06d227-d3b2-6d47-bfff-9984beff575e",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MjoxNC41ODMxMTUrMDA6MDCiaWTZJDFmMDZkMjI3LWQzYjItNmQ0Ny1iZmZmLTk5ODRiZWZmNTc1Za5jaGFubmVsX3ZhbHVlc4GpX19zdGFydF9fgahtZXNzYWdlc5HIAV0FlL1sYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5odW1hbqxIdW1hbk1lc3NhZ2WHp2NvbnRlbnTZqUNvbnNpZGVyaW5nIHRoZSBjdXJyZW50IGNyeXB0byBtYXJrZXQgY29uZGl0aW9ucywgbW9tZW50dW0sIGFuZCBzZW50aW1lbnQgZnJvbSBzb2NpYWwgbWVkaWEgYW5kIG5ld3MsIHdoYXQgd291bGQgYmUgdGhlIG9wdGltYWwgY3J5cHRvIGFzc2V0IGFsbG9jYXRpb24gZm9yIG15IHBvcnRmb2xpbz+xYWRkaXRpb25hbF9rd2FyZ3OAsXJlc3BvbnNlX21ldGFkYXRhgKR0eXBlpWh1bWFupG5hbWXAomlk2SQxMGFhZmY3OC1kYzM5LTQyMjAtOTNkZC0wOTRjNDcwZGMyMmOnZXhhbXBsZcKzbW9kZWxfdmFsaWRhdGVfanNvbrBjaGFubmVsX3ZlcnNpb25zgalfX3N0YXJ0X18BrXZlcnNpb25zX3NlZW6BqV9faW5wdXRfX4CtcGVuZGluZ19zZW5kc5A=",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "ImlucHV0Ig==",
        "subType": "00"
      }
    },
    "writes": {
      "__start__": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJIdW1hbk1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/IiwgInR5cGUiOiAiaHVtYW4iLCAiaWQiOiAiMTBhYWZmNzgtZGMzOS00MjIwLTkzZGQtMDk0YzQ3MGRjMjJjIn19XQ==",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "LTE=",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": null,
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd3e5023acaf9fbae64e"
  },
  "checkpoint_id": "1f06d227-d3b3-6c6a-8000-660617a39d5b",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MjoxNC41ODM1MDErMDA6MDCiaWTZJDFmMDZkMjI3LWQzYjMtNmM2YS04MDAwLTY2MDYxN2EzOWQ1Yq5jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXORyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkMTBhYWZmNzgtZGMzOS00MjIwLTkzZGQtMDk0YzQ3MGRjMjJjp2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb26vYnJhbmNoOnRvOmFnZW50wLBjaGFubmVsX3ZlcnNpb25zg6lfX3N0YXJ0X18CqG1lc3NhZ2VzAq9icmFuY2g6dG86YWdlbnQCrXZlcnNpb25zX3NlZW6CqV9faW5wdXRfX4CpX19zdGFydF9fgalfX3N0YXJ0X18BrXBlbmRpbmdfc2VuZHOQ",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "$binary": {
        "base64": "bnVsbA==",
        "subType": "00"
      }
    },
    "step": {
      "$binary": {
        "base64": "MA==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d227-d3b2-6d47-bfff-9984beff575e",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd3f5023acaf9fbae650"
  },
  "checkpoint_id": "1f06d227-e0fb-6a38-8001-2e80f35c861a",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MjoxNS45NzYwNzkrMDA6MDCiaWTZJDFmMDZkMjI3LWUwZmItNmEzOC04MDAxLTJlODBmMzVjODYxYa5jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXOSyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkMTBhYWZmNzgtZGMzOS00MjIwLTkzZGQtMDk0YzQ3MGRjMjJjp2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb27IBEEFlLpsYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5haalBSU1lc3NhZ2WKp2NvbnRlbnTZkU9rYXksIGxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gYW5kIHRoZW4gYW5hbHl6ZSB0aGUgbWFya2V0IGNvbmRpdGlvbnMgdG8gcHJvdmlkZSBhIHJlY29tbWVuZGVkIHJlYWxsb2NhdGlvbi6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzRW+sWNvbXBsZXRpb25fdG9rZW5zWbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNFherc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tYzAzN2UxNDMtNTZjMi00NzE4LWJlMzMtYWI0ZTI0ZDkxYjY5LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWW9Z2V0X3BvcnRmb2xpb19hbGxvY2F0aW9uX3Rvb2ykYXJnc4GlcXVlcnnZI2N1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uomlk2SN0b29sdV9iZHJrXzAxU1B5Vjl3c0E0dXJ6N2l2dXdYaTc5dqR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNFb6tb3V0cHV0X3Rva2Vuc1msdG90YWxfdG9rZW5zzRYXs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29ur2JyYW5jaDp0bzp0b29sc8CwY2hhbm5lbF92ZXJzaW9uc4SpX19zdGFydF9fAqhtZXNzYWdlcwOvYnJhbmNoOnRvOmFnZW50A69icmFuY2g6dG86dG9vbHMDrXZlcnNpb25zX3NlZW6DqV9faW5wdXRfX4CpX19zdGFydF9fgalfX3N0YXJ0X18BpWFnZW50ga9icmFuY2g6dG86YWdlbnQCrXBlbmRpbmdfc2VuZHOQ",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJPa2F5LCBsZXQncyB0YWtlIGEgbG9vayBhdCB5b3VyIGN1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uIGFuZCB0aGVuIGFuYWx5emUgdGhlIG1hcmtldCBjb25kaXRpb25zIHRvIHByb3ZpZGUgYSByZWNvbW1lbmRlZCByZWFsbG9jYXRpb24uIiwgImFkZGl0aW9uYWxfa3dhcmdzIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDU1NjYsICJjb21wbGV0aW9uX3Rva2VucyI6IDg5LCAiY2FjaGVfcmVhZF9pbnB1dF90b2tlbnMiOiAwLCAiY2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zIjogMCwgInRvdGFsX3Rva2VucyI6IDU2NTV9LCAic3RvcF9yZWFzb24iOiAidG9vbF91c2UiLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInJlc3BvbnNlX21ldGFkYXRhIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDU1NjYsICJjb21wbGV0aW9uX3Rva2VucyI6IDg5LCAiY2FjaGVfcmVhZF9pbnB1dF90b2tlbnMiOiAwLCAiY2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zIjogMCwgInRvdGFsX3Rva2VucyI6IDU2NTV9LCAic3RvcF9yZWFzb24iOiAidG9vbF91c2UiLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInR5cGUiOiAiYWkiLCAiaWQiOiAicnVuLS1jMDM3ZTE0My01NmMyLTQ3MTgtYmUzMy1hYjRlMjRkOTFiNjktMCIsICJ0b29sX2NhbGxzIjogW3sibmFtZSI6ICJnZXRfcG9ydGZvbGlvX2FsbG9jYXRpb25fdG9vbCIsICJhcmdzIjogeyJxdWVyeSI6ICJjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiJ9LCAiaWQiOiAidG9vbHVfYmRya18wMVNQeVY5d3NBNHVyejdpdnV3WGk3OXYiLCAidHlwZSI6ICJ0b29sX2NhbGwifV0sICJ1c2FnZV9tZXRhZGF0YSI6IHsiaW5wdXRfdG9rZW5zIjogNTU2NiwgIm91dHB1dF90b2tlbnMiOiA4OSwgInRvdGFsX3Rva2VucyI6IDU2NTUsICJpbnB1dF90b2tlbl9kZXRhaWxzIjogeyJjYWNoZV9jcmVhdGlvbiI6IDAsICJjYWNoZV9yZWFkIjogMH19LCAiaW52YWxpZF90b29sX2NhbGxzIjogW119fV0=",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "MQ==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d227-d3b3-6c6a-8000-660617a39d5b",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd405023acaf9fbae654"
  },
  "checkpoint_id": "1f06d227-e128-65c3-8002-c3ca28399414",
  "thread_id": "thread_20250730_085210",
  "checkpoint_ns": "",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MjoxNS45OTQzOTgrMDA6MDCiaWTZJDFmMDZkMjI3LWUxMjgtNjVjMy04MDAyLWMzY2EyODM5OTQxNK5jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXOTyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkMTBhYWZmNzgtZGMzOS00MjIwLTkzZGQtMDk0YzQ3MGRjMjJjp2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb27IBEEFlLpsYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5haalBSU1lc3NhZ2WKp2NvbnRlbnTZkU9rYXksIGxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gYW5kIHRoZW4gYW5hbHl6ZSB0aGUgbWFya2V0IGNvbmRpdGlvbnMgdG8gcHJvdmlkZSBhIHJlY29tbWVuZGVkIHJlYWxsb2NhdGlvbi6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzRW+sWNvbXBsZXRpb25fdG9rZW5zWbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNFherc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tYzAzN2UxNDMtNTZjMi00NzE4LWJlMzMtYWI0ZTI0ZDkxYjY5LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWW9Z2V0X3BvcnRmb2xpb19hbGxvY2F0aW9uX3Rvb2ykYXJnc4GlcXVlcnnZI2N1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uomlk2SN0b29sdV9iZHJrXzAxU1B5Vjl3c0E0dXJ6N2l2dXdYaTc5dqR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNFb6tb3V0cHV0X3Rva2Vuc1msdG90YWxfdG9rZW5zzRYXs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29uyAUoBZS8bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMudG9vbKtUb29sTWVzc2FnZYmnY29udGVudNoEF3sicmVzdWx0cyI6IFt7InN5bWJvbCI6ICJCVEMiLCAiZGVzY3JpcHRpb24iOiAiQml0Y29pbiIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNjAlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNjAsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkJUQ1VTRFQifSwgeyJzeW1ib2wiOiAiRVRIIiwgImRlc2NyaXB0aW9uIjogIkV0aGVyZXVtIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICIyMCUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiAyMCwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRVRIVVNEVCJ9LCB7InN5bWJvbCI6ICJYUlAiLCAiZGVzY3JpcHRpb24iOiAiWFJQIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIlhSUFVTRFQifSwgeyJzeW1ib2wiOiAiU09MIiwgImRlc2NyaXB0aW9uIjogIlNvbGFuYSIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNSUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiA1LCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJTT0xVU0RUIn0sIHsic3ltYm9sIjogIkRPR0UiLCAiZGVzY3JpcHRpb24iOiAiRG9nZWNvaW4iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRE9HRVVTRFQifSwgeyJzeW1ib2wiOiAiQURBIiwgImRlc2NyaXB0aW9uIjogIkNhcmRhbm8iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiQURBVVNEVCJ9XSwgInRvdGFsX2Fzc2V0cyI6IDYsICJwb3J0Zm9saW9fdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSBQb3J0Zm9saW8ifbFhZGRpdGlvbmFsX2t3YXJnc4CxcmVzcG9uc2VfbWV0YWRhdGGApHR5cGWkdG9vbKRuYW1lvWdldF9wb3J0Zm9saW9fYWxsb2NhdGlvbl90b29somlk2SQyNGI2YzNiYi0zNGVmLTRhMmItOGU1ZS0zMWUwZjdmZjA3N2WsdG9vbF9jYWxsX2lk2SN0b29sdV9iZHJrXzAxU1B5Vjl3c0E0dXJ6N2l2dXdYaTc5dqhhcnRpZmFjdMCmc3RhdHVzp3N1Y2Nlc3OzbW9kZWxfdmFsaWRhdGVfanNvbq9icmFuY2g6dG86YWdlbnTAsGNoYW5uZWxfdmVyc2lvbnOEqV9fc3RhcnRfXwKobWVzc2FnZXMEr2JyYW5jaDp0bzphZ2VudASvYnJhbmNoOnRvOnRvb2xzBK12ZXJzaW9uc19zZWVuhKlfX2lucHV0X1+AqV9fc3RhcnRfX4GpX19zdGFydF9fAaVhZ2VudIGvYnJhbmNoOnRvOmFnZW50AqV0b29sc4GvYnJhbmNoOnRvOnRvb2xzA61wZW5kaW5nX3NlbmRzkA==",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJUb29sTWVzc2FnZSJdLCAia3dhcmdzIjogeyJjb250ZW50IjogIntcInJlc3VsdHNcIjogW3tcInN5bWJvbFwiOiBcIkJUQ1wiLCBcImRlc2NyaXB0aW9uXCI6IFwiQml0Y29pblwiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjYwJVwiLCBcImFsbG9jYXRpb25fbnVtYmVyXCI6IDYwLCBcImFzc2V0X3R5cGVcIjogXCJDcnlwdG9jdXJyZW5jeVwiLCBcImJpbmFuY2Vfc3ltYm9sXCI6IFwiQlRDVVNEVFwifSwge1wic3ltYm9sXCI6IFwiRVRIXCIsIFwiZGVzY3JpcHRpb25cIjogXCJFdGhlcmV1bVwiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjIwJVwiLCBcImFsbG9jYXRpb25fbnVtYmVyXCI6IDIwLCBcImFzc2V0X3R5cGVcIjogXCJDcnlwdG9jdXJyZW5jeVwiLCBcImJpbmFuY2Vfc3ltYm9sXCI6IFwiRVRIVVNEVFwifSwge1wic3ltYm9sXCI6IFwiWFJQXCIsIFwiZGVzY3JpcHRpb25cIjogXCJYUlBcIiwgXCJhbGxvY2F0aW9uX3BlcmNlbnRhZ2VcIjogXCI1JVwiLCBcImFsbG9jYXRpb25fbnVtYmVyXCI6IDUsIFwiYXNzZXRfdHlwZVwiOiBcIkNyeXB0b2N1cnJlbmN5XCIsIFwiYmluYW5jZV9zeW1ib2xcIjogXCJYUlBVU0RUXCJ9LCB7XCJzeW1ib2xcIjogXCJTT0xcIiwgXCJkZXNjcmlwdGlvblwiOiBcIlNvbGFuYVwiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjUlXCIsIFwiYWxsb2NhdGlvbl9udW1iZXJcIjogNSwgXCJhc3NldF90eXBlXCI6IFwiQ3J5cHRvY3VycmVuY3lcIiwgXCJiaW5hbmNlX3N5bWJvbFwiOiBcIlNPTFVTRFRcIn0sIHtcInN5bWJvbFwiOiBcIkRPR0VcIiwgXCJkZXNjcmlwdGlvblwiOiBcIkRvZ2Vjb2luXCIsIFwiYWxsb2NhdGlvbl9wZXJjZW50YWdlXCI6IFwiNSVcIiwgXCJhbGxvY2F0aW9uX251bWJlclwiOiA1LCBcImFzc2V0X3R5cGVcIjogXCJDcnlwdG9jdXJyZW5jeVwiLCBcImJpbmFuY2Vfc3ltYm9sXCI6IFwiRE9HRVVTRFRcIn0sIHtcInN5bWJvbFwiOiBcIkFEQVwiLCBcImRlc2NyaXB0aW9uXCI6IFwiQ2FyZGFub1wiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjUlXCIsIFwiYWxsb2NhdGlvbl9udW1iZXJcIjogNSwgXCJhc3NldF90eXBlXCI6IFwiQ3J5cHRvY3VycmVuY3lcIiwgXCJiaW5hbmNlX3N5bWJvbFwiOiBcIkFEQVVTRFRcIn1dLCBcInRvdGFsX2Fzc2V0c1wiOiA2LCBcInBvcnRmb2xpb190eXBlXCI6IFwiQ3J5cHRvY3VycmVuY3kgUG9ydGZvbGlvXCJ9IiwgInR5cGUiOiAidG9vbCIsICJuYW1lIjogImdldF9wb3J0Zm9saW9fYWxsb2NhdGlvbl90b29sIiwgImlkIjogIjI0YjZjM2JiLTM0ZWYtNGEyYi04ZTVlLTMxZTBmN2ZmMDc3ZSIsICJ0b29sX2NhbGxfaWQiOiAidG9vbHVfYmRya18wMVNQeVY5d3NBNHVyejdpdnV3WGk3OXYiLCAic3RhdHVzIjogInN1Y2Nlc3MifX1d",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Mg==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d227-e0fb-6a38-8001-2e80f35c861a",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd415023acaf9fbae657"
  },
  "checkpoint_id": "1f06d227-f045-6bde-8003-ef8d38943929",
  "thread_id": "thread_20250730_085210",
  "checkpoint_ns": "",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MjoxNy41NzkyOTMrMDA6MDCiaWTZJDFmMDZkMjI3LWYwNDUtNmJkZS04MDAzLWVmOGQzODk0MzkyOa5jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXOUyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkMTBhYWZmNzgtZGMzOS00MjIwLTkzZGQtMDk0YzQ3MGRjMjJjp2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb27IBEEFlLpsYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5haalBSU1lc3NhZ2WKp2NvbnRlbnTZkU9rYXksIGxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gYW5kIHRoZW4gYW5hbHl6ZSB0aGUgbWFya2V0IGNvbmRpdGlvbnMgdG8gcHJvdmlkZSBhIHJlY29tbWVuZGVkIHJlYWxsb2NhdGlvbi6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzRW+sWNvbXBsZXRpb25fdG9rZW5zWbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNFherc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tYzAzN2UxNDMtNTZjMi00NzE4LWJlMzMtYWI0ZTI0ZDkxYjY5LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWW9Z2V0X3BvcnRmb2xpb19hbGxvY2F0aW9uX3Rvb2ykYXJnc4GlcXVlcnnZI2N1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uomlk2SN0b29sdV9iZHJrXzAxU1B5Vjl3c0E0dXJ6N2l2dXdYaTc5dqR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNFb6tb3V0cHV0X3Rva2Vuc1msdG90YWxfdG9rZW5zzRYXs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29uyAUoBZS8bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMudG9vbKtUb29sTWVzc2FnZYmnY29udGVudNoEF3sicmVzdWx0cyI6IFt7InN5bWJvbCI6ICJCVEMiLCAiZGVzY3JpcHRpb24iOiAiQml0Y29pbiIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNjAlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNjAsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkJUQ1VTRFQifSwgeyJzeW1ib2wiOiAiRVRIIiwgImRlc2NyaXB0aW9uIjogIkV0aGVyZXVtIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICIyMCUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiAyMCwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRVRIVVNEVCJ9LCB7InN5bWJvbCI6ICJYUlAiLCAiZGVzY3JpcHRpb24iOiAiWFJQIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIlhSUFVTRFQifSwgeyJzeW1ib2wiOiAiU09MIiwgImRlc2NyaXB0aW9uIjogIlNvbGFuYSIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNSUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiA1LCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJTT0xVU0RUIn0sIHsic3ltYm9sIjogIkRPR0UiLCAiZGVzY3JpcHRpb24iOiAiRG9nZWNvaW4iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRE9HRVVTRFQifSwgeyJzeW1ib2wiOiAiQURBIiwgImRlc2NyaXB0aW9uIjogIkNhcmRhbm8iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiQURBVVNEVCJ9XSwgInRvdGFsX2Fzc2V0cyI6IDYsICJwb3J0Zm9saW9fdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSBQb3J0Zm9saW8ifbFhZGRpdGlvbmFsX2t3YXJnc4CxcmVzcG9uc2VfbWV0YWRhdGGApHR5cGWkdG9vbKRuYW1lvWdldF9wb3J0Zm9saW9fYWxsb2NhdGlvbl90b29somlk2SQyNGI2YzNiYi0zNGVmLTRhMmItOGU1ZS0zMWUwZjdmZjA3N2WsdG9vbF9jYWxsX2lk2SN0b29sdV9iZHJrXzAxU1B5Vjl3c0E0dXJ6N2l2dXdYaTc5dqhhcnRpZmFjdMCmc3RhdHVzp3N1Y2Nlc3OzbW9kZWxfdmFsaWRhdGVfanNvbsgEkAWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNnKT2theSwgYmFzZWQgb24geW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiwgeW91IGhhdmUgYSBoZWF2eSBmb2N1cyBvbiBCaXRjb2luICg2MCUpIHdpdGggdGhlIHJlc3Qgc3BsaXQgYmV0d2VlbiBFdGhlcmV1bSAoMjAlKSBhbmQgc21hbGxlciBhbGxvY2F0aW9ucyB0byBYUlAsIFNvbGFuYSwgRG9nZWNvaW4sIGFuZCBDYXJkYW5vLrFhZGRpdGlvbmFsX2t3YXJnc4WldXNhZ2WFrXByb21wdF90b2tlbnPNF36xY29tcGxldGlvbl90b2tlbnN3t2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80X9atzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowsXJlc3BvbnNlX21ldGFkYXRhhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc80XfrFjb21wbGV0aW9uX3Rva2Vuc3e3Y2FjaGVfcmVhZF9pbnB1dF90b2tlbnMAuGNhY2hlX3dyaXRlX2lucHV0X3Rva2VucwCsdG90YWxfdG9rZW5zzRf1q3N0b3BfcmVhc29uqHRvb2xfdXNlqHRoaW5raW5ngKhtb2RlbF9pZNkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCqbW9kZWxfbmFtZdkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCkdHlwZaJhaaRuYW1lwKJpZNkrcnVuLS01ZDY4NGI0ZS1kZmFlLTQ4MTgtOGY1MC1jMjZmMTI4ODQ2ZDQtMKdleGFtcGxlwqp0b29sX2NhbGxzkYSkbmFtZdkqY3J5cHRvX2FuYWx5c2lzX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29spGFyZ3OBpXF1ZXJ52StjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gcmVjb21tZW5kYXRpb25zomlk2SN0b29sdV9iZHJrXzAxQWtBUkxEM2dwYjlIM3dXOVh1SlpmdaR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNF36tb3V0cHV0X3Rva2Vuc3esdG90YWxfdG9rZW5zzRf1s2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29ur2JyYW5jaDp0bzp0b29sc8CwY2hhbm5lbF92ZXJzaW9uc4SpX19zdGFydF9fAqhtZXNzYWdlcwWvYnJhbmNoOnRvOmFnZW50Ba9icmFuY2g6dG86dG9vbHMFrXZlcnNpb25zX3NlZW6EqV9faW5wdXRfX4CpX19zdGFydF9fgalfX3N0YXJ0X18BpWFnZW50ga9icmFuY2g6dG86YWdlbnQEpXRvb2xzga9icmFuY2g6dG86dG9vbHMDrXBlbmRpbmdfc2VuZHOQ",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJPa2F5LCBiYXNlZCBvbiB5b3VyIGN1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uLCB5b3UgaGF2ZSBhIGhlYXZ5IGZvY3VzIG9uIEJpdGNvaW4gKDYwJSkgd2l0aCB0aGUgcmVzdCBzcGxpdCBiZXR3ZWVuIEV0aGVyZXVtICgyMCUpIGFuZCBzbWFsbGVyIGFsbG9jYXRpb25zIHRvIFhSUCwgU29sYW5hLCBEb2dlY29pbiwgYW5kIENhcmRhbm8uIiwgImFkZGl0aW9uYWxfa3dhcmdzIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDYwMTQsICJjb21wbGV0aW9uX3Rva2VucyI6IDExOSwgImNhY2hlX3JlYWRfaW5wdXRfdG9rZW5zIjogMCwgImNhY2hlX3dyaXRlX2lucHV0X3Rva2VucyI6IDAsICJ0b3RhbF90b2tlbnMiOiA2MTMzfSwgInN0b3BfcmVhc29uIjogInRvb2xfdXNlIiwgInRoaW5raW5nIjoge30sICJtb2RlbF9pZCI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCIsICJtb2RlbF9uYW1lIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIn0sICJyZXNwb25zZV9tZXRhZGF0YSI6IHsidXNhZ2UiOiB7InByb21wdF90b2tlbnMiOiA2MDE0LCAiY29tcGxldGlvbl90b2tlbnMiOiAxMTksICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogNjEzM30sICJzdG9wX3JlYXNvbiI6ICJ0b29sX3VzZSIsICJ0aGlua2luZyI6IHt9LCAibW9kZWxfaWQiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAiLCAibW9kZWxfbmFtZSI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCJ9LCAidHlwZSI6ICJhaSIsICJpZCI6ICJydW4tLTVkNjg0YjRlLWRmYWUtNDgxOC04ZjUwLWMyNmYxMjg4NDZkNC0wIiwgInRvb2xfY2FsbHMiOiBbeyJuYW1lIjogImNyeXB0b19hbmFseXNpc19yZXBvcnRzX3ZlY3Rvcl9zZWFyY2hfdG9vbCIsICJhcmdzIjogeyJxdWVyeSI6ICJjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gcmVjb21tZW5kYXRpb25zIn0sICJpZCI6ICJ0b29sdV9iZHJrXzAxQWtBUkxEM2dwYjlIM3dXOVh1SlpmdSIsICJ0eXBlIjogInRvb2xfY2FsbCJ9XSwgInVzYWdlX21ldGFkYXRhIjogeyJpbnB1dF90b2tlbnMiOiA2MDE0LCAib3V0cHV0X3Rva2VucyI6IDExOSwgInRvdGFsX3Rva2VucyI6IDYxMzMsICJpbnB1dF90b2tlbl9kZXRhaWxzIjogeyJjYWNoZV9jcmVhdGlvbiI6IDAsICJjYWNoZV9yZWFkIjogMH19LCAiaW52YWxpZF90b29sX2NhbGxzIjogW119fV0=",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Mw==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d227-e128-65c3-8002-c3ca28399414",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd415023acaf9fbae65a"
  },
  "checkpoint_ns": "",
  "checkpoint_id": "1f06d227-f270-69cf-8004-d2ca27d13ea1",
  "thread_id": "thread_20250730_085210",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJUb29sTWVzc2FnZSJdLCAia3dhcmdzIjogeyJjb250ZW50IjogIntcInJlc3VsdHNcIjogW3tcImRhdGVcIjogXCIyMDI1MDcyNVwiLCBcImNyeXB0b190cmVuZHNcIjogW3tcImFzc2V0XCI6IFwiQlRDXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiQlRDIGNsb3NlIHByaWNlIGlzICQxMTksMTc3LjU2LCBNQTkgaXMgJDExOSwyNzEuNjIsIE1BMjEgaXMgJDExOSwzMzIuODAsIGFuZCBNQTUwIGlzICQxMTksNDg5LjA5LlwiLCBcImRpYWdub3Npc1wiOiBcIkJlYXJpc2ggdHJlbmQgY29uZmlybWVkLiAyMDI1LTA3LTE3IGNsb3NlIHByaWNlIGJlbG93IE1BOSBhbmQgTUEyMS4gU2hvcnQtdGVybSBtb21lbnR1bSBuZWdhdGl2ZS5cIn0sIHtcImFzc2V0XCI6IFwiRVRIXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiRVRIIGNsb3NlIHByaWNlIGlzICQzLDQ3Ni44NywgTUE5IGlzICQzLDQ3Ny4xMSwgTUEyMSBpcyAkMyw0NzguNTEsIGFuZCBNQTUwIGlzICQzLDQ5MS40MS5cIiwgXCJkaWFnbm9zaXNcIjogXCJCZWFyaXNoIHRyZW5kIGNvbmZpcm1lZC4gMjAyNS0wNy0xNyBjbG9zZSBwcmljZSBiZWxvdyBNQTkgYW5kIE1BMjEuIFNob3J0LXRlcm0gbW9tZW50dW0gbmVnYXRpdmUuXCJ9LCB7XCJhc3NldFwiOiBcIlhSUFwiLCBcImZsdWN0dWF0aW9uX2Fuc3dlclwiOiBcIlhSUCBjbG9zZSBwcmljZSBpcyAkMy40OCwgTUE5IGlzICQzLjQ5LCBNQTIxIGlzICQzLjUxLCBhbmQgTUE1MCBpcyAkMy41Mi5cIiwgXCJkaWFnbm9zaXNcIjogXCJCZWFyaXNoIHRyZW5kIGNvbmZpcm1lZC4gMjAyNS0wNy0xNyBjbG9zZSBwcmljZSBiZWxvdyBNQTkgYW5kIE1BMjEuIFNob3J0LXRlcm0gbW9tZW50dW0gbmVnYXRpdmUuXCJ9LCB7XCJhc3NldFwiOiBcIlNPTFwiLCBcImZsdWN0dWF0aW9uX2Fuc3dlclwiOiBcIlNPTCBjbG9zZSBwcmljZSBpcyAkMTc1Ljg3LCBNQTkgaXMgJDE3NS43MywgTUEyMSBpcyAkMTc1Ljk2LCBhbmQgTUE1MCBpcyAkMTc2LjEyLlwiLCBcImRpYWdub3Npc1wiOiBcIk1peGVkIHNpZ25hbHMuIDIwMjUtMDctMTcgY2xvc2UgcHJpY2UgY29uc29saWRhdGluZyBiZXR3ZWVuIG1vdmluZyBhdmVyYWdlcyAoTUE5LCBNQTIxLCBNQTUwKS5cIn0sIHtcImFzc2V0XCI6IFwiRE9HRVwiLCBcImZsdWN0dWF0aW9uX2Fuc3dlclwiOiBcIkRPR0UgY2xvc2UgcHJpY2UgaXMgJDAuMjE4MjYwLCBNQTkgaXMgJDAuMjE4MDM0LCBNQTIxIGlzICQwLjIxODY2MCwgYW5kIE1BNTAgaXMgJDAuMjE5NDk2LlwiLCBcImRpYWdub3Npc1wiOiBcIk1peGVkIHNpZ25hbHMuIDIwMjUtMDctMTcgY2xvc2UgcHJpY2UgY29uc29saWRhdGluZyBiZXR3ZWVuIG1vdmluZyBhdmVyYWdlcyAoTUE5LCBNQTIxLCBNQTUwKS5cIn0sIHtcImFzc2V0XCI6IFwiQURBXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiQURBIGNsb3NlIHByaWNlIGlzICQwLjgyMTYwMCwgTUE5IGlzICQwLjgyMjkwMCwgTUEyMSBpcyAkMC44MjU1NDMsIGFuZCBNQTUwIGlzICQwLjgzMDE1Ni5cIiwgXCJkaWFnbm9zaXNcIjogXCJCZWFyaXNoIHRyZW5kIGNvbmZpcm1lZC4gMjAyNS0wNy0xNyBjbG9zZSBwcmljZSBiZWxvdyBNQTkgYW5kIE1BMjEuIFNob3J0LXRlcm0gbW9tZW50dW0gbmVnYXRpdmUuXCJ9XSwgXCJtb21lbnR1bV9pbmRpY2F0b3JzXCI6IFt7XCJhc3NldFwiOiBcIkJUQ1wiLCBcIm1vbWVudHVtX2luZGljYXRvcnNcIjogW3tcImluZGljYXRvcl9uYW1lXCI6IFwiUlNJXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiQlRDIFJTSSAoMTQtZGF5KSBpcyAyNi44IG9uIDIwMjUtMDctMTcuXCIsIFwiZGlhZ25vc2lzXCI6IFwiUlNJIGF0IDI2LjggaW5kaWNhdGVzIG92ZXJzb2xkIGNvbmRpdGlvbnMuIFN0cm9uZyBidXlpbmcgb3Bwb3J0dW5pdHkgZm9yIEJUQy5cIn0sIHtcImluZGljYXRvcl9uYW1lXCI6IFwiVm9sdW1lXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiQlRDIHZvbHVtZSBpcyA3LjA3IHZzIDIxLWRheSBhdmcgb2YgNy41MSBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIk5vcm1hbCB2b2x1bWUgbGV2ZWxzICgwLjl4IGF2ZXJhZ2UpLiBTdGFuZGFyZCB0cmFkaW5nIGFjdGl2aXR5LlwifSwge1wiaW5kaWNhdG9yX25hbWVcIjogXCJWV0FQXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiQlRDIFZXQVAgKDE0LWRheSkgaXMgJDExOSwzMTQuOTYgdnMgY3VycmVudCBwcmljZSAkMTE5LDE3Ny41NiBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIlByaWNlIDExOTE3Ny41NiB0cmFkaW5nIG5lYXIgVldBUCAxMTkzMTQuOTYgKC0wLjElKS4gQmFsYW5jZWQgbWFya2V0IHdpdGggbmV1dHJhbCBzZW50aW1lbnQuXCJ9XX0sIHtcImFzc2V0XCI6IFwiRVRIXCIsIFwibW9tZW50dW1faW5kaWNhdG9yc1wiOiBbe1wiaW5kaWNhdG9yX25hbWVcIjogXCJSU0lcIiwgXCJmbHVjdHVhdGlvbl9hbnN3ZXJcIjogXCJFVEggUlNJICgxNC1kYXkpIGlzIDM5LjI0IG9uIDIwMjUtMDctMTcuXCIsIFwiZGlhZ25vc2lzXCI6IFwiUlNJIGF0IDM5LjI0IHNob3dzIGJlYXJpc2ggbW9tZW50dW0uIERvd253YXJkIHByZXNzdXJlIG1heSBwZXJzaXN0LlwifSwge1wiaW5kaWNhdG9yX25hbWVcIjogXCJWb2x1bWVcIiwgXCJmbHVjdHVhdGlvbl9hbnN3ZXJcIjogXCJFVEggdm9sdW1lIGlzIDIzOS4zMiB2cyAyMS1kYXkgYXZnIG9mIDQ3OS44NCBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIkJlbG93IGF2ZXJhZ2Ugdm9sdW1lICgwLjV4IGF2ZXJhZ2UpLiBMb3cgbWFya2V0IGFjdGl2aXR5LlwifSwge1wiaW5kaWNhdG9yX25hbWVcIjogXCJWV0FQXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiRVRIIFZXQVAgKDE0LWRheSkgaXMgJDMsNDc5LjIyIHZzIGN1cnJlbnQgcHJpY2UgJDMsNDc2Ljg3IG9uIDIwMjUtMDctMTcuXCIsIFwiZGlhZ25vc2lzXCI6IFwiUHJpY2UgMzQ3Ni44NyB0cmFkaW5nIG5lYXIgVldBUCAzNDc5LjIyICgtMC4xJSkuIEJhbGFuY2VkIG1hcmtldCB3aXRoIG5ldXRyYWwgc2VudGltZW50LlwifV19LCB7XCJhc3NldFwiOiBcIlhSUFwiLCBcIm1vbWVudHVtX2luZGljYXRvcnNcIjogW3tcImluZGljYXRvcl9uYW1lXCI6IFwiUlNJXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiWFJQIFJTSSAoMTQtZGF5KSBpcyAzNS4zOCBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIlJTSSBhdCAzNS4zOCBzaG93cyBiZWFyaXNoIG1vbWVudHVtLiBEb3dud2FyZCBwcmVzc3VyZSBtYXkgcGVyc2lzdC5cIn0sIHtcImluZGljYXRvcl9uYW1lXCI6IFwiVm9sdW1lXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiWFJQIHZvbHVtZSBpcyAzOTAsNjk2IHZzIDIxLWRheSBhdmcgb2YgNzAzLDAzOCBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIkJlbG93IGF2ZXJhZ2Ugdm9sdW1lICgwLjZ4IGF2ZXJhZ2UpLiBMb3cgbWFya2V0IGFjdGl2aXR5LlwifSwge1wiaW5kaWNhdG9yX25hbWVcIjogXCJWV0FQXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiWFJQIFZXQVAgKDE0LWRheSkgaXMgJDMuNTEgdnMgY3VycmVudCBwcmljZSAkMy40OCBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIlByaWNlIDMuNDggdHJhZGluZyBuZWFyIFZXQVAgMy41MSAoLTAuOCUpLiBCYWxhbmNlZCBtYXJrZXQgd2l0aCBuZXV0cmFsIHNlbnRpbWVudC5cIn1dfSwge1wiYXNzZXRcIjogXCJTT0xcIiwgXCJtb21lbnR1bV9pbmRpY2F0b3JzXCI6IFt7XCJpbmRpY2F0b3JfbmFtZVwiOiBcIlJTSVwiLCBcImZsdWN0dWF0aW9uX2Fuc3dlclwiOiBcIlNPTCBSU0kgKDE0LWRheSkgaXMgNDcuNyBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIlJTSSBhdCA0Ny43IHNob3dzIGJlYXJpc2ggbW9tZW50dW0uIERvd253YXJkIHByZXNzdXJlIG1heSBwZXJzaXN0LlwifSwge1wiaW5kaWNhdG9yX25hbWVcIjogXCJWb2x1bWVcIiwgXCJmbHVjdHVhdGlvbl9hbnN3ZXJcIjogXCJTT0wgdm9sdW1lIGlzIDIsNDk1IHZzIDIxLWRheSBhdmcgb2YgMiw4OTQgb24gMjAyNS0wNy0xNy5cIiwgXCJkaWFnbm9zaXNcIjogXCJOb3JtYWwgdm9sdW1lIGxldmVscyAoMC45eCBhdmVyYWdlKS4gU3RhbmRhcmQgdHJhZGluZyBhY3Rpdml0eS5cIn0sIHtcImluZGljYXRvcl9uYW1lXCI6IFwiVldBUFwiLCBcImZsdWN0dWF0aW9uX2Fuc3dlclwiOiBcIlNPTCBWV0FQICgxNC1kYXkpIGlzICQxNzUuOTAgdnMgY3VycmVudCBwcmljZSAkMTc1Ljg3IG9uIDIwMjUtMDctMTcuXCIsIFwiZGlhZ25vc2lzXCI6IFwiUHJpY2UgMTc1Ljg3IHRyYWRpbmcgbmVhciBWV0FQIDE3NS45MCAoLTAuMCUpLiBCYWxhbmNlZCBtYXJrZXQgd2l0aCBuZXV0cmFsIHNlbnRpbWVudC5cIn1dfSwge1wiYXNzZXRcIjogXCJET0dFXCIsIFwibW9tZW50dW1faW5kaWNhdG9yc1wiOiBbe1wiaW5kaWNhdG9yX25hbWVcIjogXCJSU0lcIiwgXCJmbHVjdHVhdGlvbl9hbnN3ZXJcIjogXCJET0dFIFJTSSAoMTQtZGF5KSBpcyA0NS4yOCBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIlJTSSBhdCA0NS4yOCBzaG93cyBiZWFyaXNoIG1vbWVudHVtLiBEb3dud2FyZCBwcmVzc3VyZSBtYXkgcGVyc2lzdC5cIn0sIHtcImluZGljYXRvcl9uYW1lXCI6IFwiVm9sdW1lXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiRE9HRSB2b2x1bWUgaXMgNzEyLDYwMyB2cyAyMS1kYXkgYXZnIG9mIDEsMjY0LDM5MyBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIkJlbG93IGF2ZXJhZ2Ugdm9sdW1lICgwLjZ4IGF2ZXJhZ2UpLiBMb3cgbWFya2V0IGFjdGl2aXR5LlwifSwge1wiaW5kaWNhdG9yX25hbWVcIjogXCJWV0FQXCIsIFwiZmx1Y3R1YXRpb25fYW5zd2VyXCI6IFwiRE9HRSBWV0FQICgxNC1kYXkpIGlzICQwLjIxODE4MiB2cyBjdXJyZW50IHByaWNlICQwLjIxODI2MCBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIlByaWNlIDAuMjIgdHJhZGluZyBuZWFyIFZXQVAgMC4yMiAoKzAuMCUpLiBCYWxhbmNlZCBtYXJrZXQgd2l0aCBuZXV0cmFsIHNlbnRpbWVudC5cIn1dfSwge1wiYXNzZXRcIjogXCJBREFcIiwgXCJtb21lbnR1bV9pbmRpY2F0b3JzXCI6IFt7XCJpbmRpY2F0b3JfbmFtZVwiOiBcIlJTSVwiLCBcImZsdWN0dWF0aW9uX2Fuc3dlclwiOiBcIkFEQSBSU0kgKDE0LWRheSkgaXMgMzMuOTggb24gMjAyNS0wNy0xNy5cIiwgXCJkaWFnbm9zaXNcIjogXCJSU0kgYXQgMzMuOTggc2hvd3MgYmVhcmlzaCBtb21lbnR1bS4gRG93bndhcmQgcHJlc3N1cmUgbWF5IHBlcnNpc3QuXCJ9LCB7XCJpbmRpY2F0b3JfbmFtZVwiOiBcIlZvbHVtZVwiLCBcImZsdWN0dWF0aW9uX2Fuc3dlclwiOiBcIkFEQSB2b2x1bWUgaXMgMTgyLDA0OSB2cyAyMS1kYXkgYXZnIG9mIDI2OSw2MzMgb24gMjAyNS0wNy0xNy5cIiwgXCJkaWFnbm9zaXNcIjogXCJCZWxvdyBhdmVyYWdlIHZvbHVtZSAoMC43eCBhdmVyYWdlKS4gTG93IG1hcmtldCBhY3Rpdml0eS5cIn0sIHtcImluZGljYXRvcl9uYW1lXCI6IFwiVldBUFwiLCBcImZsdWN0dWF0aW9uX2Fuc3dlclwiOiBcIkFEQSBWV0FQICgxNC1kYXkpIGlzICQwLjgyMzk0MiB2cyBjdXJyZW50IHByaWNlICQwLjgyMTYwMCBvbiAyMDI1LTA3LTE3LlwiLCBcImRpYWdub3Npc1wiOiBcIlByaWNlIDAuODIgdHJhZGluZyBuZWFyIFZXQVAgMC44MiAoLTAuMyUpLiBCYWxhbmNlZCBtYXJrZXQgd2l0aCBuZXV0cmFsIHNlbnRpbWVudC5cIn1dfV0sIFwib3ZlcmFsbF9kaWFnbm9zaXNcIjogXCJCYXNlZCBvbiB0aGUgcHJvdmlkZWQgY3J5cHRvIHBvcnRmb2xpbyBhbmFseXNpcywgdGhlIG92ZXJhbGwgZGlhZ25vc2lzIGlzIGFzIGZvbGxvd3M6XFxuXFxuVGhlIGN1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBoYXMgYSBoaWdoIGV4cG9zdXJlIHRvIHZvbGF0aWxlIGNyeXB0b2N1cnJlbmNpZXMsIHdpdGggMTAwJSBhbGxvY2F0aW9uIHRvIGRpZ2l0YWwgYXNzZXRzIGFuZCBubyBzdGFibGVjb2luIGV4cG9zdXJlLiBUaGUgcG9ydGZvbGlvIGlzIGhlYXZpbHkgd2VpZ2h0ZWQgdG93YXJkcyBCaXRjb2luICg2MCUpLCB3aGljaCBpcyBleGhpYml0aW5nIGEgYmVhcmlzaCB0cmVuZCBjb25maXJtZWQgYnkgdGhlIG1vdmluZyBhdmVyYWdlIGFuYWx5c2lzLiBFdGhlcmV1bSAoMjAlKSwgWFJQICg1JSksIGFuZCBDYXJkYW5vICg1JSkgYXJlIGFsc28gc2hvd2luZyBiZWFyaXNoIG1vbWVudHVtLCB3aXRoIHRoZWlyIGNsb3NlIHByaWNlcyB0cmFkaW5nIGJlbG93IHRoZSBzaG9ydC10ZXJtIG1vdmluZyBhdmVyYWdlcy5cXG5cXG5UaGUgbW9tZW50dW0gaW5kaWNhdG9ycyBmdXJ0aGVyIHJlaW5mb3JjZSB0aGUgYmVhcmlzaCBzZW50aW1lbnQsIHdpdGggdGhlIFJTSSBmb3IgbW9zdCBjcnlwdG9jdXJyZW5jaWVzIGluIHRoZSBwb3J0Zm9saW8gaW5kaWNhdGluZyBvdmVyc29sZCBvciBiZWFyaXNoIGNvbmRpdGlvbnMuIFRoZSB0cmFkaW5nIHZvbHVtZSBpcyBhbHNvIGJlbG93IGF2ZXJhZ2UgZm9yIHNldmVyYWwgYXNzZXRzLCBzdWdnZXN0aW5nIGxvdyBtYXJrZXQgYWN0aXZpdHkgYW5kIHBvdGVudGlhbCBjb250aW51ZWQgZG93bndhcmQgcHJlc3N1cmUuXFxuXFxuVG8gYWRkcmVzcyB0aGUgaGlnaC1yaXNrIHByb2ZpbGUgYW5kIGxhY2sgb2YgZGl2ZXJzaWZpY2F0aW9uLCB0aGUgZm9sbG93aW5nIHJlY29tbWVuZGF0aW9ucyBhcmUgcHJvdmlkZWQ6XFxuXFxuMS4gUmVkdWNlIHRoZSBvdmVyYWxsIGNyeXB0b2N1cnJlbmN5IGV4cG9zdXJlIGJ5IGFsbG9jYXRpbmcgYSBwb3J0aW9uIG9mIHRoZSBwb3J0Zm9saW8gdG8gc3RhYmxlY29pbnMuIEEgMjAtMzAlIGFsbG9jYXRpb24gdG8gc3RhYmxlY29pbnMsIHN1Y2ggYXMgVVNEQyBvciBEQUksIHdvdWxkIHByb3ZpZGUgc3RhYmlsaXR5IGFuZCByZWR1Y2UgdGhlIHBvcnRmb2xpbydzIHZvbGF0aWxpdHkuXFxuXFxuMi4gUmViYWxhbmNlIHRoZSBjcnlwdG9jdXJyZW5jeSBhbGxvY2F0aW9uIHRvIGFjaGlldmUgYmV0dGVyIGRpdmVyc2lmaWNhdGlvbi4gQ29uc2lkZXIgcmVkdWNpbmcgdGhlIEJpdGNvaW4gZXhwb3N1cmUgdG8gNDAtNTAlIGFuZCBpbmNyZWFzaW5nIHRoZSBhbGxvY2F0aW9uIHRvIEV0aGVyZXVtICgyNS0zMCUpLCBTb2xhbmEgKDEwLTE1JSksIGFuZCBEb2dlY29pbiAoNS0xMCUpLiBUaGlzIHdvdWxkIHByb3ZpZGUgbW9yZSBiYWxhbmNlZCBleHBvc3VyZSB0byBkaWZmZXJlbnQgc2VjdG9ycyBvZiB0aGUgY3J5cHRvIG1hcmtldC5cXG5cXG4zLiBDbG9zZWx5IG1vbml0b3IgdGhlIHNob3J0LXRlcm0gbW9tZW50dW0gaW5kaWNhdG9ycyBhbmQgY29uc2lkZXIgdGFjdGljYWwgYWRqdXN0bWVudHMgdG8gdGhlIHBvcnRmb2xpbyBhcyB0aGUgbWFya2V0IGNvbmRpdGlvbnMgZXZvbHZlLiBNYWludGFpbiBhIGRpc2NpcGxpbmVkIGFwcHJvYWNoIHRvIHJpc2sgbWFuYWdlbWVudCBhbmQgYmUgcHJlcGFyZWQgdG8gdGFrZSBhY3Rpb24gdG8gcHJvdGVjdCB0aGUgcG9ydGZvbGlvJ3MgdmFsdWUgZHVyaW5nIHBlcmlvZHMgb2YgaGVpZ2h0ZW5lZCB2b2xhdGlsaXR5LlxcblxcbkJ5IGltcGxlbWVudGluZyB0aGVzZSByZWNvbW1lbmRhdGlvbnMsIHRoZSBwb3J0Zm9saW8gY2FuIGFjaGlldmUgYSBiZXR0ZXIgYmFsYW5jZSBiZXR3ZWVuIGdyb3d0aCBhbmQgc3RhYmlsaXR5LCBhbGlnbmluZyB3aXRoIHRoZSBcXFwiTWl4IG9mIGdyb3d0aCBhbmQgc3RhYmlsaXR5LCBtb2RlcmF0ZSByaXNrXFxcIiByaXNrIHByb2ZpbGUuXCIsIFwicG9ydGZvbGlvX2Fzc2V0c1wiOiBbXCJCVENcIiwgXCJFVEhcIiwgXCJYUlBcIiwgXCJTT0xcIiwgXCJET0dFXCIsIFwiQURBXCJdfV0sIFwicG9ydGZvbGlvX2NvbnRleHRcIjogXCJBbmFseXNpcyBmb3IgY3J5cHRvIHBvcnRmb2xpbyBjb250YWluaW5nOiBCVEMsIEVUSCwgWFJQLCBTT0wsIERPR0UsIEFEQVwiLCBcInJlcG9ydF9kYXRlXCI6IFwiMjAyNTA3MjVcIn0iLCAidHlwZSI6ICJ0b29sIiwgIm5hbWUiOiAiY3J5cHRvX2FuYWx5c2lzX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29sIiwgImlkIjogIjU2OTZkYzVkLTRlZmMtNDlkOC1iMThiLTk4MDU1Y2I5MzE0NiIsICJ0b29sX2NhbGxfaWQiOiAidG9vbHVfYmRya18wMUFrQVJMRDNncGI5SDN3VzlYdUpaZnUiLCAic3RhdHVzIjogInN1Y2Nlc3MifX1d",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "NA==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d227-f045-6bde-8003-ef8d38943929",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd435023acaf9fbae65d"
  },
  "checkpoint_id": "1f06d227-ff22-6305-8005-1d6eb1e5a285",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICIiLCAiYWRkaXRpb25hbF9rd2FyZ3MiOiB7InVzYWdlIjogeyJwcm9tcHRfdG9rZW5zIjogODYxMywgImNvbXBsZXRpb25fdG9rZW5zIjogNjUsICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogODY3OH0sICJzdG9wX3JlYXNvbiI6ICJ0b29sX3VzZSIsICJ0aGlua2luZyI6IHt9LCAibW9kZWxfaWQiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAiLCAibW9kZWxfbmFtZSI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCJ9LCAicmVzcG9uc2VfbWV0YWRhdGEiOiB7InVzYWdlIjogeyJwcm9tcHRfdG9rZW5zIjogODYxMywgImNvbXBsZXRpb25fdG9rZW5zIjogNjUsICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogODY3OH0sICJzdG9wX3JlYXNvbiI6ICJ0b29sX3VzZSIsICJ0aGlua2luZyI6IHt9LCAibW9kZWxfaWQiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAiLCAibW9kZWxfbmFtZSI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCJ9LCAidHlwZSI6ICJhaSIsICJpZCI6ICJydW4tLTZiMjY2ODQxLTVhY2UtNGE5Ny1iYjBmLTZiNDcwYTI1YTI1Yy0wIiwgInRvb2xfY2FsbHMiOiBbeyJuYW1lIjogImNyeXB0b19uZXdzX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29sIiwgImFyZ3MiOiB7InF1ZXJ5IjogImNyeXB0byBwb3J0Zm9saW8gbmV3cyBzZW50aW1lbnQifSwgImlkIjogInRvb2x1X2JkcmtfMDFQU1QycXdhTmlITXlDRkdubW9CY0FQIiwgInR5cGUiOiAidG9vbF9jYWxsIn1dLCAidXNhZ2VfbWV0YWRhdGEiOiB7ImlucHV0X3Rva2VucyI6IDg2MTMsICJvdXRwdXRfdG9rZW5zIjogNjUsICJ0b3RhbF90b2tlbnMiOiA4Njc4LCAiaW5wdXRfdG9rZW5fZGV0YWlscyI6IHsiY2FjaGVfY3JlYXRpb24iOiAwLCAiY2FjaGVfcmVhZCI6IDB9fSwgImludmFsaWRfdG9vbF9jYWxscyI6IFtdfX1d",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "NQ==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d227-f270-69cf-8004-d2ca27d13ea1",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd435023acaf9fbae660"
  },
  "checkpoint_id": "1f06d228-015d-6313-8006-f8c6cb03136b",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Ng==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d227-ff22-6305-8005-1d6eb1e5a285",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd455023acaf9fbae663"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint_id": "1f06d228-113f-6be1-8007-e85cb012286c",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICIiLCAiYWRkaXRpb25hbF9rd2FyZ3MiOiB7InVzYWdlIjogeyJwcm9tcHRfdG9rZW5zIjogMTU1MjYsICJjb21wbGV0aW9uX3Rva2VucyI6IDY4LCAiY2FjaGVfcmVhZF9pbnB1dF90b2tlbnMiOiAwLCAiY2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zIjogMCwgInRvdGFsX3Rva2VucyI6IDE1NTk0fSwgInN0b3BfcmVhc29uIjogInRvb2xfdXNlIiwgInRoaW5raW5nIjoge30sICJtb2RlbF9pZCI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCIsICJtb2RlbF9uYW1lIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIn0sICJyZXNwb25zZV9tZXRhZGF0YSI6IHsidXNhZ2UiOiB7InByb21wdF90b2tlbnMiOiAxNTUyNiwgImNvbXBsZXRpb25fdG9rZW5zIjogNjgsICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogMTU1OTR9LCAic3RvcF9yZWFzb24iOiAidG9vbF91c2UiLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInR5cGUiOiAiYWkiLCAiaWQiOiAicnVuLS01OGJiMjYwYS1mOTZiLTQ5M2YtODY3Yi00YTg1MDU0MGNlMjctMCIsICJ0b29sX2NhbGxzIjogW3sibmFtZSI6ICJjcnlwdG9fc29jaWFsX21lZGlhX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29sIiwgImFyZ3MiOiB7InF1ZXJ5IjogImNyeXB0byBwb3J0Zm9saW8gc29jaWFsIG1lZGlhIHNlbnRpbWVudCJ9LCAiaWQiOiAidG9vbHVfYmRya18wMTViRjk2cXBHRkx1VHNraDRDM3VSOHMiLCAidHlwZSI6ICJ0b29sX2NhbGwifV0sICJ1c2FnZV9tZXRhZGF0YSI6IHsiaW5wdXRfdG9rZW5zIjogMTU1MjYsICJvdXRwdXRfdG9rZW5zIjogNjgsICJ0b3RhbF90b2tlbnMiOiAxNTU5NCwgImlucHV0X3Rva2VuX2RldGFpbHMiOiB7ImNhY2hlX2NyZWF0aW9uIjogMCwgImNhY2hlX3JlYWQiOiAwfX0sICJpbnZhbGlkX3Rvb2xfY2FsbHMiOiBbXX19XQ==",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Nw==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d228-015d-6313-8006-f8c6cb03136b",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd455023acaf9fbae666"
  },
  "checkpoint_id": "1f06d228-13c3-6fdc-8008-fab6b30f2613",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "OA==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d228-113f-6be1-8007-e85cb012286c",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd4c5023acaf9fbae668"
  },
  "checkpoint_id": "1f06d228-5c37-6235-8009-d8ab4a7219e8",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICI8cmVzdWx0PlxuQmFzZWQgb24gdGhlIGNvbXByZWhlbnNpdmUgYW5hbHlzaXMgb2YgeW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8sIGhlcmUgYXJlIG15IGtleSBpbnNpZ2h0cyBhbmQgcmVjb21tZW5kYXRpb25zOlxuXG5Qb3J0Zm9saW8gQWxsb2NhdGlvbjpcbllvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGhhcyBhIGhlYXZ5IGZvY3VzIG9uIEJpdGNvaW4gKDYwJSksIHdpdGggdGhlIHJlc3Qgc3BsaXQgYmV0d2VlbiBFdGhlcmV1bSAoMjAlKSBhbmQgc21hbGxlciBhbGxvY2F0aW9ucyB0byBYUlAsIFNvbGFuYSwgRG9nZWNvaW4sIGFuZCBDYXJkYW5vLiBUaGlzIGFsbG9jYXRpb24gaXMgaGVhdmlseSB3ZWlnaHRlZCB0b3dhcmRzIHZvbGF0aWxlIGNyeXB0b2N1cnJlbmNpZXMsIHdpdGggbm8gc3RhYmxlY29pbiBleHBvc3VyZS5cblxuTWFya2V0IENvbmRpdGlvbnMgYW5kIFRyZW5kczpcblRoZSBtYXJrZXQgYW5hbHlzaXMgc2hvd3MgYSBwcmVkb21pbmFudGx5IGJlYXJpc2ggb3V0bG9vayBmb3IgeW91ciBwb3J0Zm9saW8gaG9sZGluZ3MsIHdpdGggQml0Y29pbiwgRXRoZXJldW0sIFhSUCwgYW5kIENhcmRhbm8gYWxsIGV4aGliaXRpbmcgYmVhcmlzaCBtb21lbnR1bSBiYXNlZCBvbiBtb3ZpbmcgYXZlcmFnZSBhbmQgUlNJIGluZGljYXRvcnMuIFNvbGFuYSBhbmQgRG9nZWNvaW4gYXJlIHNob3dpbmcgbW9yZSBtaXhlZCBzaWduYWxzLCB3aXRoIHBvdGVudGlhbCBzdXBwb3J0IGxldmVscyB0byB3YXRjaC5cblxuU2VudGltZW50IEFuYWx5c2lzOlxuVGhlIG5ld3MgYW5kIHNvY2lhbCBtZWRpYSBzZW50aW1lbnQgYW5hbHlzaXMgcGFpbnRzIGEgbWl4ZWQgcGljdHVyZS4gQml0Y29pbiwgRXRoZXJldW0sIFhSUCwgYW5kIENhcmRhbm8gYXJlIHZpZXdlZCBwb3NpdGl2ZWx5IGJ5IHRoZSBjb21tdW5pdHksIHdpdGggaW52ZXN0b3JzIG9wdGltaXN0aWMgYWJvdXQgdGhlaXIgbG9uZy10ZXJtIHByb3NwZWN0cy4gSG93ZXZlciwgU29sYW5hIGFuZCBEb2dlY29pbiBmYWNlIG1vcmUgbmV1dHJhbCB0byBuZWdhdGl2ZSBzZW50aW1lbnQsIHdpdGggY29uY2VybnMgYWJvdXQgdGhlaXIgc3VzdGFpbmFiaWxpdHkgYW5kIHZvbGF0aWxpdHkuXG5cblJlY29tbWVuZGF0aW9uczpcblRvIGFkZHJlc3MgdGhlIGhpZ2gtcmlzayBwcm9maWxlIGFuZCBsYWNrIG9mIGRpdmVyc2lmaWNhdGlvbiBpbiB5b3VyIGN1cnJlbnQgcG9ydGZvbGlvLCBJIHdvdWxkIHJlY29tbWVuZCB0aGUgZm9sbG93aW5nOlxuXG4xLiBSZWR1Y2Ugb3ZlcmFsbCBjcnlwdG9jdXJyZW5jeSBleHBvc3VyZSBieSBhbGxvY2F0aW5nIDIwLTMwJSBvZiB0aGUgcG9ydGZvbGlvIHRvIHN0YWJsZWNvaW5zIGxpa2UgVVNEQyBvciBEQUkuIFRoaXMgd2lsbCBwcm92aWRlIHN0YWJpbGl0eSBhbmQgcmVkdWNlIHRoZSBwb3J0Zm9saW8ncyB2b2xhdGlsaXR5LlxuXG4yLiBSZWJhbGFuY2UgdGhlIGNyeXB0b2N1cnJlbmN5IGFsbG9jYXRpb24gdG8gYWNoaWV2ZSBiZXR0ZXIgZGl2ZXJzaWZpY2F0aW9uLiBDb25zaWRlciByZWR1Y2luZyB0aGUgQml0Y29pbiBleHBvc3VyZSB0byA0MC01MCUgYW5kIGluY3JlYXNpbmcgdGhlIGFsbG9jYXRpb24gdG8gRXRoZXJldW0gKDI1LTMwJSksIFNvbGFuYSAoMTAtMTUlKSwgYW5kIERvZ2Vjb2luICg1LTEwJSkuIFRoaXMgd291bGQgcHJvdmlkZSBtb3JlIGJhbGFuY2VkIGV4cG9zdXJlIHRvIGRpZmZlcmVudCBzZWN0b3JzIG9mIHRoZSBjcnlwdG8gbWFya2V0LlxuXG4zLiBDbG9zZWx5IG1vbml0b3IgdGhlIHNob3J0LXRlcm0gbW9tZW50dW0gaW5kaWNhdG9ycyBhbmQgYmUgcHJlcGFyZWQgdG8gbWFrZSB0YWN0aWNhbCBhZGp1c3RtZW50cyB0byB0aGUgcG9ydGZvbGlvIGFzIG1hcmtldCBjb25kaXRpb25zIGV2b2x2ZS4gTWFpbnRhaW4gYSBkaXNjaXBsaW5lZCBhcHByb2FjaCB0byByaXNrIG1hbmFnZW1lbnQgYW5kIGJlIHJlYWR5IHRvIHRha2UgYWN0aW9uIHRvIHByb3RlY3QgdGhlIHBvcnRmb2xpbydzIHZhbHVlIGR1cmluZyBwZXJpb2RzIG9mIGhlaWdodGVuZWQgdm9sYXRpbGl0eS5cblxuQnkgaW1wbGVtZW50aW5nIHRoZXNlIHJlY29tbWVuZGF0aW9ucywgeW91ciBwb3J0Zm9saW8gY2FuIGFjaGlldmUgYSBiZXR0ZXIgYmFsYW5jZSBiZXR3ZWVuIGdyb3d0aCBhbmQgc3RhYmlsaXR5LCBhbGlnbmluZyB3aXRoIHlvdXIgXCJCQUxBTkNFXCIgcmlzayBwcm9maWxlLiBUaGlzIGFwcHJvYWNoIHNob3VsZCBoZWxwIHlvdSBuYXZpZ2F0ZSB0aGUgY3VycmVudCBtYXJrZXQgZW52aXJvbm1lbnQgbW9yZSBlZmZlY3RpdmVseSBhbmQgcG9zaXRpb24geW91ciBpbnZlc3RtZW50cyBmb3IgbG9uZy10ZXJtIHN1Y2Nlc3MuXG5cbldvdWxkIHlvdSBsaWtlIG1lIHRvIHByb3ZpZGUgYW55IGFkZGl0aW9uYWwgZGV0YWlscyBvciBjbGFyaWZpY2F0aW9uIG9uIHRoZXNlIHJlY29tbWVuZGF0aW9ucz8gWUVTL05PXG48L3Jlc3VsdD4iLCAiYWRkaXRpb25hbF9rd2FyZ3MiOiB7InVzYWdlIjogeyJwcm9tcHRfdG9rZW5zIjogNDkwNzQsICJjb21wbGV0aW9uX3Rva2VucyI6IDUyMSwgImNhY2hlX3JlYWRfaW5wdXRfdG9rZW5zIjogMCwgImNhY2hlX3dyaXRlX2lucHV0X3Rva2VucyI6IDAsICJ0b3RhbF90b2tlbnMiOiA0OTU5NX0sICJzdG9wX3JlYXNvbiI6ICJlbmRfdHVybiIsICJ0aGlua2luZyI6IHt9LCAibW9kZWxfaWQiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAiLCAibW9kZWxfbmFtZSI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCJ9LCAicmVzcG9uc2VfbWV0YWRhdGEiOiB7InVzYWdlIjogeyJwcm9tcHRfdG9rZW5zIjogNDkwNzQsICJjb21wbGV0aW9uX3Rva2VucyI6IDUyMSwgImNhY2hlX3JlYWRfaW5wdXRfdG9rZW5zIjogMCwgImNhY2hlX3dyaXRlX2lucHV0X3Rva2VucyI6IDAsICJ0b3RhbF90b2tlbnMiOiA0OTU5NX0sICJzdG9wX3JlYXNvbiI6ICJlbmRfdHVybiIsICJ0aGlua2luZyI6IHt9LCAibW9kZWxfaWQiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAiLCAibW9kZWxfbmFtZSI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCJ9LCAidHlwZSI6ICJhaSIsICJpZCI6ICJydW4tLTMzNmZmYjMyLTM4YTgtNGQwYy05OTM4LThhY2U2YWFlMWI5NS0wIiwgInVzYWdlX21ldGFkYXRhIjogeyJpbnB1dF90b2tlbnMiOiA0OTA3NCwgIm91dHB1dF90b2tlbnMiOiA1MjEsICJ0b3RhbF90b2tlbnMiOiA0OTU5NSwgImlucHV0X3Rva2VuX2RldGFpbHMiOiB7ImNhY2hlX2NyZWF0aW9uIjogMCwgImNhY2hlX3JlYWQiOiAwfX0sICJ0b29sX2NhbGxzIjogW10sICJpbnZhbGlkX3Rvb2xfY2FsbHMiOiBbXX19XQ==",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "OQ==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d228-13c3-6fdc-8008-fab6b30f2613",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd715023acaf9fbae669"
  },
  "checkpoint_id": "1f06d229-b8dc-68ac-bfff-225db7913dbe",
  "thread_id": "thread_20250730_085302",
  "checkpoint_ns": "",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MzowNS40NTYxMzYrMDA6MDCiaWTZJDFmMDZkMjI5LWI4ZGMtNjhhYy1iZmZmLTIyNWRiNzkxM2RiZa5jaGFubmVsX3ZhbHVlc4GpX19zdGFydF9fgahtZXNzYWdlc5HIAV0FlL1sYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5odW1hbqxIdW1hbk1lc3NhZ2WHp2NvbnRlbnTZqUNvbnNpZGVyaW5nIHRoZSBjdXJyZW50IGNyeXB0byBtYXJrZXQgY29uZGl0aW9ucywgbW9tZW50dW0sIGFuZCBzZW50aW1lbnQgZnJvbSBzb2NpYWwgbWVkaWEgYW5kIG5ld3MsIHdoYXQgd291bGQgYmUgdGhlIG9wdGltYWwgY3J5cHRvIGFzc2V0IGFsbG9jYXRpb24gZm9yIG15IHBvcnRmb2xpbz+xYWRkaXRpb25hbF9rd2FyZ3OAsXJlc3BvbnNlX21ldGFkYXRhgKR0eXBlpWh1bWFupG5hbWXAomlk2SRhODcxZjgyNS0yZjM2LTRjNjYtYjUzOC1iNWEzYWNkMjI5YzenZXhhbXBsZcKzbW9kZWxfdmFsaWRhdGVfanNvbrBjaGFubmVsX3ZlcnNpb25zgalfX3N0YXJ0X18BrXZlcnNpb25zX3NlZW6BqV9faW5wdXRfX4CtcGVuZGluZ19zZW5kc5A=",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "ImlucHV0Ig==",
        "subType": "00"
      }
    },
    "writes": {
      "__start__": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJIdW1hbk1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/IiwgInR5cGUiOiAiaHVtYW4iLCAiaWQiOiAiYTg3MWY4MjUtMmYzNi00YzY2LWI1MzgtYjVhM2FjZDIyOWM3In19XQ==",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "LTE=",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": null,
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd715023acaf9fbae66c"
  },
  "checkpoint_id": "1f06d229-b8dd-6669-8000-835dbfcc302c",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MzowNS40NTY0ODcrMDA6MDCiaWTZJDFmMDZkMjI5LWI4ZGQtNjY2OS04MDAwLTgzNWRiZmNjMzAyY65jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXORyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkYTg3MWY4MjUtMmYzNi00YzY2LWI1MzgtYjVhM2FjZDIyOWM3p2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb26vYnJhbmNoOnRvOmFnZW50wLBjaGFubmVsX3ZlcnNpb25zg6lfX3N0YXJ0X18CqG1lc3NhZ2VzAq9icmFuY2g6dG86YWdlbnQCrXZlcnNpb25zX3NlZW6CqV9faW5wdXRfX4CpX19zdGFydF9fgalfX3N0YXJ0X18BrXBlbmRpbmdfc2VuZHOQ",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "$binary": {
        "base64": "bnVsbA==",
        "subType": "00"
      }
    },
    "step": {
      "$binary": {
        "base64": "MA==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d229-b8dc-68ac-bfff-225db7913dbe",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd725023acaf9fbae66f"
  },
  "checkpoint_id": "1f06d229-c51f-6e60-8001-8203bd4906b5",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MzowNi43NDIwMDYrMDA6MDCiaWTZJDFmMDZkMjI5LWM1MWYtNmU2MC04MDAxLTgyMDNiZDQ5MDZiNa5jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXOSyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkYTg3MWY4MjUtMmYzNi00YzY2LWI1MzgtYjVhM2FjZDIyOWM3p2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb27IBEEFlLpsYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5haalBSU1lc3NhZ2WKp2NvbnRlbnTZkU9rYXksIGxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gYW5kIHRoZW4gYW5hbHl6ZSB0aGUgbWFya2V0IGNvbmRpdGlvbnMgdG8gcHJvdmlkZSBhIHJlY29tbWVuZGVkIHJlYWxsb2NhdGlvbi6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzRW+sWNvbXBsZXRpb25fdG9rZW5zWbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNFherc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tNjYxNjM5MTYtNDM4NC00ODdkLWJmNmYtOWRkNWRmZjljYWE4LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWW9Z2V0X3BvcnRmb2xpb19hbGxvY2F0aW9uX3Rvb2ykYXJnc4GlcXVlcnnZI2N1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uomlk2SN0b29sdV9iZHJrXzAxNUxFN0g4NkwzVlRETkhoc0xQaUZwVKR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNFb6tb3V0cHV0X3Rva2Vuc1msdG90YWxfdG9rZW5zzRYXs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29ur2JyYW5jaDp0bzp0b29sc8CwY2hhbm5lbF92ZXJzaW9uc4SpX19zdGFydF9fAqhtZXNzYWdlcwOvYnJhbmNoOnRvOmFnZW50A69icmFuY2g6dG86dG9vbHMDrXZlcnNpb25zX3NlZW6DqV9faW5wdXRfX4CpX19zdGFydF9fgalfX3N0YXJ0X18BpWFnZW50ga9icmFuY2g6dG86YWdlbnQCrXBlbmRpbmdfc2VuZHOQ",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJPa2F5LCBsZXQncyB0YWtlIGEgbG9vayBhdCB5b3VyIGN1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uIGFuZCB0aGVuIGFuYWx5emUgdGhlIG1hcmtldCBjb25kaXRpb25zIHRvIHByb3ZpZGUgYSByZWNvbW1lbmRlZCByZWFsbG9jYXRpb24uIiwgImFkZGl0aW9uYWxfa3dhcmdzIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDU1NjYsICJjb21wbGV0aW9uX3Rva2VucyI6IDg5LCAiY2FjaGVfcmVhZF9pbnB1dF90b2tlbnMiOiAwLCAiY2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zIjogMCwgInRvdGFsX3Rva2VucyI6IDU2NTV9LCAic3RvcF9yZWFzb24iOiAidG9vbF91c2UiLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInJlc3BvbnNlX21ldGFkYXRhIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDU1NjYsICJjb21wbGV0aW9uX3Rva2VucyI6IDg5LCAiY2FjaGVfcmVhZF9pbnB1dF90b2tlbnMiOiAwLCAiY2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zIjogMCwgInRvdGFsX3Rva2VucyI6IDU2NTV9LCAic3RvcF9yZWFzb24iOiAidG9vbF91c2UiLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInR5cGUiOiAiYWkiLCAiaWQiOiAicnVuLS02NjE2MzkxNi00Mzg0LTQ4N2QtYmY2Zi05ZGQ1ZGZmOWNhYTgtMCIsICJ0b29sX2NhbGxzIjogW3sibmFtZSI6ICJnZXRfcG9ydGZvbGlvX2FsbG9jYXRpb25fdG9vbCIsICJhcmdzIjogeyJxdWVyeSI6ICJjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiJ9LCAiaWQiOiAidG9vbHVfYmRya18wMTVMRTdIODZMM1ZURE5IaHNMUGlGcFQiLCAidHlwZSI6ICJ0b29sX2NhbGwifV0sICJ1c2FnZV9tZXRhZGF0YSI6IHsiaW5wdXRfdG9rZW5zIjogNTU2NiwgIm91dHB1dF90b2tlbnMiOiA4OSwgInRvdGFsX3Rva2VucyI6IDU2NTUsICJpbnB1dF90b2tlbl9kZXRhaWxzIjogeyJjYWNoZV9jcmVhdGlvbiI6IDAsICJjYWNoZV9yZWFkIjogMH19LCAiaW52YWxpZF90b29sX2NhbGxzIjogW119fV0=",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "MQ==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d229-b8dd-6669-8000-835dbfcc302c",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd725023acaf9fbae672"
  },
  "checkpoint_id": "1f06d229-c54d-62af-8002-58f6be2a5c82",
  "thread_id": "thread_20250730_085302",
  "checkpoint_ns": "",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MzowNi43NjA1NTMrMDA6MDCiaWTZJDFmMDZkMjI5LWM1NGQtNjJhZi04MDAyLTU4ZjZiZTJhNWM4Mq5jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXOTyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkYTg3MWY4MjUtMmYzNi00YzY2LWI1MzgtYjVhM2FjZDIyOWM3p2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb27IBEEFlLpsYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5haalBSU1lc3NhZ2WKp2NvbnRlbnTZkU9rYXksIGxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gYW5kIHRoZW4gYW5hbHl6ZSB0aGUgbWFya2V0IGNvbmRpdGlvbnMgdG8gcHJvdmlkZSBhIHJlY29tbWVuZGVkIHJlYWxsb2NhdGlvbi6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzRW+sWNvbXBsZXRpb25fdG9rZW5zWbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNFherc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tNjYxNjM5MTYtNDM4NC00ODdkLWJmNmYtOWRkNWRmZjljYWE4LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWW9Z2V0X3BvcnRmb2xpb19hbGxvY2F0aW9uX3Rvb2ykYXJnc4GlcXVlcnnZI2N1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uomlk2SN0b29sdV9iZHJrXzAxNUxFN0g4NkwzVlRETkhoc0xQaUZwVKR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNFb6tb3V0cHV0X3Rva2Vuc1msdG90YWxfdG9rZW5zzRYXs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29uyAUoBZS8bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMudG9vbKtUb29sTWVzc2FnZYmnY29udGVudNoEF3sicmVzdWx0cyI6IFt7InN5bWJvbCI6ICJCVEMiLCAiZGVzY3JpcHRpb24iOiAiQml0Y29pbiIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNjAlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNjAsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkJUQ1VTRFQifSwgeyJzeW1ib2wiOiAiRVRIIiwgImRlc2NyaXB0aW9uIjogIkV0aGVyZXVtIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICIyMCUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiAyMCwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRVRIVVNEVCJ9LCB7InN5bWJvbCI6ICJYUlAiLCAiZGVzY3JpcHRpb24iOiAiWFJQIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIlhSUFVTRFQifSwgeyJzeW1ib2wiOiAiU09MIiwgImRlc2NyaXB0aW9uIjogIlNvbGFuYSIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNSUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiA1LCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJTT0xVU0RUIn0sIHsic3ltYm9sIjogIkRPR0UiLCAiZGVzY3JpcHRpb24iOiAiRG9nZWNvaW4iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRE9HRVVTRFQifSwgeyJzeW1ib2wiOiAiQURBIiwgImRlc2NyaXB0aW9uIjogIkNhcmRhbm8iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiQURBVVNEVCJ9XSwgInRvdGFsX2Fzc2V0cyI6IDYsICJwb3J0Zm9saW9fdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSBQb3J0Zm9saW8ifbFhZGRpdGlvbmFsX2t3YXJnc4CxcmVzcG9uc2VfbWV0YWRhdGGApHR5cGWkdG9vbKRuYW1lvWdldF9wb3J0Zm9saW9fYWxsb2NhdGlvbl90b29somlk2SQ4ODAyZjdhZS00NzU3LTRkMzMtYmIxMy0yN2ZhZWYwMjI0ZDesdG9vbF9jYWxsX2lk2SN0b29sdV9iZHJrXzAxNUxFN0g4NkwzVlRETkhoc0xQaUZwVKhhcnRpZmFjdMCmc3RhdHVzp3N1Y2Nlc3OzbW9kZWxfdmFsaWRhdGVfanNvbq9icmFuY2g6dG86YWdlbnTAsGNoYW5uZWxfdmVyc2lvbnOEqV9fc3RhcnRfXwKobWVzc2FnZXMEr2JyYW5jaDp0bzphZ2VudASvYnJhbmNoOnRvOnRvb2xzBK12ZXJzaW9uc19zZWVuhKlfX2lucHV0X1+AqV9fc3RhcnRfX4GpX19zdGFydF9fAaVhZ2VudIGvYnJhbmNoOnRvOmFnZW50AqV0b29sc4GvYnJhbmNoOnRvOnRvb2xzA61wZW5kaW5nX3NlbmRzkA==",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJUb29sTWVzc2FnZSJdLCAia3dhcmdzIjogeyJjb250ZW50IjogIntcInJlc3VsdHNcIjogW3tcInN5bWJvbFwiOiBcIkJUQ1wiLCBcImRlc2NyaXB0aW9uXCI6IFwiQml0Y29pblwiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjYwJVwiLCBcImFsbG9jYXRpb25fbnVtYmVyXCI6IDYwLCBcImFzc2V0X3R5cGVcIjogXCJDcnlwdG9jdXJyZW5jeVwiLCBcImJpbmFuY2Vfc3ltYm9sXCI6IFwiQlRDVVNEVFwifSwge1wic3ltYm9sXCI6IFwiRVRIXCIsIFwiZGVzY3JpcHRpb25cIjogXCJFdGhlcmV1bVwiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjIwJVwiLCBcImFsbG9jYXRpb25fbnVtYmVyXCI6IDIwLCBcImFzc2V0X3R5cGVcIjogXCJDcnlwdG9jdXJyZW5jeVwiLCBcImJpbmFuY2Vfc3ltYm9sXCI6IFwiRVRIVVNEVFwifSwge1wic3ltYm9sXCI6IFwiWFJQXCIsIFwiZGVzY3JpcHRpb25cIjogXCJYUlBcIiwgXCJhbGxvY2F0aW9uX3BlcmNlbnRhZ2VcIjogXCI1JVwiLCBcImFsbG9jYXRpb25fbnVtYmVyXCI6IDUsIFwiYXNzZXRfdHlwZVwiOiBcIkNyeXB0b2N1cnJlbmN5XCIsIFwiYmluYW5jZV9zeW1ib2xcIjogXCJYUlBVU0RUXCJ9LCB7XCJzeW1ib2xcIjogXCJTT0xcIiwgXCJkZXNjcmlwdGlvblwiOiBcIlNvbGFuYVwiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjUlXCIsIFwiYWxsb2NhdGlvbl9udW1iZXJcIjogNSwgXCJhc3NldF90eXBlXCI6IFwiQ3J5cHRvY3VycmVuY3lcIiwgXCJiaW5hbmNlX3N5bWJvbFwiOiBcIlNPTFVTRFRcIn0sIHtcInN5bWJvbFwiOiBcIkRPR0VcIiwgXCJkZXNjcmlwdGlvblwiOiBcIkRvZ2Vjb2luXCIsIFwiYWxsb2NhdGlvbl9wZXJjZW50YWdlXCI6IFwiNSVcIiwgXCJhbGxvY2F0aW9uX251bWJlclwiOiA1LCBcImFzc2V0X3R5cGVcIjogXCJDcnlwdG9jdXJyZW5jeVwiLCBcImJpbmFuY2Vfc3ltYm9sXCI6IFwiRE9HRVVTRFRcIn0sIHtcInN5bWJvbFwiOiBcIkFEQVwiLCBcImRlc2NyaXB0aW9uXCI6IFwiQ2FyZGFub1wiLCBcImFsbG9jYXRpb25fcGVyY2VudGFnZVwiOiBcIjUlXCIsIFwiYWxsb2NhdGlvbl9udW1iZXJcIjogNSwgXCJhc3NldF90eXBlXCI6IFwiQ3J5cHRvY3VycmVuY3lcIiwgXCJiaW5hbmNlX3N5bWJvbFwiOiBcIkFEQVVTRFRcIn1dLCBcInRvdGFsX2Fzc2V0c1wiOiA2LCBcInBvcnRmb2xpb190eXBlXCI6IFwiQ3J5cHRvY3VycmVuY3kgUG9ydGZvbGlvXCJ9IiwgInR5cGUiOiAidG9vbCIsICJuYW1lIjogImdldF9wb3J0Zm9saW9fYWxsb2NhdGlvbl90b29sIiwgImlkIjogIjg4MDJmN2FlLTQ3NTctNGQzMy1iYjEzLTI3ZmFlZjAyMjRkNyIsICJ0b29sX2NhbGxfaWQiOiAidG9vbHVfYmRya18wMTVMRTdIODZMM1ZURE5IaHNMUGlGcFQiLCAic3RhdHVzIjogInN1Y2Nlc3MifX1d",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Mg==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d229-c51f-6e60-8001-8203bd4906b5",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd745023acaf9fbae675"
  },
  "checkpoint_id": "1f06d229-d554-60d4-8003-09978d82535b",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "checkpoint": {
    "$binary": {
      "base64": "h6F2A6J0c9kgMjAyNS0wNy0zMFQwODo1MzowOC40NDEwOTErMDA6MDCiaWTZJDFmMDZkMjI5LWQ1NTQtNjBkNC04MDAzLTA5OTc4ZDgyNTM1Yq5jaGFubmVsX3ZhbHVlc4KobWVzc2FnZXOUyAFdBZS9bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMuaHVtYW6sSHVtYW5NZXNzYWdlh6djb250ZW502alDb25zaWRlcmluZyB0aGUgY3VycmVudCBjcnlwdG8gbWFya2V0IGNvbmRpdGlvbnMsIG1vbWVudHVtLCBhbmQgc2VudGltZW50IGZyb20gc29jaWFsIG1lZGlhIGFuZCBuZXdzLCB3aGF0IHdvdWxkIGJlIHRoZSBvcHRpbWFsIGNyeXB0byBhc3NldCBhbGxvY2F0aW9uIGZvciBteSBwb3J0Zm9saW8/sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaVodW1hbqRuYW1lwKJpZNkkYTg3MWY4MjUtMmYzNi00YzY2LWI1MzgtYjVhM2FjZDIyOWM3p2V4YW1wbGXCs21vZGVsX3ZhbGlkYXRlX2pzb27IBEEFlLpsYW5nY2hhaW5fY29yZS5tZXNzYWdlcy5haalBSU1lc3NhZ2WKp2NvbnRlbnTZkU9rYXksIGxldCdzIHRha2UgYSBsb29rIGF0IHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gYW5kIHRoZW4gYW5hbHl6ZSB0aGUgbWFya2V0IGNvbmRpdGlvbnMgdG8gcHJvdmlkZSBhIHJlY29tbWVuZGVkIHJlYWxsb2NhdGlvbi6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzRW+sWNvbXBsZXRpb25fdG9rZW5zWbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNFherc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tNjYxNjM5MTYtNDM4NC00ODdkLWJmNmYtOWRkNWRmZjljYWE4LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWW9Z2V0X3BvcnRmb2xpb19hbGxvY2F0aW9uX3Rvb2ykYXJnc4GlcXVlcnnZI2N1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uomlk2SN0b29sdV9iZHJrXzAxNUxFN0g4NkwzVlRETkhoc0xQaUZwVKR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNFb6tb3V0cHV0X3Rva2Vuc1msdG90YWxfdG9rZW5zzRYXs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29uyAUoBZS8bGFuZ2NoYWluX2NvcmUubWVzc2FnZXMudG9vbKtUb29sTWVzc2FnZYmnY29udGVudNoEF3sicmVzdWx0cyI6IFt7InN5bWJvbCI6ICJCVEMiLCAiZGVzY3JpcHRpb24iOiAiQml0Y29pbiIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNjAlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNjAsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkJUQ1VTRFQifSwgeyJzeW1ib2wiOiAiRVRIIiwgImRlc2NyaXB0aW9uIjogIkV0aGVyZXVtIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICIyMCUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiAyMCwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRVRIVVNEVCJ9LCB7InN5bWJvbCI6ICJYUlAiLCAiZGVzY3JpcHRpb24iOiAiWFJQIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIlhSUFVTRFQifSwgeyJzeW1ib2wiOiAiU09MIiwgImRlc2NyaXB0aW9uIjogIlNvbGFuYSIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNSUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiA1LCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJTT0xVU0RUIn0sIHsic3ltYm9sIjogIkRPR0UiLCAiZGVzY3JpcHRpb24iOiAiRG9nZWNvaW4iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiRE9HRVVTRFQifSwgeyJzeW1ib2wiOiAiQURBIiwgImRlc2NyaXB0aW9uIjogIkNhcmRhbm8iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiQURBVVNEVCJ9XSwgInRvdGFsX2Fzc2V0cyI6IDYsICJwb3J0Zm9saW9fdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSBQb3J0Zm9saW8ifbFhZGRpdGlvbmFsX2t3YXJnc4CxcmVzcG9uc2VfbWV0YWRhdGGApHR5cGWkdG9vbKRuYW1lvWdldF9wb3J0Zm9saW9fYWxsb2NhdGlvbl90b29somlk2SQ4ODAyZjdhZS00NzU3LTRkMzMtYmIxMy0yN2ZhZWYwMjI0ZDesdG9vbF9jYWxsX2lk2SN0b29sdV9iZHJrXzAxNUxFN0g4NkwzVlRETkhoc0xQaUZwVKhhcnRpZmFjdMCmc3RhdHVzp3N1Y2Nlc3OzbW9kZWxfdmFsaWRhdGVfanNvbsgEigWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNmyT2theSwgYmFzZWQgb24geW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiwgeW91IGhhdmUgYSBoZWF2eSBmb2N1cyBvbiBCaXRjb2luICg2MCUpIHdpdGggdGhlIHJlbWFpbmluZyA0MCUgc3BsaXQgYWNyb3NzIEV0aGVyZXVtLCBYUlAsIFNvbGFuYSwgRG9nZWNvaW4sIGFuZCBDYXJkYW5vLrFhZGRpdGlvbmFsX2t3YXJnc4WldXNhZ2WFrXByb21wdF90b2tlbnPNF36xY29tcGxldGlvbl90b2tlbnPMh7djYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNGAWrc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNF36xY29tcGxldGlvbl90b2tlbnPMh7djYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNGAWrc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKR0eXBlomFppG5hbWXAomlk2StydW4tLTA4MTlhNmYxLWE1MjQtNDRhMS05ZWRhLTlhYTUwNmUzYmM1Yi0wp2V4YW1wbGXCqnRvb2xfY2FsbHORhKRuYW1l2SpjcnlwdG9fYW5hbHlzaXNfcmVwb3J0c192ZWN0b3Jfc2VhcmNoX3Rvb2ykYXJnc4KlcXVlcnnZN2NyeXB0byBwb3J0Zm9saW8gYXNzZXQgYWxsb2NhdGlvbiBhbmQgbWFya2V0IGNvbmRpdGlvbnOhawOiaWTZI3Rvb2x1X2JkcmtfMDFZQW9tUmVpRmJCOTZBalZ4QkRKOVMypHR5cGWpdG9vbF9jYWxssmludmFsaWRfdG9vbF9jYWxsc5CudXNhZ2VfbWV0YWRhdGGErGlucHV0X3Rva2Vuc80Xfq1vdXRwdXRfdG9rZW5zzIesdG90YWxfdG9rZW5zzRgFs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29ur2JyYW5jaDp0bzp0b29sc8CwY2hhbm5lbF92ZXJzaW9uc4SpX19zdGFydF9fAqhtZXNzYWdlcwWvYnJhbmNoOnRvOmFnZW50Ba9icmFuY2g6dG86dG9vbHMFrXZlcnNpb25zX3NlZW6EqV9faW5wdXRfX4CpX19zdGFydF9fgalfX3N0YXJ0X18BpWFnZW50ga9icmFuY2g6dG86YWdlbnQEpXRvb2xzga9icmFuY2g6dG86dG9vbHMDrXBlbmRpbmdfc2VuZHOQ",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJPa2F5LCBiYXNlZCBvbiB5b3VyIGN1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBhbGxvY2F0aW9uLCB5b3UgaGF2ZSBhIGhlYXZ5IGZvY3VzIG9uIEJpdGNvaW4gKDYwJSkgd2l0aCB0aGUgcmVtYWluaW5nIDQwJSBzcGxpdCBhY3Jvc3MgRXRoZXJldW0sIFhSUCwgU29sYW5hLCBEb2dlY29pbiwgYW5kIENhcmRhbm8uIiwgImFkZGl0aW9uYWxfa3dhcmdzIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDYwMTQsICJjb21wbGV0aW9uX3Rva2VucyI6IDEzNSwgImNhY2hlX3JlYWRfaW5wdXRfdG9rZW5zIjogMCwgImNhY2hlX3dyaXRlX2lucHV0X3Rva2VucyI6IDAsICJ0b3RhbF90b2tlbnMiOiA2MTQ5fSwgInN0b3BfcmVhc29uIjogInRvb2xfdXNlIiwgInRoaW5raW5nIjoge30sICJtb2RlbF9pZCI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCIsICJtb2RlbF9uYW1lIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIn0sICJyZXNwb25zZV9tZXRhZGF0YSI6IHsidXNhZ2UiOiB7InByb21wdF90b2tlbnMiOiA2MDE0LCAiY29tcGxldGlvbl90b2tlbnMiOiAxMzUsICJjYWNoZV9yZWFkX2lucHV0X3Rva2VucyI6IDAsICJjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMiOiAwLCAidG90YWxfdG9rZW5zIjogNjE0OX0sICJzdG9wX3JlYXNvbiI6ICJ0b29sX3VzZSIsICJ0aGlua2luZyI6IHt9LCAibW9kZWxfaWQiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAiLCAibW9kZWxfbmFtZSI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCJ9LCAidHlwZSI6ICJhaSIsICJpZCI6ICJydW4tLTA4MTlhNmYxLWE1MjQtNDRhMS05ZWRhLTlhYTUwNmUzYmM1Yi0wIiwgInRvb2xfY2FsbHMiOiBbeyJuYW1lIjogImNyeXB0b19hbmFseXNpc19yZXBvcnRzX3ZlY3Rvcl9zZWFyY2hfdG9vbCIsICJhcmdzIjogeyJxdWVyeSI6ICJjcnlwdG8gcG9ydGZvbGlvIGFzc2V0IGFsbG9jYXRpb24gYW5kIG1hcmtldCBjb25kaXRpb25zIiwgImsiOiAzfSwgImlkIjogInRvb2x1X2JkcmtfMDFZQW9tUmVpRmJCOTZBalZ4QkRKOVMyIiwgInR5cGUiOiAidG9vbF9jYWxsIn1dLCAidXNhZ2VfbWV0YWRhdGEiOiB7ImlucHV0X3Rva2VucyI6IDYwMTQsICJvdXRwdXRfdG9rZW5zIjogMTM1LCAidG90YWxfdG9rZW5zIjogNjE0OSwgImlucHV0X3Rva2VuX2RldGFpbHMiOiB7ImNhY2hlX2NyZWF0aW9uIjogMCwgImNhY2hlX3JlYWQiOiAwfX0sICJpbnZhbGlkX3Rvb2xfY2FsbHMiOiBbXX19XQ==",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "Mw==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d229-c54d-62af-8002-58f6be2a5c82",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd745023acaf9fbae678"
  },
  "checkpoint_ns": "",
  "checkpoint_id": "1f06d229-d772-6bd9-8004-e955837bb2d0",
  "thread_id": "thread_20250730_085302",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "tools": {
        "messages": {
          "$binary": {
            "base64": "",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "NA==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d229-d554-60d4-8003-09978d82535b",
  "type": "msgpack"
},
{
  "_id": {
    "$oid": "6889dd775023acaf9fbae67a"
  },
  "checkpoint_id": "1f06d229-f62d-6341-8005-3b786916b21a",
  "thread_id": "thread_20250730_085302",
  "checkpoint_ns": "",
  "checkpoint": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  },
  "metadata": {
    "source": {
      "$binary": {
        "base64": "Imxvb3Ai",
        "subType": "00"
      }
    },
    "writes": {
      "agent": {
        "messages": {
          "$binary": {
            "base64": "W3sibGMiOiAxLCAidHlwZSI6ICJjb25zdHJ1Y3RvciIsICJpZCI6IFsibGFuZ2NoYWluIiwgInNjaGVtYSIsICJtZXNzYWdlcyIsICJBSU1lc3NhZ2UiXSwgImt3YXJncyI6IHsiY29udGVudCI6ICJLZXkgSW5zaWdodHM6XG4tIFRoZSBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gaXMgaGVhdmlseSB3ZWlnaHRlZCB0b3dhcmRzIEJpdGNvaW4gKDYwJSksIHdoaWNoIGlzIGV4aGliaXRpbmcgYSBiZWFyaXNoIHRyZW5kIGJhc2VkIG9uIG1vdmluZyBhdmVyYWdlIGFuYWx5c2lzLlxuLSBPdGhlciBtYWpvciBwb3J0Zm9saW8gYXNzZXRzIGxpa2UgRXRoZXJldW0sIFhSUCwgYW5kIENhcmRhbm8gYXJlIGFsc28gc2hvd2luZyBiZWFyaXNoIG1vbWVudHVtLCB3aXRoIHRoZWlyIHByaWNlcyB0cmFkaW5nIGJlbG93IHNob3J0LXRlcm0gbW92aW5nIGF2ZXJhZ2VzLlxuLSBNb21lbnR1bSBpbmRpY2F0b3JzIGxpa2UgUlNJIHN1Z2dlc3Qgb3ZlcnNvbGQgb3IgYmVhcmlzaCBjb25kaXRpb25zIGZvciBtb3N0IGNyeXB0b2N1cnJlbmNpZXMgaW4gdGhlIHBvcnRmb2xpby5cbi0gVHJhZGluZyB2b2x1bWUgaXMgYmVsb3cgYXZlcmFnZSBmb3Igc2V2ZXJhbCBhc3NldHMsIGluZGljYXRpbmcgbG93IG1hcmtldCBhY3Rpdml0eSBhbmQgcG90ZW50aWFsIGNvbnRpbnVlZCBkb3dud2FyZCBwcmVzc3VyZS5cblxuUmVjb21tZW5kYXRpb25zOlxuMS4gUmVkdWNlIG92ZXJhbGwgY3J5cHRvY3VycmVuY3kgZXhwb3N1cmUgYnkgYWxsb2NhdGluZyAyMC0zMCUgdG8gc3RhYmxlY29pbnMgbGlrZSBVU0RDIG9yIERBSSB0byBwcm92aWRlIHN0YWJpbGl0eSBhbmQgcmVkdWNlIHBvcnRmb2xpbyB2b2xhdGlsaXR5LlxuMi4gUmViYWxhbmNlIHRoZSBjcnlwdG9jdXJyZW5jeSBhbGxvY2F0aW9uIHRvIGFjaGlldmUgYmV0dGVyIGRpdmVyc2lmaWNhdGlvbjpcbiAgIC0gUmVkdWNlIEJpdGNvaW4gZXhwb3N1cmUgdG8gNDAtNTAlXG4gICAtIEluY3JlYXNlIEV0aGVyZXVtIHRvIDI1LTMwJVxuICAgLSBBbGxvY2F0ZSAxMC0xNSUgdG8gU29sYW5hXG4gICAtIEFsbG9jYXRlIDUtMTAlIHRvIERvZ2Vjb2luXG4zLiBDbG9zZWx5IG1vbml0b3Igc2hvcnQtdGVybSBtb21lbnR1bSBpbmRpY2F0b3JzIGFuZCBiZSBwcmVwYXJlZCB0byBtYWtlIHRhY3RpY2FsIGFkanVzdG1lbnRzIHRvIHRoZSBwb3J0Zm9saW8gYXMgbWFya2V0IGNvbmRpdGlvbnMgZXZvbHZlLlxuXG4qKlN1Z2dlc3RlZCBuZXh0IHN0ZXA6KipcbldvdWxkIHlvdSBsaWtlIG1lIHRvIHByb3ZpZGUgYSBkZXRhaWxlZCByZWFsbG9jYXRpb24gcGxhbiBmb3IgeW91ciBjcnlwdG8gcG9ydGZvbGlvPyBZRVMvTk8iLCAiYWRkaXRpb25hbF9rd2FyZ3MiOiB7InVzYWdlIjogeyJwcm9tcHRfdG9rZW5zIjogODYyOSwgImNvbXBsZXRpb25fdG9rZW5zIjogMjg4LCAiY2FjaGVfcmVhZF9pbnB1dF90b2tlbnMiOiAwLCAiY2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zIjogMCwgInRvdGFsX3Rva2VucyI6IDg5MTd9LCAic3RvcF9yZWFzb24iOiAiZW5kX3R1cm4iLCAidGhpbmtpbmciOiB7fSwgIm1vZGVsX2lkIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIiwgIm1vZGVsX25hbWUiOiAiYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjAifSwgInJlc3BvbnNlX21ldGFkYXRhIjogeyJ1c2FnZSI6IHsicHJvbXB0X3Rva2VucyI6IDg2MjksICJjb21wbGV0aW9uX3Rva2VucyI6IDI4OCwgImNhY2hlX3JlYWRfaW5wdXRfdG9rZW5zIjogMCwgImNhY2hlX3dyaXRlX2lucHV0X3Rva2VucyI6IDAsICJ0b3RhbF90b2tlbnMiOiA4OTE3fSwgInN0b3BfcmVhc29uIjogImVuZF90dXJuIiwgInRoaW5raW5nIjoge30sICJtb2RlbF9pZCI6ICJhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MCIsICJtb2RlbF9uYW1lIjogImFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowIn0sICJ0eXBlIjogImFpIiwgImlkIjogInJ1bi0tODhhNWJhOGEtYmY1MS00Y2MyLWFlMTUtNGM4Y2NiMzJlMmFiLTAiLCAidXNhZ2VfbWV0YWRhdGEiOiB7ImlucHV0X3Rva2VucyI6IDg2MjksICJvdXRwdXRfdG9rZW5zIjogMjg4LCAidG90YWxfdG9rZW5zIjogODkxNywgImlucHV0X3Rva2VuX2RldGFpbHMiOiB7ImNhY2hlX2NyZWF0aW9uIjogMCwgImNhY2hlX3JlYWQiOiAwfX0sICJ0b29sX2NhbGxzIjogW10sICJpbnZhbGlkX3Rvb2xfY2FsbHMiOiBbXX19XQ==",
            "subType": "00"
          }
        }
      }
    },
    "step": {
      "$binary": {
        "base64": "NQ==",
        "subType": "00"
      }
    },
    "parents": {}
  },
  "parent_checkpoint_id": "1f06d229-d772-6bd9-8004-e955837bb2d0",
  "type": "msgpack"
}]