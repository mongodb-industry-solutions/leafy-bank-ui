[{
  "_id": {
    "$oid": "6889dc7f5023acaf9fbae62e"
  },
  "checkpoint_id": "1f06d220-b5a5-69b0-bfff-c0c48d70787f",
  "idx": 0,
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "task_id": "ebe40fe9-d525-020a-cd79-c5237cd8bf3c",
  "task_path": "~__pregel_pull, __start__",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgBXQWUvWxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmh1bWFurEh1bWFuTWVzc2FnZYenY29udGVudNmpQ29uc2lkZXJpbmcgdGhlIGN1cnJlbnQgY3J5cHRvIG1hcmtldCBjb25kaXRpb25zLCBtb21lbnR1bSwgYW5kIHNlbnRpbWVudCBmcm9tIHNvY2lhbCBtZWRpYSBhbmQgbmV3cywgd2hhdCB3b3VsZCBiZSB0aGUgb3B0aW1hbCBjcnlwdG8gYXNzZXQgYWxsb2NhdGlvbiBmb3IgbXkgcG9ydGZvbGlvP7FhZGRpdGlvbmFsX2t3YXJnc4CxcmVzcG9uc2VfbWV0YWRhdGGApHR5cGWlaHVtYW6kbmFtZcCiaWTZJDIzODJkZTRkLWRhMGUtNDhmZi04ZDRkLTFlNmViYTkyNTljOKdleGFtcGxlwrNtb2RlbF92YWxpZGF0ZV9qc29u",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc7f5023acaf9fbae62f"
  },
  "checkpoint_ns": "",
  "task_id": "ebe40fe9-d525-020a-cd79-c5237cd8bf3c",
  "task_path": "~__pregel_pull, __start__",
  "thread_id": "thread_20250730_084900",
  "checkpoint_id": "1f06d220-b5a5-69b0-bfff-c0c48d70787f",
  "idx": 1,
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc825023acaf9fbae631"
  },
  "idx": 0,
  "task_path": "~__pregel_pull, agent",
  "task_id": "a97e5db9-4c09-f364-6c44-a76f357fe0fa",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "checkpoint_id": "1f06d220-b5a6-6892-8000-f27ba737f5a3",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgEQQWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNmRT2theSwgbGV0J3MgdGFrZSBhIGxvb2sgYXQgeW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiBhbmQgdGhlbiBhbmFseXplIHRoZSBtYXJrZXQgY29uZGl0aW9ucyB0byBwcm92aWRlIGEgcmVjb21tZW5kZWQgcmVhbGxvY2F0aW9uLrFhZGRpdGlvbmFsX2t3YXJnc4WldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowsXJlc3BvbnNlX21ldGFkYXRhhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc80VvrFjb21wbGV0aW9uX3Rva2Vuc1m3Y2FjaGVfcmVhZF9pbnB1dF90b2tlbnMAuGNhY2hlX3dyaXRlX2lucHV0X3Rva2VucwCsdG90YWxfdG9rZW5zzRYXq3N0b3BfcmVhc29uqHRvb2xfdXNlqHRoaW5raW5ngKhtb2RlbF9pZNkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCqbW9kZWxfbmFtZdkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCkdHlwZaJhaaRuYW1lwKJpZNkrcnVuLS0zY2E5MjZiNS0zYTZiLTQ4YmMtYmRjMS0yNzU5MDgyMDFjMDUtMKdleGFtcGxlwqp0b29sX2NhbGxzkYSkbmFtZb1nZXRfcG9ydGZvbGlvX2FsbG9jYXRpb25fdG9vbKRhcmdzgaVxdWVyedkjY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb26iaWTZI3Rvb2x1X2JkcmtfMDFDUUhxUVhLM3JwMjVrQnF3Y0xRMXNBpHR5cGWpdG9vbF9jYWxssmludmFsaWRfdG9vbF9jYWxsc5CudXNhZ2VfbWV0YWRhdGGErGlucHV0X3Rva2Vuc80Vvq1vdXRwdXRfdG9rZW5zWax0b3RhbF90b2tlbnPNFhezaW5wdXRfdG9rZW5fZGV0YWlsc4KuY2FjaGVfY3JlYXRpb24AqmNhY2hlX3JlYWQAs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc825023acaf9fbae632"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "checkpoint_id": "1f06d220-b5a6-6892-8000-f27ba737f5a3",
  "idx": 1,
  "task_path": "~__pregel_pull, agent",
  "task_id": "a97e5db9-4c09-f364-6c44-a76f357fe0fa",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc825023acaf9fbae635"
  },
  "checkpoint_ns": "",
  "task_id": "166a2714-fbd5-ca83-4801-396d39c3ba90",
  "task_path": "~__pregel_pull, tools",
  "thread_id": "thread_20250730_084900",
  "checkpoint_id": "1f06d220-cd4c-6e21-8001-a1bdda652077",
  "idx": 0,
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgFKAWUvGxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLnRvb2yrVG9vbE1lc3NhZ2WJp2NvbnRlbnTaBBd7InJlc3VsdHMiOiBbeyJzeW1ib2wiOiAiQlRDIiwgImRlc2NyaXB0aW9uIjogIkJpdGNvaW4iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjYwJSIsICJhbGxvY2F0aW9uX251bWJlciI6IDYwLCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJCVENVU0RUIn0sIHsic3ltYm9sIjogIkVUSCIsICJkZXNjcmlwdGlvbiI6ICJFdGhlcmV1bSIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiMjAlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogMjAsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkVUSFVTRFQifSwgeyJzeW1ib2wiOiAiWFJQIiwgImRlc2NyaXB0aW9uIjogIlhSUCIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNSUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiA1LCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJYUlBVU0RUIn0sIHsic3ltYm9sIjogIlNPTCIsICJkZXNjcmlwdGlvbiI6ICJTb2xhbmEiLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiU09MVVNEVCJ9LCB7InN5bWJvbCI6ICJET0dFIiwgImRlc2NyaXB0aW9uIjogIkRvZ2Vjb2luIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkRPR0VVU0RUIn0sIHsic3ltYm9sIjogIkFEQSIsICJkZXNjcmlwdGlvbiI6ICJDYXJkYW5vIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkFEQVVTRFQifV0sICJ0b3RhbF9hc3NldHMiOiA2LCAicG9ydGZvbGlvX3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kgUG9ydGZvbGlvIn2xYWRkaXRpb25hbF9rd2FyZ3OAsXJlc3BvbnNlX21ldGFkYXRhgKR0eXBlpHRvb2ykbmFtZb1nZXRfcG9ydGZvbGlvX2FsbG9jYXRpb25fdG9vbKJpZNkkMzMwMDI5YjYtMDZjNi00YjlkLTlkZTYtOWVhOWNhZTI3YmFjrHRvb2xfY2FsbF9pZNkjdG9vbHVfYmRya18wMUNRSHFRWEszcnAyNWtCcXdjTFExc0GoYXJ0aWZhY3TApnN0YXR1c6dzdWNjZXNzs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc825023acaf9fbae636"
  },
  "idx": 1,
  "task_path": "~__pregel_pull, tools",
  "task_id": "166a2714-fbd5-ca83-4801-396d39c3ba90",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "checkpoint_id": "1f06d220-cd4c-6e21-8001-a1bdda652077",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc835023acaf9fbae637"
  },
  "checkpoint_ns": "",
  "task_id": "fb4b82c8-043c-4037-614f-09ce1dfc1285",
  "task_path": "~__pregel_pull, agent",
  "thread_id": "thread_20250730_084900",
  "idx": 0,
  "checkpoint_id": "1f06d220-cd79-6b45-8002-8525fad361a3",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgEkAWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNnKT2theSwgYmFzZWQgb24geW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiwgeW91IGhhdmUgYSBoZWF2eSBmb2N1cyBvbiBCaXRjb2luICg2MCUpIHdpdGggdGhlIHJlc3Qgc3BsaXQgYmV0d2VlbiBFdGhlcmV1bSAoMjAlKSBhbmQgc21hbGxlciBhbGxvY2F0aW9ucyB0byBYUlAsIFNvbGFuYSwgRG9nZWNvaW4sIGFuZCBDYXJkYW5vLrFhZGRpdGlvbmFsX2t3YXJnc4WldXNhZ2WFrXByb21wdF90b2tlbnPNF36xY29tcGxldGlvbl90b2tlbnN3t2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80X9atzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowsXJlc3BvbnNlX21ldGFkYXRhhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc80XfrFjb21wbGV0aW9uX3Rva2Vuc3e3Y2FjaGVfcmVhZF9pbnB1dF90b2tlbnMAuGNhY2hlX3dyaXRlX2lucHV0X3Rva2VucwCsdG90YWxfdG9rZW5zzRf1q3N0b3BfcmVhc29uqHRvb2xfdXNlqHRoaW5raW5ngKhtb2RlbF9pZNkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCqbW9kZWxfbmFtZdkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCkdHlwZaJhaaRuYW1lwKJpZNkrcnVuLS05NDk2ODdiOC1iMDM0LTQxNDQtYWI2MC04MDJhOWExMzQ5OWItMKdleGFtcGxlwqp0b29sX2NhbGxzkYSkbmFtZdkqY3J5cHRvX2FuYWx5c2lzX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29spGFyZ3OBpXF1ZXJ52StjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gcmVjb21tZW5kYXRpb25zomlk2SN0b29sdV9iZHJrXzAxUTZLMTRUVlE4cmExTmpIQkU4M3VzOaR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNF36tb3V0cHV0X3Rva2Vuc3esdG90YWxfdG9rZW5zzRf1s2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29u",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc835023acaf9fbae639"
  },
  "checkpoint_id": "1f06d220-cd79-6b45-8002-8525fad361a3",
  "idx": 1,
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "task_id": "fb4b82c8-043c-4037-614f-09ce1dfc1285",
  "task_path": "~__pregel_pull, agent",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc835023acaf9fbae63a"
  },
  "checkpoint_ns": "",
  "task_id": "f53dc371-6a60-6615-f4f2-f6b6ff0e06a1",
  "task_path": "~__pregel_pull, tools",
  "thread_id": "thread_20250730_084900",
  "checkpoint_id": "1f06d220-db24-6895-8003-ce8c33880c58",
  "idx": 0,
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc835023acaf9fbae63b"
  },
  "task_id": "f53dc371-6a60-6615-f4f2-f6b6ff0e06a1",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "checkpoint_id": "1f06d220-db24-6895-8003-ce8c33880c58",
  "idx": 1,
  "task_path": "~__pregel_pull, tools",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc855023acaf9fbae63d"
  },
  "checkpoint_id": "1f06d220-dd8d-6b5b-8004-f2f05d95a46a",
  "idx": 0,
  "task_path": "~__pregel_pull, agent",
  "task_id": "c029d7a3-dc66-a620-062b-138bb79ac20a",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgDtAWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudKCxYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzSGlsWNvbXBsZXRpb25fdG9rZW5zQbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNIearc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNIaWxY29tcGxldGlvbl90b2tlbnNBt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80h5qtzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tYzAwOGNiZTItOWRhNi00ZTJhLTgyYjItODAwNTdiMGY1MTcwLTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWXZJmNyeXB0b19uZXdzX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29spGFyZ3OBpXF1ZXJ5v2NyeXB0byBwb3J0Zm9saW8gbmV3cyBzZW50aW1lbnSiaWTZI3Rvb2x1X2JkcmtfMDFTYW83SmdMZWlTb3RmcWJMZ2dhaWJ0pHR5cGWpdG9vbF9jYWxssmludmFsaWRfdG9vbF9jYWxsc5CudXNhZ2VfbWV0YWRhdGGErGlucHV0X3Rva2Vuc80hpa1vdXRwdXRfdG9rZW5zQax0b3RhbF90b2tlbnPNIeazaW5wdXRfdG9rZW5fZGV0YWlsc4KuY2FjaGVfY3JlYXRpb24AqmNhY2hlX3JlYWQAs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc855023acaf9fbae63e"
  },
  "checkpoint_id": "1f06d220-dd8d-6b5b-8004-f2f05d95a46a",
  "idx": 1,
  "task_path": "~__pregel_pull, agent",
  "task_id": "c029d7a3-dc66-a620-062b-138bb79ac20a",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc855023acaf9fbae640"
  },
  "checkpoint_ns": "",
  "task_id": "38488e80-50bd-f2fb-1e3e-ee534aa7d8ae",
  "task_path": "~__pregel_pull, tools",
  "thread_id": "thread_20250730_084900",
  "idx": 0,
  "checkpoint_id": "1f06d220-ec7c-6980-8005-6368f4a2a3c5",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc855023acaf9fbae641"
  },
  "idx": 1,
  "checkpoint_id": "1f06d220-ec7c-6980-8005-6368f4a2a3c5",
  "task_path": "~__pregel_pull, tools",
  "task_id": "38488e80-50bd-f2fb-1e3e-ee534aa7d8ae",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc875023acaf9fbae643"
  },
  "checkpoint_id": "1f06d220-eeb5-60c8-8006-87c02b3506c2",
  "idx": 0,
  "task_path": "~__pregel_pull, agent",
  "task_id": "5ed90c33-d548-2558-7d69-dd6505a5a07a",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgDxQWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudKCxYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzTymsWNvbXBsZXRpb25fdG9rZW5zRLdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNPOqrc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNPKaxY29tcGxldGlvbl90b2tlbnNEt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc8086qtzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tYjhhMDY3OTQtMmFlZC00Y2JiLTlkMjQtNWVlM2Y2MDRhNGMzLTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWXZLmNyeXB0b19zb2NpYWxfbWVkaWFfcmVwb3J0c192ZWN0b3Jfc2VhcmNoX3Rvb2ykYXJnc4GlcXVlcnnZJ2NyeXB0byBwb3J0Zm9saW8gc29jaWFsIG1lZGlhIHNlbnRpbWVudKJpZNkjdG9vbHVfYmRya18wMUdEVFRXNG5ZSFNWVUhoTG56b1ZFd2SkdHlwZal0b29sX2NhbGyyaW52YWxpZF90b29sX2NhbGxzkK51c2FnZV9tZXRhZGF0YYSsaW5wdXRfdG9rZW5zzTymrW91dHB1dF90b2tlbnNErHRvdGFsX3Rva2Vuc8086rNpbnB1dF90b2tlbl9kZXRhaWxzgq5jYWNoZV9jcmVhdGlvbgCqY2FjaGVfcmVhZACzbW9kZWxfdmFsaWRhdGVfanNvbg==",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc875023acaf9fbae644"
  },
  "idx": 1,
  "task_path": "~__pregel_pull, agent",
  "task_id": "5ed90c33-d548-2558-7d69-dd6505a5a07a",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "checkpoint_id": "1f06d220-eeb5-60c8-8006-87c02b3506c2",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc875023acaf9fbae646"
  },
  "checkpoint_id": "1f06d221-0188-650f-8007-1fb067f09ae4",
  "idx": 0,
  "task_path": "~__pregel_pull, tools",
  "task_id": "a5298db9-c710-b77e-6351-dead9590cebe",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc875023acaf9fbae647"
  },
  "checkpoint_id": "1f06d221-0188-650f-8007-1fb067f09ae4",
  "idx": 1,
  "task_path": "~__pregel_pull, tools",
  "task_id": "a5298db9-c710-b77e-6351-dead9590cebe",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_084900",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dc8f5023acaf9fbae649"
  },
  "checkpoint_id": "1f06d221-0402-6bcb-8008-4a3cd43fab82",
  "idx": 0,
  "checkpoint_ns": "",
  "task_path": "~__pregel_pull, agent",
  "task_id": "35af94c8-9f05-835d-cb9e-79ce52038091",
  "thread_id": "thread_20250730_084900",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgN9wWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNoKzDxyZXN1bHQ+CkJhc2VkIG9uIHRoZSBjb21wcmVoZW5zaXZlIGFuYWx5c2lzIG9mIHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvLCBoZXJlIGFyZSBteSBrZXkgaW5zaWdodHMgYW5kIHJlY29tbWVuZGF0aW9uczoKClBvcnRmb2xpbyBBbGxvY2F0aW9uOgpZb3VyIGN1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBoYXMgYSBoZWF2eSBmb2N1cyBvbiBCaXRjb2luICg2MCUpLCB3aXRoIHRoZSByZXN0IHNwbGl0IGJldHdlZW4gRXRoZXJldW0gKDIwJSkgYW5kIHNtYWxsZXIgYWxsb2NhdGlvbnMgdG8gWFJQLCBTb2xhbmEsIERvZ2Vjb2luLCBhbmQgQ2FyZGFuby4gVGhpcyBhbGxvY2F0aW9uIGlzIGhlYXZpbHkgd2VpZ2h0ZWQgdG93YXJkcyB2b2xhdGlsZSBjcnlwdG9jdXJyZW5jaWVzLCB3aXRoIG5vIHN0YWJsZWNvaW4gZXhwb3N1cmUuCgpNYXJrZXQgQ29uZGl0aW9ucyBhbmQgVHJlbmRzOgpUaGUgY3J5cHRvIG1hcmtldCBhbmFseXNpcyBzaG93cyBhIHByZWRvbWluYW50bHkgYmVhcmlzaCB0cmVuZCBhY3Jvc3MgeW91ciBwb3J0Zm9saW8gaG9sZGluZ3MsIHdpdGggQml0Y29pbiwgRXRoZXJldW0sIFhSUCwgYW5kIENhcmRhbm8gYWxsIGV4aGliaXRpbmcgbmVnYXRpdmUgc2hvcnQtdGVybSBtb21lbnR1bS4gU29sYW5hIGFuZCBEb2dlY29pbiBhcmUgc2hvd2luZyBtaXhlZCBzaWduYWxzLCB3aXRoIHNvbWUgY29uc29saWRhdGlvbiBiZXR3ZWVuIG1vdmluZyBhdmVyYWdlcy4KClRoZSBtb21lbnR1bSBpbmRpY2F0b3JzIGZ1cnRoZXIgcmVpbmZvcmNlIHRoZSBiZWFyaXNoIHNlbnRpbWVudCwgd2l0aCB0aGUgUlNJIGZvciBtb3N0IGNyeXB0b2N1cnJlbmNpZXMgaW4gdGhlIHBvcnRmb2xpbyBpbmRpY2F0aW5nIG92ZXJzb2xkIG9yIGJlYXJpc2ggY29uZGl0aW9ucy4gVHJhZGluZyB2b2x1bWUgaXMgYWxzbyBiZWxvdyBhdmVyYWdlIGZvciBzZXZlcmFsIGFzc2V0cywgc3VnZ2VzdGluZyBsb3cgbWFya2V0IGFjdGl2aXR5IGFuZCBwb3RlbnRpYWwgY29udGludWVkIGRvd253YXJkIHByZXNzdXJlLgoKU2VudGltZW50IEFuYWx5c2lzOgpUaGUgc29jaWFsIG1lZGlhIHNlbnRpbWVudCBhbmFseXNpcyBwcm92aWRlcyBhIG1peGVkIG91dGxvb2sgZm9yIHlvdXIgcG9ydGZvbGlvOgoKLSBCVEMsIFhSUCwgU09MLCBhbmQgQURBIGhhdmUgYSBwb3NpdGl2ZSBzZW50aW1lbnQsIGluZGljYXRpbmcgc3Ryb25nIGNvbW11bml0eSBvcHRpbWlzbSBhbmQgcG90ZW50aWFsIGZvciBwcmljZSBhcHByZWNpYXRpb24uCi0gRVRIIGFuZCBET0dFIGhhdmUgYSBuZXV0cmFsIHNlbnRpbWVudCwgcmVmbGVjdGluZyBhIG1vcmUgY2F1dGlvdXMgb3V0bG9vayBmcm9tIGludmVzdG9ycy4KClRoZSBwb3NpdGl2ZSBzZW50aW1lbnQgZm9yIEJUQywgdGhlIG1hcmtldCBsZWFkZXIsIGlzIHBhcnRpY3VsYXJseSBlbmNvdXJhZ2luZywgYXMgaXQgY291bGQgZHJpdmUgYnJvYWRlciBjcnlwdG8gbWFya2V0IHNlbnRpbWVudCBhbmQgcHJvdmlkZSBhIHN0YWJsZSBmb3VuZGF0aW9uIGZvciB0aGUgcG9ydGZvbGlvLgoKUmVjb21tZW5kYXRpb25zOgpUbyBhZGRyZXNzIHRoZSBoaWdoLXJpc2sgcHJvZmlsZSBhbmQgbGFjayBvZiBkaXZlcnNpZmljYXRpb24gaW4geW91ciBjdXJyZW50IHBvcnRmb2xpbywgSSByZWNvbW1lbmQgdGhlIGZvbGxvd2luZzoKCjEuIFJlZHVjZSB0aGUgb3ZlcmFsbCBjcnlwdG9jdXJyZW5jeSBleHBvc3VyZSBieSBhbGxvY2F0aW5nIGEgcG9ydGlvbiAoMjAtMzAlKSBvZiB0aGUgcG9ydGZvbGlvIHRvIHN0YWJsZWNvaW5zLCBzdWNoIGFzIFVTREMgb3IgREFJLiBUaGlzIHdvdWxkIHByb3ZpZGUgc3RhYmlsaXR5IGFuZCByZWR1Y2UgdGhlIHBvcnRmb2xpbydzIHZvbGF0aWxpdHkuCgoyLiBSZWJhbGFuY2UgdGhlIGNyeXB0b2N1cnJlbmN5IGFsbG9jYXRpb24gdG8gYWNoaWV2ZSBiZXR0ZXIgZGl2ZXJzaWZpY2F0aW9uLiBDb25zaWRlciByZWR1Y2luZyB0aGUgQml0Y29pbiBleHBvc3VyZSB0byA0MC01MCUgYW5kIGluY3JlYXNpbmcgdGhlIGFsbG9jYXRpb24gdG8gRXRoZXJldW0gKDI1LTMwJSksIFNvbGFuYSAoMTAtMTUlKSwgYW5kIERvZ2Vjb2luICg1LTEwJSkuIFRoaXMgd291bGQgcHJvdmlkZSBtb3JlIGJhbGFuY2VkIGV4cG9zdXJlIHRvIGRpZmZlcmVudCBzZWN0b3JzIG9mIHRoZSBjcnlwdG8gbWFya2V0LgoKMy4gQ2xvc2VseSBtb25pdG9yIHRoZSBzaG9ydC10ZXJtIG1vbWVudHVtIGluZGljYXRvcnMgYW5kIGNvbnNpZGVyIHRhY3RpY2FsIGFkanVzdG1lbnRzIHRvIHRoZSBwb3J0Zm9saW8gYXMgdGhlIG1hcmtldCBjb25kaXRpb25zIGV2b2x2ZS4gTWFpbnRhaW4gYSBkaXNjaXBsaW5lZCBhcHByb2FjaCB0byByaXNrIG1hbmFnZW1lbnQgYW5kIGJlIHByZXBhcmVkIHRvIHRha2UgYWN0aW9uIHRvIHByb3RlY3QgdGhlIHBvcnRmb2xpbydzIHZhbHVlIGR1cmluZyBwZXJpb2RzIG9mIGhlaWdodGVuZWQgdm9sYXRpbGl0eS4KCkJ5IGltcGxlbWVudGluZyB0aGVzZSByZWNvbW1lbmRhdGlvbnMsIHRoZSBwb3J0Zm9saW8gY2FuIGFjaGlldmUgYSBiZXR0ZXIgYmFsYW5jZSBiZXR3ZWVuIGdyb3d0aCBhbmQgc3RhYmlsaXR5LCBhbGlnbmluZyB3aXRoIHRoZSAiTWl4IG9mIGdyb3d0aCBhbmQgc3RhYmlsaXR5LCBtb2RlcmF0ZSByaXNrIiByaXNrIHByb2ZpbGUuCgpXb3VsZCB5b3UgbGlrZSBtZSB0byBwcm92aWRlIGFueSBhZGRpdGlvbmFsIGRldGFpbHMgb3IgY2xhcmlmaWNhdGlvbiBvbiB0aGVzZSByZWNvbW1lbmRhdGlvbnM/IFlFUy9OTwo8L3Jlc3VsdD6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzb+ysWNvbXBsZXRpb25fdG9rZW5zzQJIt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc83B+qtzdG9wX3JlYXNvbqhlbmRfdHVybqh0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowsXJlc3BvbnNlX21ldGFkYXRhhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc82/srFjb21wbGV0aW9uX3Rva2Vuc80CSLdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNwfqrc3RvcF9yZWFzb26oZW5kX3R1cm6odGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKR0eXBlomFppG5hbWXAomlk2StydW4tLWRmMjAxZWJlLTdmODEtNGRmZC04MWZhLThlNDYxMDY1NTllOS0wp2V4YW1wbGXCqnRvb2xfY2FsbHOQsmludmFsaWRfdG9vbF9jYWxsc5CudXNhZ2VfbWV0YWRhdGGErGlucHV0X3Rva2Vuc82/sq1vdXRwdXRfdG9rZW5zzQJIrHRvdGFsX3Rva2Vuc83B+rNpbnB1dF90b2tlbl9kZXRhaWxzgq5jYWNoZV9jcmVhdGlvbgCqY2FjaGVfcmVhZACzbW9kZWxfdmFsaWRhdGVfanNvbg==",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd3e5023acaf9fbae64c"
  },
  "task_id": "1e6cab02-a8ec-00ae-1b50-62f5adb9df00",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint_id": "1f06d227-d3b2-6d47-bfff-9984beff575e",
  "idx": 0,
  "task_path": "~__pregel_pull, __start__",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgBXQWUvWxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmh1bWFurEh1bWFuTWVzc2FnZYenY29udGVudNmpQ29uc2lkZXJpbmcgdGhlIGN1cnJlbnQgY3J5cHRvIG1hcmtldCBjb25kaXRpb25zLCBtb21lbnR1bSwgYW5kIHNlbnRpbWVudCBmcm9tIHNvY2lhbCBtZWRpYSBhbmQgbmV3cywgd2hhdCB3b3VsZCBiZSB0aGUgb3B0aW1hbCBjcnlwdG8gYXNzZXQgYWxsb2NhdGlvbiBmb3IgbXkgcG9ydGZvbGlvP7FhZGRpdGlvbmFsX2t3YXJnc4CxcmVzcG9uc2VfbWV0YWRhdGGApHR5cGWlaHVtYW6kbmFtZcCiaWTZJDEwYWFmZjc4LWRjMzktNDIyMC05M2RkLTA5NGM0NzBkYzIyY6dleGFtcGxlwrNtb2RlbF92YWxpZGF0ZV9qc29u",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd3e5023acaf9fbae64d"
  },
  "task_id": "1e6cab02-a8ec-00ae-1b50-62f5adb9df00",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint_id": "1f06d227-d3b2-6d47-bfff-9984beff575e",
  "idx": 1,
  "task_path": "~__pregel_pull, __start__",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd3f5023acaf9fbae64f"
  },
  "task_id": "5de1ece2-0979-f840-dce2-c290d6813cf3",
  "thread_id": "thread_20250730_085210",
  "task_path": "~__pregel_pull, agent",
  "checkpoint_id": "1f06d227-d3b3-6c6a-8000-660617a39d5b",
  "idx": 0,
  "checkpoint_ns": "",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgEQQWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNmRT2theSwgbGV0J3MgdGFrZSBhIGxvb2sgYXQgeW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiBhbmQgdGhlbiBhbmFseXplIHRoZSBtYXJrZXQgY29uZGl0aW9ucyB0byBwcm92aWRlIGEgcmVjb21tZW5kZWQgcmVhbGxvY2F0aW9uLrFhZGRpdGlvbmFsX2t3YXJnc4WldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowsXJlc3BvbnNlX21ldGFkYXRhhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc80VvrFjb21wbGV0aW9uX3Rva2Vuc1m3Y2FjaGVfcmVhZF9pbnB1dF90b2tlbnMAuGNhY2hlX3dyaXRlX2lucHV0X3Rva2VucwCsdG90YWxfdG9rZW5zzRYXq3N0b3BfcmVhc29uqHRvb2xfdXNlqHRoaW5raW5ngKhtb2RlbF9pZNkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCqbW9kZWxfbmFtZdkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCkdHlwZaJhaaRuYW1lwKJpZNkrcnVuLS1jMDM3ZTE0My01NmMyLTQ3MTgtYmUzMy1hYjRlMjRkOTFiNjktMKdleGFtcGxlwqp0b29sX2NhbGxzkYSkbmFtZb1nZXRfcG9ydGZvbGlvX2FsbG9jYXRpb25fdG9vbKRhcmdzgaVxdWVyedkjY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb26iaWTZI3Rvb2x1X2JkcmtfMDFTUHlWOXdzQTR1cno3aXZ1d1hpNzl2pHR5cGWpdG9vbF9jYWxssmludmFsaWRfdG9vbF9jYWxsc5CudXNhZ2VfbWV0YWRhdGGErGlucHV0X3Rva2Vuc80Vvq1vdXRwdXRfdG9rZW5zWax0b3RhbF90b2tlbnPNFhezaW5wdXRfdG9rZW5fZGV0YWlsc4KuY2FjaGVfY3JlYXRpb24AqmNhY2hlX3JlYWQAs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd3f5023acaf9fbae651"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint_id": "1f06d227-d3b3-6c6a-8000-660617a39d5b",
  "idx": 1,
  "task_path": "~__pregel_pull, agent",
  "task_id": "5de1ece2-0979-f840-dce2-c290d6813cf3",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd405023acaf9fbae652"
  },
  "task_id": "1f08ae90-f712-2995-4409-a4d60002896e",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint_id": "1f06d227-e0fb-6a38-8001-2e80f35c861a",
  "idx": 0,
  "task_path": "~__pregel_pull, tools",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgFKAWUvGxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLnRvb2yrVG9vbE1lc3NhZ2WJp2NvbnRlbnTaBBd7InJlc3VsdHMiOiBbeyJzeW1ib2wiOiAiQlRDIiwgImRlc2NyaXB0aW9uIjogIkJpdGNvaW4iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjYwJSIsICJhbGxvY2F0aW9uX251bWJlciI6IDYwLCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJCVENVU0RUIn0sIHsic3ltYm9sIjogIkVUSCIsICJkZXNjcmlwdGlvbiI6ICJFdGhlcmV1bSIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiMjAlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogMjAsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkVUSFVTRFQifSwgeyJzeW1ib2wiOiAiWFJQIiwgImRlc2NyaXB0aW9uIjogIlhSUCIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNSUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiA1LCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJYUlBVU0RUIn0sIHsic3ltYm9sIjogIlNPTCIsICJkZXNjcmlwdGlvbiI6ICJTb2xhbmEiLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiU09MVVNEVCJ9LCB7InN5bWJvbCI6ICJET0dFIiwgImRlc2NyaXB0aW9uIjogIkRvZ2Vjb2luIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkRPR0VVU0RUIn0sIHsic3ltYm9sIjogIkFEQSIsICJkZXNjcmlwdGlvbiI6ICJDYXJkYW5vIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkFEQVVTRFQifV0sICJ0b3RhbF9hc3NldHMiOiA2LCAicG9ydGZvbGlvX3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kgUG9ydGZvbGlvIn2xYWRkaXRpb25hbF9rd2FyZ3OAsXJlc3BvbnNlX21ldGFkYXRhgKR0eXBlpHRvb2ykbmFtZb1nZXRfcG9ydGZvbGlvX2FsbG9jYXRpb25fdG9vbKJpZNkkMjRiNmMzYmItMzRlZi00YTJiLThlNWUtMzFlMGY3ZmYwNzdlrHRvb2xfY2FsbF9pZNkjdG9vbHVfYmRya18wMVNQeVY5d3NBNHVyejdpdnV3WGk3OXaoYXJ0aWZhY3TApnN0YXR1c6dzdWNjZXNzs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd405023acaf9fbae653"
  },
  "task_id": "1f08ae90-f712-2995-4409-a4d60002896e",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint_id": "1f06d227-e0fb-6a38-8001-2e80f35c861a",
  "idx": 1,
  "task_path": "~__pregel_pull, tools",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd415023acaf9fbae655"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "idx": 0,
  "checkpoint_id": "1f06d227-e128-65c3-8002-c3ca28399414",
  "task_path": "~__pregel_pull, agent",
  "task_id": "0805da1f-5a0a-3715-e207-1fbbc523bd6c",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgEkAWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNnKT2theSwgYmFzZWQgb24geW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiwgeW91IGhhdmUgYSBoZWF2eSBmb2N1cyBvbiBCaXRjb2luICg2MCUpIHdpdGggdGhlIHJlc3Qgc3BsaXQgYmV0d2VlbiBFdGhlcmV1bSAoMjAlKSBhbmQgc21hbGxlciBhbGxvY2F0aW9ucyB0byBYUlAsIFNvbGFuYSwgRG9nZWNvaW4sIGFuZCBDYXJkYW5vLrFhZGRpdGlvbmFsX2t3YXJnc4WldXNhZ2WFrXByb21wdF90b2tlbnPNF36xY29tcGxldGlvbl90b2tlbnN3t2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80X9atzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowsXJlc3BvbnNlX21ldGFkYXRhhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc80XfrFjb21wbGV0aW9uX3Rva2Vuc3e3Y2FjaGVfcmVhZF9pbnB1dF90b2tlbnMAuGNhY2hlX3dyaXRlX2lucHV0X3Rva2VucwCsdG90YWxfdG9rZW5zzRf1q3N0b3BfcmVhc29uqHRvb2xfdXNlqHRoaW5raW5ngKhtb2RlbF9pZNkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCqbW9kZWxfbmFtZdkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCkdHlwZaJhaaRuYW1lwKJpZNkrcnVuLS01ZDY4NGI0ZS1kZmFlLTQ4MTgtOGY1MC1jMjZmMTI4ODQ2ZDQtMKdleGFtcGxlwqp0b29sX2NhbGxzkYSkbmFtZdkqY3J5cHRvX2FuYWx5c2lzX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29spGFyZ3OBpXF1ZXJ52StjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb24gcmVjb21tZW5kYXRpb25zomlk2SN0b29sdV9iZHJrXzAxQWtBUkxEM2dwYjlIM3dXOVh1SlpmdaR0eXBlqXRvb2xfY2FsbLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNF36tb3V0cHV0X3Rva2Vuc3esdG90YWxfdG9rZW5zzRf1s2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29u",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd415023acaf9fbae656"
  },
  "idx": 1,
  "checkpoint_id": "1f06d227-e128-65c3-8002-c3ca28399414",
  "task_path": "~__pregel_pull, agent",
  "task_id": "0805da1f-5a0a-3715-e207-1fbbc523bd6c",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd415023acaf9fbae658"
  },
  "checkpoint_id": "1f06d227-f045-6bde-8003-ef8d38943929",
  "idx": 0,
  "task_path": "~__pregel_pull, tools",
  "task_id": "3cf8f5af-81bd-c6d1-0785-adf8d7580927",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgemQWUvGxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLnRvb2yrVG9vbE1lc3NhZ2WJp2NvbnRlbnTaHXp7InJlc3VsdHMiOiBbeyJkYXRlIjogIjIwMjUwNzI1IiwgImNyeXB0b190cmVuZHMiOiBbeyJhc3NldCI6ICJCVEMiLCAiZmx1Y3R1YXRpb25fYW5zd2VyIjogIkJUQyBjbG9zZSBwcmljZSBpcyAkMTE5LDE3Ny41NiwgTUE5IGlzICQxMTksMjcxLjYyLCBNQTIxIGlzICQxMTksMzMyLjgwLCBhbmQgTUE1MCBpcyAkMTE5LDQ4OS4wOS4iLCAiZGlhZ25vc2lzIjogIkJlYXJpc2ggdHJlbmQgY29uZmlybWVkLiAyMDI1LTA3LTE3IGNsb3NlIHByaWNlIGJlbG93IE1BOSBhbmQgTUEyMS4gU2hvcnQtdGVybSBtb21lbnR1bSBuZWdhdGl2ZS4ifSwgeyJhc3NldCI6ICJFVEgiLCAiZmx1Y3R1YXRpb25fYW5zd2VyIjogIkVUSCBjbG9zZSBwcmljZSBpcyAkMyw0NzYuODcsIE1BOSBpcyAkMyw0NzcuMTEsIE1BMjEgaXMgJDMsNDc4LjUxLCBhbmQgTUE1MCBpcyAkMyw0OTEuNDEuIiwgImRpYWdub3NpcyI6ICJCZWFyaXNoIHRyZW5kIGNvbmZpcm1lZC4gMjAyNS0wNy0xNyBjbG9zZSBwcmljZSBiZWxvdyBNQTkgYW5kIE1BMjEuIFNob3J0LXRlcm0gbW9tZW50dW0gbmVnYXRpdmUuIn0sIHsiYXNzZXQiOiAiWFJQIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJYUlAgY2xvc2UgcHJpY2UgaXMgJDMuNDgsIE1BOSBpcyAkMy40OSwgTUEyMSBpcyAkMy41MSwgYW5kIE1BNTAgaXMgJDMuNTIuIiwgImRpYWdub3NpcyI6ICJCZWFyaXNoIHRyZW5kIGNvbmZpcm1lZC4gMjAyNS0wNy0xNyBjbG9zZSBwcmljZSBiZWxvdyBNQTkgYW5kIE1BMjEuIFNob3J0LXRlcm0gbW9tZW50dW0gbmVnYXRpdmUuIn0sIHsiYXNzZXQiOiAiU09MIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJTT0wgY2xvc2UgcHJpY2UgaXMgJDE3NS44NywgTUE5IGlzICQxNzUuNzMsIE1BMjEgaXMgJDE3NS45NiwgYW5kIE1BNTAgaXMgJDE3Ni4xMi4iLCAiZGlhZ25vc2lzIjogIk1peGVkIHNpZ25hbHMuIDIwMjUtMDctMTcgY2xvc2UgcHJpY2UgY29uc29saWRhdGluZyBiZXR3ZWVuIG1vdmluZyBhdmVyYWdlcyAoTUE5LCBNQTIxLCBNQTUwKS4ifSwgeyJhc3NldCI6ICJET0dFIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJET0dFIGNsb3NlIHByaWNlIGlzICQwLjIxODI2MCwgTUE5IGlzICQwLjIxODAzNCwgTUEyMSBpcyAkMC4yMTg2NjAsIGFuZCBNQTUwIGlzICQwLjIxOTQ5Ni4iLCAiZGlhZ25vc2lzIjogIk1peGVkIHNpZ25hbHMuIDIwMjUtMDctMTcgY2xvc2UgcHJpY2UgY29uc29saWRhdGluZyBiZXR3ZWVuIG1vdmluZyBhdmVyYWdlcyAoTUE5LCBNQTIxLCBNQTUwKS4ifSwgeyJhc3NldCI6ICJBREEiLCAiZmx1Y3R1YXRpb25fYW5zd2VyIjogIkFEQSBjbG9zZSBwcmljZSBpcyAkMC44MjE2MDAsIE1BOSBpcyAkMC44MjI5MDAsIE1BMjEgaXMgJDAuODI1NTQzLCBhbmQgTUE1MCBpcyAkMC44MzAxNTYuIiwgImRpYWdub3NpcyI6ICJCZWFyaXNoIHRyZW5kIGNvbmZpcm1lZC4gMjAyNS0wNy0xNyBjbG9zZSBwcmljZSBiZWxvdyBNQTkgYW5kIE1BMjEuIFNob3J0LXRlcm0gbW9tZW50dW0gbmVnYXRpdmUuIn1dLCAibW9tZW50dW1faW5kaWNhdG9ycyI6IFt7ImFzc2V0IjogIkJUQyIsICJtb21lbnR1bV9pbmRpY2F0b3JzIjogW3siaW5kaWNhdG9yX25hbWUiOiAiUlNJIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJCVEMgUlNJICgxNC1kYXkpIGlzIDI2Ljggb24gMjAyNS0wNy0xNy4iLCAiZGlhZ25vc2lzIjogIlJTSSBhdCAyNi44IGluZGljYXRlcyBvdmVyc29sZCBjb25kaXRpb25zLiBTdHJvbmcgYnV5aW5nIG9wcG9ydHVuaXR5IGZvciBCVEMuIn0sIHsiaW5kaWNhdG9yX25hbWUiOiAiVm9sdW1lIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJCVEMgdm9sdW1lIGlzIDcuMDcgdnMgMjEtZGF5IGF2ZyBvZiA3LjUxIG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJOb3JtYWwgdm9sdW1lIGxldmVscyAoMC45eCBhdmVyYWdlKS4gU3RhbmRhcmQgdHJhZGluZyBhY3Rpdml0eS4ifSwgeyJpbmRpY2F0b3JfbmFtZSI6ICJWV0FQIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJCVEMgVldBUCAoMTQtZGF5KSBpcyAkMTE5LDMxNC45NiB2cyBjdXJyZW50IHByaWNlICQxMTksMTc3LjU2IG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJQcmljZSAxMTkxNzcuNTYgdHJhZGluZyBuZWFyIFZXQVAgMTE5MzE0Ljk2ICgtMC4xJSkuIEJhbGFuY2VkIG1hcmtldCB3aXRoIG5ldXRyYWwgc2VudGltZW50LiJ9XX0sIHsiYXNzZXQiOiAiRVRIIiwgIm1vbWVudHVtX2luZGljYXRvcnMiOiBbeyJpbmRpY2F0b3JfbmFtZSI6ICJSU0kiLCAiZmx1Y3R1YXRpb25fYW5zd2VyIjogIkVUSCBSU0kgKDE0LWRheSkgaXMgMzkuMjQgb24gMjAyNS0wNy0xNy4iLCAiZGlhZ25vc2lzIjogIlJTSSBhdCAzOS4yNCBzaG93cyBiZWFyaXNoIG1vbWVudHVtLiBEb3dud2FyZCBwcmVzc3VyZSBtYXkgcGVyc2lzdC4ifSwgeyJpbmRpY2F0b3JfbmFtZSI6ICJWb2x1bWUiLCAiZmx1Y3R1YXRpb25fYW5zd2VyIjogIkVUSCB2b2x1bWUgaXMgMjM5LjMyIHZzIDIxLWRheSBhdmcgb2YgNDc5Ljg0IG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJCZWxvdyBhdmVyYWdlIHZvbHVtZSAoMC41eCBhdmVyYWdlKS4gTG93IG1hcmtldCBhY3Rpdml0eS4ifSwgeyJpbmRpY2F0b3JfbmFtZSI6ICJWV0FQIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJFVEggVldBUCAoMTQtZGF5KSBpcyAkMyw0NzkuMjIgdnMgY3VycmVudCBwcmljZSAkMyw0NzYuODcgb24gMjAyNS0wNy0xNy4iLCAiZGlhZ25vc2lzIjogIlByaWNlIDM0NzYuODcgdHJhZGluZyBuZWFyIFZXQVAgMzQ3OS4yMiAoLTAuMSUpLiBCYWxhbmNlZCBtYXJrZXQgd2l0aCBuZXV0cmFsIHNlbnRpbWVudC4ifV19LCB7ImFzc2V0IjogIlhSUCIsICJtb21lbnR1bV9pbmRpY2F0b3JzIjogW3siaW5kaWNhdG9yX25hbWUiOiAiUlNJIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJYUlAgUlNJICgxNC1kYXkpIGlzIDM1LjM4IG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJSU0kgYXQgMzUuMzggc2hvd3MgYmVhcmlzaCBtb21lbnR1bS4gRG93bndhcmQgcHJlc3N1cmUgbWF5IHBlcnNpc3QuIn0sIHsiaW5kaWNhdG9yX25hbWUiOiAiVm9sdW1lIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJYUlAgdm9sdW1lIGlzIDM5MCw2OTYgdnMgMjEtZGF5IGF2ZyBvZiA3MDMsMDM4IG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJCZWxvdyBhdmVyYWdlIHZvbHVtZSAoMC42eCBhdmVyYWdlKS4gTG93IG1hcmtldCBhY3Rpdml0eS4ifSwgeyJpbmRpY2F0b3JfbmFtZSI6ICJWV0FQIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJYUlAgVldBUCAoMTQtZGF5KSBpcyAkMy41MSB2cyBjdXJyZW50IHByaWNlICQzLjQ4IG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJQcmljZSAzLjQ4IHRyYWRpbmcgbmVhciBWV0FQIDMuNTEgKC0wLjglKS4gQmFsYW5jZWQgbWFya2V0IHdpdGggbmV1dHJhbCBzZW50aW1lbnQuIn1dfSwgeyJhc3NldCI6ICJTT0wiLCAibW9tZW50dW1faW5kaWNhdG9ycyI6IFt7ImluZGljYXRvcl9uYW1lIjogIlJTSSIsICJmbHVjdHVhdGlvbl9hbnN3ZXIiOiAiU09MIFJTSSAoMTQtZGF5KSBpcyA0Ny43IG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJSU0kgYXQgNDcuNyBzaG93cyBiZWFyaXNoIG1vbWVudHVtLiBEb3dud2FyZCBwcmVzc3VyZSBtYXkgcGVyc2lzdC4ifSwgeyJpbmRpY2F0b3JfbmFtZSI6ICJWb2x1bWUiLCAiZmx1Y3R1YXRpb25fYW5zd2VyIjogIlNPTCB2b2x1bWUgaXMgMiw0OTUgdnMgMjEtZGF5IGF2ZyBvZiAyLDg5NCBvbiAyMDI1LTA3LTE3LiIsICJkaWFnbm9zaXMiOiAiTm9ybWFsIHZvbHVtZSBsZXZlbHMgKDAuOXggYXZlcmFnZSkuIFN0YW5kYXJkIHRyYWRpbmcgYWN0aXZpdHkuIn0sIHsiaW5kaWNhdG9yX25hbWUiOiAiVldBUCIsICJmbHVjdHVhdGlvbl9hbnN3ZXIiOiAiU09MIFZXQVAgKDE0LWRheSkgaXMgJDE3NS45MCB2cyBjdXJyZW50IHByaWNlICQxNzUuODcgb24gMjAyNS0wNy0xNy4iLCAiZGlhZ25vc2lzIjogIlByaWNlIDE3NS44NyB0cmFkaW5nIG5lYXIgVldBUCAxNzUuOTAgKC0wLjAlKS4gQmFsYW5jZWQgbWFya2V0IHdpdGggbmV1dHJhbCBzZW50aW1lbnQuIn1dfSwgeyJhc3NldCI6ICJET0dFIiwgIm1vbWVudHVtX2luZGljYXRvcnMiOiBbeyJpbmRpY2F0b3JfbmFtZSI6ICJSU0kiLCAiZmx1Y3R1YXRpb25fYW5zd2VyIjogIkRPR0UgUlNJICgxNC1kYXkpIGlzIDQ1LjI4IG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJSU0kgYXQgNDUuMjggc2hvd3MgYmVhcmlzaCBtb21lbnR1bS4gRG93bndhcmQgcHJlc3N1cmUgbWF5IHBlcnNpc3QuIn0sIHsiaW5kaWNhdG9yX25hbWUiOiAiVm9sdW1lIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJET0dFIHZvbHVtZSBpcyA3MTIsNjAzIHZzIDIxLWRheSBhdmcgb2YgMSwyNjQsMzkzIG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJCZWxvdyBhdmVyYWdlIHZvbHVtZSAoMC42eCBhdmVyYWdlKS4gTG93IG1hcmtldCBhY3Rpdml0eS4ifSwgeyJpbmRpY2F0b3JfbmFtZSI6ICJWV0FQIiwgImZsdWN0dWF0aW9uX2Fuc3dlciI6ICJET0dFIFZXQVAgKDE0LWRheSkgaXMgJDAuMjE4MTgyIHZzIGN1cnJlbnQgcHJpY2UgJDAuMjE4MjYwIG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJQcmljZSAwLjIyIHRyYWRpbmcgbmVhciBWV0FQIDAuMjIgKCswLjAlKS4gQmFsYW5jZWQgbWFya2V0IHdpdGggbmV1dHJhbCBzZW50aW1lbnQuIn1dfSwgeyJhc3NldCI6ICJBREEiLCAibW9tZW50dW1faW5kaWNhdG9ycyI6IFt7ImluZGljYXRvcl9uYW1lIjogIlJTSSIsICJmbHVjdHVhdGlvbl9hbnN3ZXIiOiAiQURBIFJTSSAoMTQtZGF5KSBpcyAzMy45OCBvbiAyMDI1LTA3LTE3LiIsICJkaWFnbm9zaXMiOiAiUlNJIGF0IDMzLjk4IHNob3dzIGJlYXJpc2ggbW9tZW50dW0uIERvd253YXJkIHByZXNzdXJlIG1heSBwZXJzaXN0LiJ9LCB7ImluZGljYXRvcl9uYW1lIjogIlZvbHVtZSIsICJmbHVjdHVhdGlvbl9hbnN3ZXIiOiAiQURBIHZvbHVtZSBpcyAxODIsMDQ5IHZzIDIxLWRheSBhdmcgb2YgMjY5LDYzMyBvbiAyMDI1LTA3LTE3LiIsICJkaWFnbm9zaXMiOiAiQmVsb3cgYXZlcmFnZSB2b2x1bWUgKDAuN3ggYXZlcmFnZSkuIExvdyBtYXJrZXQgYWN0aXZpdHkuIn0sIHsiaW5kaWNhdG9yX25hbWUiOiAiVldBUCIsICJmbHVjdHVhdGlvbl9hbnN3ZXIiOiAiQURBIFZXQVAgKDE0LWRheSkgaXMgJDAuODIzOTQyIHZzIGN1cnJlbnQgcHJpY2UgJDAuODIxNjAwIG9uIDIwMjUtMDctMTcuIiwgImRpYWdub3NpcyI6ICJQcmljZSAwLjgyIHRyYWRpbmcgbmVhciBWV0FQIDAuODIgKC0wLjMlKS4gQmFsYW5jZWQgbWFya2V0IHdpdGggbmV1dHJhbCBzZW50aW1lbnQuIn1dfV0sICJvdmVyYWxsX2RpYWdub3NpcyI6ICJCYXNlZCBvbiB0aGUgcHJvdmlkZWQgY3J5cHRvIHBvcnRmb2xpbyBhbmFseXNpcywgdGhlIG92ZXJhbGwgZGlhZ25vc2lzIGlzIGFzIGZvbGxvd3M6XG5cblRoZSBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gaGFzIGEgaGlnaCBleHBvc3VyZSB0byB2b2xhdGlsZSBjcnlwdG9jdXJyZW5jaWVzLCB3aXRoIDEwMCUgYWxsb2NhdGlvbiB0byBkaWdpdGFsIGFzc2V0cyBhbmQgbm8gc3RhYmxlY29pbiBleHBvc3VyZS4gVGhlIHBvcnRmb2xpbyBpcyBoZWF2aWx5IHdlaWdodGVkIHRvd2FyZHMgQml0Y29pbiAoNjAlKSwgd2hpY2ggaXMgZXhoaWJpdGluZyBhIGJlYXJpc2ggdHJlbmQgY29uZmlybWVkIGJ5IHRoZSBtb3ZpbmcgYXZlcmFnZSBhbmFseXNpcy4gRXRoZXJldW0gKDIwJSksIFhSUCAoNSUpLCBhbmQgQ2FyZGFubyAoNSUpIGFyZSBhbHNvIHNob3dpbmcgYmVhcmlzaCBtb21lbnR1bSwgd2l0aCB0aGVpciBjbG9zZSBwcmljZXMgdHJhZGluZyBiZWxvdyB0aGUgc2hvcnQtdGVybSBtb3ZpbmcgYXZlcmFnZXMuXG5cblRoZSBtb21lbnR1bSBpbmRpY2F0b3JzIGZ1cnRoZXIgcmVpbmZvcmNlIHRoZSBiZWFyaXNoIHNlbnRpbWVudCwgd2l0aCB0aGUgUlNJIGZvciBtb3N0IGNyeXB0b2N1cnJlbmNpZXMgaW4gdGhlIHBvcnRmb2xpbyBpbmRpY2F0aW5nIG92ZXJzb2xkIG9yIGJlYXJpc2ggY29uZGl0aW9ucy4gVGhlIHRyYWRpbmcgdm9sdW1lIGlzIGFsc28gYmVsb3cgYXZlcmFnZSBmb3Igc2V2ZXJhbCBhc3NldHMsIHN1Z2dlc3RpbmcgbG93IG1hcmtldCBhY3Rpdml0eSBhbmQgcG90ZW50aWFsIGNvbnRpbnVlZCBkb3dud2FyZCBwcmVzc3VyZS5cblxuVG8gYWRkcmVzcyB0aGUgaGlnaC1yaXNrIHByb2ZpbGUgYW5kIGxhY2sgb2YgZGl2ZXJzaWZpY2F0aW9uLCB0aGUgZm9sbG93aW5nIHJlY29tbWVuZGF0aW9ucyBhcmUgcHJvdmlkZWQ6XG5cbjEuIFJlZHVjZSB0aGUgb3ZlcmFsbCBjcnlwdG9jdXJyZW5jeSBleHBvc3VyZSBieSBhbGxvY2F0aW5nIGEgcG9ydGlvbiBvZiB0aGUgcG9ydGZvbGlvIHRvIHN0YWJsZWNvaW5zLiBBIDIwLTMwJSBhbGxvY2F0aW9uIHRvIHN0YWJsZWNvaW5zLCBzdWNoIGFzIFVTREMgb3IgREFJLCB3b3VsZCBwcm92aWRlIHN0YWJpbGl0eSBhbmQgcmVkdWNlIHRoZSBwb3J0Zm9saW8ncyB2b2xhdGlsaXR5LlxuXG4yLiBSZWJhbGFuY2UgdGhlIGNyeXB0b2N1cnJlbmN5IGFsbG9jYXRpb24gdG8gYWNoaWV2ZSBiZXR0ZXIgZGl2ZXJzaWZpY2F0aW9uLiBDb25zaWRlciByZWR1Y2luZyB0aGUgQml0Y29pbiBleHBvc3VyZSB0byA0MC01MCUgYW5kIGluY3JlYXNpbmcgdGhlIGFsbG9jYXRpb24gdG8gRXRoZXJldW0gKDI1LTMwJSksIFNvbGFuYSAoMTAtMTUlKSwgYW5kIERvZ2Vjb2luICg1LTEwJSkuIFRoaXMgd291bGQgcHJvdmlkZSBtb3JlIGJhbGFuY2VkIGV4cG9zdXJlIHRvIGRpZmZlcmVudCBzZWN0b3JzIG9mIHRoZSBjcnlwdG8gbWFya2V0LlxuXG4zLiBDbG9zZWx5IG1vbml0b3IgdGhlIHNob3J0LXRlcm0gbW9tZW50dW0gaW5kaWNhdG9ycyBhbmQgY29uc2lkZXIgdGFjdGljYWwgYWRqdXN0bWVudHMgdG8gdGhlIHBvcnRmb2xpbyBhcyB0aGUgbWFya2V0IGNvbmRpdGlvbnMgZXZvbHZlLiBNYWludGFpbiBhIGRpc2NpcGxpbmVkIGFwcHJvYWNoIHRvIHJpc2sgbWFuYWdlbWVudCBhbmQgYmUgcHJlcGFyZWQgdG8gdGFrZSBhY3Rpb24gdG8gcHJvdGVjdCB0aGUgcG9ydGZvbGlvJ3MgdmFsdWUgZHVyaW5nIHBlcmlvZHMgb2YgaGVpZ2h0ZW5lZCB2b2xhdGlsaXR5LlxuXG5CeSBpbXBsZW1lbnRpbmcgdGhlc2UgcmVjb21tZW5kYXRpb25zLCB0aGUgcG9ydGZvbGlvIGNhbiBhY2hpZXZlIGEgYmV0dGVyIGJhbGFuY2UgYmV0d2VlbiBncm93dGggYW5kIHN0YWJpbGl0eSwgYWxpZ25pbmcgd2l0aCB0aGUgXCJNaXggb2YgZ3Jvd3RoIGFuZCBzdGFiaWxpdHksIG1vZGVyYXRlIHJpc2tcIiByaXNrIHByb2ZpbGUuIiwgInBvcnRmb2xpb19hc3NldHMiOiBbIkJUQyIsICJFVEgiLCAiWFJQIiwgIlNPTCIsICJET0dFIiwgIkFEQSJdfV0sICJwb3J0Zm9saW9fY29udGV4dCI6ICJBbmFseXNpcyBmb3IgY3J5cHRvIHBvcnRmb2xpbyBjb250YWluaW5nOiBCVEMsIEVUSCwgWFJQLCBTT0wsIERPR0UsIEFEQSIsICJyZXBvcnRfZGF0ZSI6ICIyMDI1MDcyNSJ9sWFkZGl0aW9uYWxfa3dhcmdzgLFyZXNwb25zZV9tZXRhZGF0YYCkdHlwZaR0b29spG5hbWXZKmNyeXB0b19hbmFseXNpc19yZXBvcnRzX3ZlY3Rvcl9zZWFyY2hfdG9vbKJpZNkkNTY5NmRjNWQtNGVmYy00OWQ4LWIxOGItOTgwNTVjYjkzMTQ2rHRvb2xfY2FsbF9pZNkjdG9vbHVfYmRya18wMUFrQVJMRDNncGI5SDN3VzlYdUpaZnWoYXJ0aWZhY3TApnN0YXR1c6dzdWNjZXNzs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd415023acaf9fbae659"
  },
  "task_id": "3cf8f5af-81bd-c6d1-0785-adf8d7580927",
  "thread_id": "thread_20250730_085210",
  "task_path": "~__pregel_pull, tools",
  "checkpoint_id": "1f06d227-f045-6bde-8003-ef8d38943929",
  "idx": 1,
  "checkpoint_ns": "",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd435023acaf9fbae65b"
  },
  "task_id": "b0a02f08-86cd-51f7-ee9c-48a7357e6a85",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "idx": 0,
  "checkpoint_id": "1f06d227-f270-69cf-8004-d2ca27d13ea1",
  "task_path": "~__pregel_pull, agent",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgDtAWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudKCxYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzSGlsWNvbXBsZXRpb25fdG9rZW5zQbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNIearc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNIaWxY29tcGxldGlvbl90b2tlbnNBt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80h5qtzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tNmIyNjY4NDEtNWFjZS00YTk3LWJiMGYtNmI0NzBhMjVhMjVjLTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWXZJmNyeXB0b19uZXdzX3JlcG9ydHNfdmVjdG9yX3NlYXJjaF90b29spGFyZ3OBpXF1ZXJ5v2NyeXB0byBwb3J0Zm9saW8gbmV3cyBzZW50aW1lbnSiaWTZI3Rvb2x1X2JkcmtfMDFQU1QycXdhTmlITXlDRkdubW9CY0FQpHR5cGWpdG9vbF9jYWxssmludmFsaWRfdG9vbF9jYWxsc5CudXNhZ2VfbWV0YWRhdGGErGlucHV0X3Rva2Vuc80hpa1vdXRwdXRfdG9rZW5zQax0b3RhbF90b2tlbnPNIeazaW5wdXRfdG9rZW5fZGV0YWlsc4KuY2FjaGVfY3JlYXRpb24AqmNhY2hlX3JlYWQAs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd435023acaf9fbae65c"
  },
  "task_id": "b0a02f08-86cd-51f7-ee9c-48a7357e6a85",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint_id": "1f06d227-f270-69cf-8004-d2ca27d13ea1",
  "idx": 1,
  "task_path": "~__pregel_pull, agent",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd435023acaf9fbae65e"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "idx": 0,
  "checkpoint_id": "1f06d227-ff22-6305-8005-1d6eb1e5a285",
  "task_path": "~__pregel_pull, tools",
  "task_id": "0211abd1-5ac2-98ed-f4b6-c832927a5237",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd435023acaf9fbae65f"
  },
  "task_id": "0211abd1-5ac2-98ed-f4b6-c832927a5237",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint_id": "1f06d227-ff22-6305-8005-1d6eb1e5a285",
  "idx": 1,
  "task_path": "~__pregel_pull, tools",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd455023acaf9fbae661"
  },
  "task_id": "0ed72041-c05f-6175-ab16-1af2c6809b72",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "idx": 0,
  "checkpoint_id": "1f06d228-015d-6313-8006-f8c6cb03136b",
  "task_path": "~__pregel_pull, agent",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgDxQWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudKCxYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzTymsWNvbXBsZXRpb25fdG9rZW5zRLdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNPOqrc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNPKaxY29tcGxldGlvbl90b2tlbnNEt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc8086qtzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowpHR5cGWiYWmkbmFtZcCiaWTZK3J1bi0tNThiYjI2MGEtZjk2Yi00OTNmLTg2N2ItNGE4NTA1NDBjZTI3LTCnZXhhbXBsZcKqdG9vbF9jYWxsc5GEpG5hbWXZLmNyeXB0b19zb2NpYWxfbWVkaWFfcmVwb3J0c192ZWN0b3Jfc2VhcmNoX3Rvb2ykYXJnc4GlcXVlcnnZJ2NyeXB0byBwb3J0Zm9saW8gc29jaWFsIG1lZGlhIHNlbnRpbWVudKJpZNkjdG9vbHVfYmRya18wMTViRjk2cXBHRkx1VHNraDRDM3VSOHOkdHlwZal0b29sX2NhbGyyaW52YWxpZF90b29sX2NhbGxzkK51c2FnZV9tZXRhZGF0YYSsaW5wdXRfdG9rZW5zzTymrW91dHB1dF90b2tlbnNErHRvdGFsX3Rva2Vuc8086rNpbnB1dF90b2tlbl9kZXRhaWxzgq5jYWNoZV9jcmVhdGlvbgCqY2FjaGVfcmVhZACzbW9kZWxfdmFsaWRhdGVfanNvbg==",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd455023acaf9fbae662"
  },
  "task_id": "0ed72041-c05f-6175-ab16-1af2c6809b72",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "checkpoint_id": "1f06d228-015d-6313-8006-f8c6cb03136b",
  "idx": 1,
  "task_path": "~__pregel_pull, agent",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd455023acaf9fbae664"
  },
  "task_id": "8c42165a-a51e-5950-bf57-63d11dab5f7c",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "idx": 0,
  "checkpoint_id": "1f06d228-113f-6be1-8007-e85cb012286c",
  "task_path": "~__pregel_pull, tools",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd455023acaf9fbae665"
  },
  "idx": 1,
  "checkpoint_id": "1f06d228-113f-6be1-8007-e85cb012286c",
  "task_path": "~__pregel_pull, tools",
  "task_id": "8c42165a-a51e-5950-bf57-63d11dab5f7c",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd4c5023acaf9fbae667"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085210",
  "idx": 0,
  "checkpoint_id": "1f06d228-13c3-6fdc-8008-fab6b30f2613",
  "task_path": "~__pregel_pull, agent",
  "task_id": "5431ed75-c279-1d55-b946-92290de857e1",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgMqgWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNoJfzxyZXN1bHQ+CkJhc2VkIG9uIHRoZSBjb21wcmVoZW5zaXZlIGFuYWx5c2lzIG9mIHlvdXIgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvLCBoZXJlIGFyZSBteSBrZXkgaW5zaWdodHMgYW5kIHJlY29tbWVuZGF0aW9uczoKClBvcnRmb2xpbyBBbGxvY2F0aW9uOgpZb3VyIGN1cnJlbnQgY3J5cHRvIHBvcnRmb2xpbyBoYXMgYSBoZWF2eSBmb2N1cyBvbiBCaXRjb2luICg2MCUpLCB3aXRoIHRoZSByZXN0IHNwbGl0IGJldHdlZW4gRXRoZXJldW0gKDIwJSkgYW5kIHNtYWxsZXIgYWxsb2NhdGlvbnMgdG8gWFJQLCBTb2xhbmEsIERvZ2Vjb2luLCBhbmQgQ2FyZGFuby4gVGhpcyBhbGxvY2F0aW9uIGlzIGhlYXZpbHkgd2VpZ2h0ZWQgdG93YXJkcyB2b2xhdGlsZSBjcnlwdG9jdXJyZW5jaWVzLCB3aXRoIG5vIHN0YWJsZWNvaW4gZXhwb3N1cmUuCgpNYXJrZXQgQ29uZGl0aW9ucyBhbmQgVHJlbmRzOgpUaGUgbWFya2V0IGFuYWx5c2lzIHNob3dzIGEgcHJlZG9taW5hbnRseSBiZWFyaXNoIG91dGxvb2sgZm9yIHlvdXIgcG9ydGZvbGlvIGhvbGRpbmdzLCB3aXRoIEJpdGNvaW4sIEV0aGVyZXVtLCBYUlAsIGFuZCBDYXJkYW5vIGFsbCBleGhpYml0aW5nIGJlYXJpc2ggbW9tZW50dW0gYmFzZWQgb24gbW92aW5nIGF2ZXJhZ2UgYW5kIFJTSSBpbmRpY2F0b3JzLiBTb2xhbmEgYW5kIERvZ2Vjb2luIGFyZSBzaG93aW5nIG1vcmUgbWl4ZWQgc2lnbmFscywgd2l0aCBwb3RlbnRpYWwgc3VwcG9ydCBsZXZlbHMgdG8gd2F0Y2guCgpTZW50aW1lbnQgQW5hbHlzaXM6ClRoZSBuZXdzIGFuZCBzb2NpYWwgbWVkaWEgc2VudGltZW50IGFuYWx5c2lzIHBhaW50cyBhIG1peGVkIHBpY3R1cmUuIEJpdGNvaW4sIEV0aGVyZXVtLCBYUlAsIGFuZCBDYXJkYW5vIGFyZSB2aWV3ZWQgcG9zaXRpdmVseSBieSB0aGUgY29tbXVuaXR5LCB3aXRoIGludmVzdG9ycyBvcHRpbWlzdGljIGFib3V0IHRoZWlyIGxvbmctdGVybSBwcm9zcGVjdHMuIEhvd2V2ZXIsIFNvbGFuYSBhbmQgRG9nZWNvaW4gZmFjZSBtb3JlIG5ldXRyYWwgdG8gbmVnYXRpdmUgc2VudGltZW50LCB3aXRoIGNvbmNlcm5zIGFib3V0IHRoZWlyIHN1c3RhaW5hYmlsaXR5IGFuZCB2b2xhdGlsaXR5LgoKUmVjb21tZW5kYXRpb25zOgpUbyBhZGRyZXNzIHRoZSBoaWdoLXJpc2sgcHJvZmlsZSBhbmQgbGFjayBvZiBkaXZlcnNpZmljYXRpb24gaW4geW91ciBjdXJyZW50IHBvcnRmb2xpbywgSSB3b3VsZCByZWNvbW1lbmQgdGhlIGZvbGxvd2luZzoKCjEuIFJlZHVjZSBvdmVyYWxsIGNyeXB0b2N1cnJlbmN5IGV4cG9zdXJlIGJ5IGFsbG9jYXRpbmcgMjAtMzAlIG9mIHRoZSBwb3J0Zm9saW8gdG8gc3RhYmxlY29pbnMgbGlrZSBVU0RDIG9yIERBSS4gVGhpcyB3aWxsIHByb3ZpZGUgc3RhYmlsaXR5IGFuZCByZWR1Y2UgdGhlIHBvcnRmb2xpbydzIHZvbGF0aWxpdHkuCgoyLiBSZWJhbGFuY2UgdGhlIGNyeXB0b2N1cnJlbmN5IGFsbG9jYXRpb24gdG8gYWNoaWV2ZSBiZXR0ZXIgZGl2ZXJzaWZpY2F0aW9uLiBDb25zaWRlciByZWR1Y2luZyB0aGUgQml0Y29pbiBleHBvc3VyZSB0byA0MC01MCUgYW5kIGluY3JlYXNpbmcgdGhlIGFsbG9jYXRpb24gdG8gRXRoZXJldW0gKDI1LTMwJSksIFNvbGFuYSAoMTAtMTUlKSwgYW5kIERvZ2Vjb2luICg1LTEwJSkuIFRoaXMgd291bGQgcHJvdmlkZSBtb3JlIGJhbGFuY2VkIGV4cG9zdXJlIHRvIGRpZmZlcmVudCBzZWN0b3JzIG9mIHRoZSBjcnlwdG8gbWFya2V0LgoKMy4gQ2xvc2VseSBtb25pdG9yIHRoZSBzaG9ydC10ZXJtIG1vbWVudHVtIGluZGljYXRvcnMgYW5kIGJlIHByZXBhcmVkIHRvIG1ha2UgdGFjdGljYWwgYWRqdXN0bWVudHMgdG8gdGhlIHBvcnRmb2xpbyBhcyBtYXJrZXQgY29uZGl0aW9ucyBldm9sdmUuIE1haW50YWluIGEgZGlzY2lwbGluZWQgYXBwcm9hY2ggdG8gcmlzayBtYW5hZ2VtZW50IGFuZCBiZSByZWFkeSB0byB0YWtlIGFjdGlvbiB0byBwcm90ZWN0IHRoZSBwb3J0Zm9saW8ncyB2YWx1ZSBkdXJpbmcgcGVyaW9kcyBvZiBoZWlnaHRlbmVkIHZvbGF0aWxpdHkuCgpCeSBpbXBsZW1lbnRpbmcgdGhlc2UgcmVjb21tZW5kYXRpb25zLCB5b3VyIHBvcnRmb2xpbyBjYW4gYWNoaWV2ZSBhIGJldHRlciBiYWxhbmNlIGJldHdlZW4gZ3Jvd3RoIGFuZCBzdGFiaWxpdHksIGFsaWduaW5nIHdpdGggeW91ciAiQkFMQU5DRSIgcmlzayBwcm9maWxlLiBUaGlzIGFwcHJvYWNoIHNob3VsZCBoZWxwIHlvdSBuYXZpZ2F0ZSB0aGUgY3VycmVudCBtYXJrZXQgZW52aXJvbm1lbnQgbW9yZSBlZmZlY3RpdmVseSBhbmQgcG9zaXRpb24geW91ciBpbnZlc3RtZW50cyBmb3IgbG9uZy10ZXJtIHN1Y2Nlc3MuCgpXb3VsZCB5b3UgbGlrZSBtZSB0byBwcm92aWRlIGFueSBhZGRpdGlvbmFsIGRldGFpbHMgb3IgY2xhcmlmaWNhdGlvbiBvbiB0aGVzZSByZWNvbW1lbmRhdGlvbnM/IFlFUy9OTwo8L3Jlc3VsdD6xYWRkaXRpb25hbF9rd2FyZ3OFpXVzYWdlha1wcm9tcHRfdG9rZW5zzb+ysWNvbXBsZXRpb25fdG9rZW5zzQIJt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc83Bu6tzdG9wX3JlYXNvbqhlbmRfdHVybqh0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowsXJlc3BvbnNlX21ldGFkYXRhhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc82/srFjb21wbGV0aW9uX3Rva2Vuc80CCbdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNwburc3RvcF9yZWFzb26oZW5kX3R1cm6odGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKR0eXBlomFppG5hbWXAomlk2StydW4tLTMzNmZmYjMyLTM4YTgtNGQwYy05OTM4LThhY2U2YWFlMWI5NS0wp2V4YW1wbGXCqnRvb2xfY2FsbHOQsmludmFsaWRfdG9vbF9jYWxsc5CudXNhZ2VfbWV0YWRhdGGErGlucHV0X3Rva2Vuc82/sq1vdXRwdXRfdG9rZW5zzQIJrHRvdGFsX3Rva2Vuc83Bu7NpbnB1dF90b2tlbl9kZXRhaWxzgq5jYWNoZV9jcmVhdGlvbgCqY2FjaGVfcmVhZACzbW9kZWxfdmFsaWRhdGVfanNvbg==",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd715023acaf9fbae66a"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "checkpoint_id": "1f06d229-b8dc-68ac-bfff-225db7913dbe",
  "idx": 0,
  "task_path": "~__pregel_pull, __start__",
  "task_id": "a84e00f5-8887-ae43-8175-19b8dbfb99ff",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgBXQWUvWxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmh1bWFurEh1bWFuTWVzc2FnZYenY29udGVudNmpQ29uc2lkZXJpbmcgdGhlIGN1cnJlbnQgY3J5cHRvIG1hcmtldCBjb25kaXRpb25zLCBtb21lbnR1bSwgYW5kIHNlbnRpbWVudCBmcm9tIHNvY2lhbCBtZWRpYSBhbmQgbmV3cywgd2hhdCB3b3VsZCBiZSB0aGUgb3B0aW1hbCBjcnlwdG8gYXNzZXQgYWxsb2NhdGlvbiBmb3IgbXkgcG9ydGZvbGlvP7FhZGRpdGlvbmFsX2t3YXJnc4CxcmVzcG9uc2VfbWV0YWRhdGGApHR5cGWlaHVtYW6kbmFtZcCiaWTZJGE4NzFmODI1LTJmMzYtNGM2Ni1iNTM4LWI1YTNhY2QyMjljN6dleGFtcGxlwrNtb2RlbF92YWxpZGF0ZV9qc29u",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd715023acaf9fbae66b"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "checkpoint_id": "1f06d229-b8dc-68ac-bfff-225db7913dbe",
  "idx": 1,
  "task_path": "~__pregel_pull, __start__",
  "task_id": "a84e00f5-8887-ae43-8175-19b8dbfb99ff",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd725023acaf9fbae66d"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "checkpoint_id": "1f06d229-b8dd-6669-8000-835dbfcc302c",
  "idx": 0,
  "task_path": "~__pregel_pull, agent",
  "task_id": "d84c491e-b43a-5ef0-490f-913e2367f436",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgEQQWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNmRT2theSwgbGV0J3MgdGFrZSBhIGxvb2sgYXQgeW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiBhbmQgdGhlbiBhbmFseXplIHRoZSBtYXJrZXQgY29uZGl0aW9ucyB0byBwcm92aWRlIGEgcmVjb21tZW5kZWQgcmVhbGxvY2F0aW9uLrFhZGRpdGlvbmFsX2t3YXJnc4WldXNhZ2WFrXByb21wdF90b2tlbnPNFb6xY29tcGxldGlvbl90b2tlbnNZt2NhY2hlX3JlYWRfaW5wdXRfdG9rZW5zALhjYWNoZV93cml0ZV9pbnB1dF90b2tlbnMArHRvdGFsX3Rva2Vuc80WF6tzdG9wX3JlYXNvbqh0b29sX3VzZah0aGlua2luZ4CobW9kZWxfaWTZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowqm1vZGVsX25hbWXZJmFudGhyb3BpYy5jbGF1ZGUtMy1oYWlrdS0yMDI0MDMwNy12MTowsXJlc3BvbnNlX21ldGFkYXRhhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc80VvrFjb21wbGV0aW9uX3Rva2Vuc1m3Y2FjaGVfcmVhZF9pbnB1dF90b2tlbnMAuGNhY2hlX3dyaXRlX2lucHV0X3Rva2VucwCsdG90YWxfdG9rZW5zzRYXq3N0b3BfcmVhc29uqHRvb2xfdXNlqHRoaW5raW5ngKhtb2RlbF9pZNkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCqbW9kZWxfbmFtZdkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCkdHlwZaJhaaRuYW1lwKJpZNkrcnVuLS02NjE2MzkxNi00Mzg0LTQ4N2QtYmY2Zi05ZGQ1ZGZmOWNhYTgtMKdleGFtcGxlwqp0b29sX2NhbGxzkYSkbmFtZb1nZXRfcG9ydGZvbGlvX2FsbG9jYXRpb25fdG9vbKRhcmdzgaVxdWVyedkjY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGFsbG9jYXRpb26iaWTZI3Rvb2x1X2JkcmtfMDE1TEU3SDg2TDNWVEROSGhzTFBpRnBUpHR5cGWpdG9vbF9jYWxssmludmFsaWRfdG9vbF9jYWxsc5CudXNhZ2VfbWV0YWRhdGGErGlucHV0X3Rva2Vuc80Vvq1vdXRwdXRfdG9rZW5zWax0b3RhbF90b2tlbnPNFhezaW5wdXRfdG9rZW5fZGV0YWlsc4KuY2FjaGVfY3JlYXRpb24AqmNhY2hlX3JlYWQAs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd725023acaf9fbae66e"
  },
  "checkpoint_id": "1f06d229-b8dd-6669-8000-835dbfcc302c",
  "idx": 1,
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "task_id": "d84c491e-b43a-5ef0-490f-913e2367f436",
  "task_path": "~__pregel_pull, agent",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd725023acaf9fbae670"
  },
  "checkpoint_id": "1f06d229-c51f-6e60-8001-8203bd4906b5",
  "idx": 0,
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "task_id": "d25ecf3c-ad39-66a5-6849-37469f8a8057",
  "task_path": "~__pregel_pull, tools",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgFKAWUvGxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLnRvb2yrVG9vbE1lc3NhZ2WJp2NvbnRlbnTaBBd7InJlc3VsdHMiOiBbeyJzeW1ib2wiOiAiQlRDIiwgImRlc2NyaXB0aW9uIjogIkJpdGNvaW4iLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjYwJSIsICJhbGxvY2F0aW9uX251bWJlciI6IDYwLCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJCVENVU0RUIn0sIHsic3ltYm9sIjogIkVUSCIsICJkZXNjcmlwdGlvbiI6ICJFdGhlcmV1bSIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiMjAlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogMjAsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkVUSFVTRFQifSwgeyJzeW1ib2wiOiAiWFJQIiwgImRlc2NyaXB0aW9uIjogIlhSUCIsICJhbGxvY2F0aW9uX3BlcmNlbnRhZ2UiOiAiNSUiLCAiYWxsb2NhdGlvbl9udW1iZXIiOiA1LCAiYXNzZXRfdHlwZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJiaW5hbmNlX3N5bWJvbCI6ICJYUlBVU0RUIn0sIHsic3ltYm9sIjogIlNPTCIsICJkZXNjcmlwdGlvbiI6ICJTb2xhbmEiLCAiYWxsb2NhdGlvbl9wZXJjZW50YWdlIjogIjUlIiwgImFsbG9jYXRpb25fbnVtYmVyIjogNSwgImFzc2V0X3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kiLCAiYmluYW5jZV9zeW1ib2wiOiAiU09MVVNEVCJ9LCB7InN5bWJvbCI6ICJET0dFIiwgImRlc2NyaXB0aW9uIjogIkRvZ2Vjb2luIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkRPR0VVU0RUIn0sIHsic3ltYm9sIjogIkFEQSIsICJkZXNjcmlwdGlvbiI6ICJDYXJkYW5vIiwgImFsbG9jYXRpb25fcGVyY2VudGFnZSI6ICI1JSIsICJhbGxvY2F0aW9uX251bWJlciI6IDUsICJhc3NldF90eXBlIjogIkNyeXB0b2N1cnJlbmN5IiwgImJpbmFuY2Vfc3ltYm9sIjogIkFEQVVTRFQifV0sICJ0b3RhbF9hc3NldHMiOiA2LCAicG9ydGZvbGlvX3R5cGUiOiAiQ3J5cHRvY3VycmVuY3kgUG9ydGZvbGlvIn2xYWRkaXRpb25hbF9rd2FyZ3OAsXJlc3BvbnNlX21ldGFkYXRhgKR0eXBlpHRvb2ykbmFtZb1nZXRfcG9ydGZvbGlvX2FsbG9jYXRpb25fdG9vbKJpZNkkODgwMmY3YWUtNDc1Ny00ZDMzLWJiMTMtMjdmYWVmMDIyNGQ3rHRvb2xfY2FsbF9pZNkjdG9vbHVfYmRya18wMTVMRTdIODZMM1ZURE5IaHNMUGlGcFSoYXJ0aWZhY3TApnN0YXR1c6dzdWNjZXNzs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd725023acaf9fbae671"
  },
  "idx": 1,
  "task_path": "~__pregel_pull, tools",
  "task_id": "d25ecf3c-ad39-66a5-6849-37469f8a8057",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "checkpoint_id": "1f06d229-c51f-6e60-8001-8203bd4906b5",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd745023acaf9fbae673"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "checkpoint_id": "1f06d229-c54d-62af-8002-58f6be2a5c82",
  "idx": 0,
  "task_path": "~__pregel_pull, agent",
  "task_id": "ad3b2e39-a8a7-5908-1a62-c0710b42eb25",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgEigWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNmyT2theSwgYmFzZWQgb24geW91ciBjdXJyZW50IGNyeXB0byBwb3J0Zm9saW8gYWxsb2NhdGlvbiwgeW91IGhhdmUgYSBoZWF2eSBmb2N1cyBvbiBCaXRjb2luICg2MCUpIHdpdGggdGhlIHJlbWFpbmluZyA0MCUgc3BsaXQgYWNyb3NzIEV0aGVyZXVtLCBYUlAsIFNvbGFuYSwgRG9nZWNvaW4sIGFuZCBDYXJkYW5vLrFhZGRpdGlvbmFsX2t3YXJnc4WldXNhZ2WFrXByb21wdF90b2tlbnPNF36xY29tcGxldGlvbl90b2tlbnPMh7djYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNGAWrc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNF36xY29tcGxldGlvbl90b2tlbnPMh7djYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNGAWrc3RvcF9yZWFzb26odG9vbF91c2WodGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKR0eXBlomFppG5hbWXAomlk2StydW4tLTA4MTlhNmYxLWE1MjQtNDRhMS05ZWRhLTlhYTUwNmUzYmM1Yi0wp2V4YW1wbGXCqnRvb2xfY2FsbHORhKRuYW1l2SpjcnlwdG9fYW5hbHlzaXNfcmVwb3J0c192ZWN0b3Jfc2VhcmNoX3Rvb2ykYXJnc4KlcXVlcnnZN2NyeXB0byBwb3J0Zm9saW8gYXNzZXQgYWxsb2NhdGlvbiBhbmQgbWFya2V0IGNvbmRpdGlvbnOhawOiaWTZI3Rvb2x1X2JkcmtfMDFZQW9tUmVpRmJCOTZBalZ4QkRKOVMypHR5cGWpdG9vbF9jYWxssmludmFsaWRfdG9vbF9jYWxsc5CudXNhZ2VfbWV0YWRhdGGErGlucHV0X3Rva2Vuc80Xfq1vdXRwdXRfdG9rZW5zzIesdG90YWxfdG9rZW5zzRgFs2lucHV0X3Rva2VuX2RldGFpbHOCrmNhY2hlX2NyZWF0aW9uAKpjYWNoZV9yZWFkALNtb2RlbF92YWxpZGF0ZV9qc29u",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd745023acaf9fbae674"
  },
  "idx": 1,
  "checkpoint_id": "1f06d229-c54d-62af-8002-58f6be2a5c82",
  "task_path": "~__pregel_pull, agent",
  "task_id": "ad3b2e39-a8a7-5908-1a62-c0710b42eb25",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "channel": "branch:to:tools",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd745023acaf9fbae676"
  },
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "idx": 0,
  "checkpoint_id": "1f06d229-d554-60d4-8003-09978d82535b",
  "task_path": "~__pregel_pull, tools",
  "task_id": "91d79d70-fa71-5446-e4e0-65a4748666e5",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd745023acaf9fbae677"
  },
  "idx": 1,
  "checkpoint_id": "1f06d229-d554-60d4-8003-09978d82535b",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "task_id": "91d79d70-fa71-5446-e4e0-65a4748666e5",
  "task_path": "~__pregel_pull, tools",
  "channel": "branch:to:agent",
  "type": "null",
  "value": {
    "$binary": {
      "base64": "",
      "subType": "00"
    }
  }
},
{
  "_id": {
    "$oid": "6889dd775023acaf9fbae679"
  },
  "checkpoint_id": "1f06d229-d772-6bd9-8004-e955837bb2d0",
  "idx": 0,
  "task_path": "~__pregel_pull, agent",
  "task_id": "2abe1f67-9f09-6e8b-5805-d53d33052d85",
  "checkpoint_ns": "",
  "thread_id": "thread_20250730_085302",
  "channel": "messages",
  "type": "msgpack",
  "value": {
    "$binary": {
      "base64": "kcgH1wWUumxhbmdjaGFpbl9jb3JlLm1lc3NhZ2VzLmFpqUFJTWVzc2FnZYqnY29udGVudNoErEtleSBJbnNpZ2h0czoKLSBUaGUgY3VycmVudCBjcnlwdG8gcG9ydGZvbGlvIGlzIGhlYXZpbHkgd2VpZ2h0ZWQgdG93YXJkcyBCaXRjb2luICg2MCUpLCB3aGljaCBpcyBleGhpYml0aW5nIGEgYmVhcmlzaCB0cmVuZCBiYXNlZCBvbiBtb3ZpbmcgYXZlcmFnZSBhbmFseXNpcy4KLSBPdGhlciBtYWpvciBwb3J0Zm9saW8gYXNzZXRzIGxpa2UgRXRoZXJldW0sIFhSUCwgYW5kIENhcmRhbm8gYXJlIGFsc28gc2hvd2luZyBiZWFyaXNoIG1vbWVudHVtLCB3aXRoIHRoZWlyIHByaWNlcyB0cmFkaW5nIGJlbG93IHNob3J0LXRlcm0gbW92aW5nIGF2ZXJhZ2VzLgotIE1vbWVudHVtIGluZGljYXRvcnMgbGlrZSBSU0kgc3VnZ2VzdCBvdmVyc29sZCBvciBiZWFyaXNoIGNvbmRpdGlvbnMgZm9yIG1vc3QgY3J5cHRvY3VycmVuY2llcyBpbiB0aGUgcG9ydGZvbGlvLgotIFRyYWRpbmcgdm9sdW1lIGlzIGJlbG93IGF2ZXJhZ2UgZm9yIHNldmVyYWwgYXNzZXRzLCBpbmRpY2F0aW5nIGxvdyBtYXJrZXQgYWN0aXZpdHkgYW5kIHBvdGVudGlhbCBjb250aW51ZWQgZG93bndhcmQgcHJlc3N1cmUuCgpSZWNvbW1lbmRhdGlvbnM6CjEuIFJlZHVjZSBvdmVyYWxsIGNyeXB0b2N1cnJlbmN5IGV4cG9zdXJlIGJ5IGFsbG9jYXRpbmcgMjAtMzAlIHRvIHN0YWJsZWNvaW5zIGxpa2UgVVNEQyBvciBEQUkgdG8gcHJvdmlkZSBzdGFiaWxpdHkgYW5kIHJlZHVjZSBwb3J0Zm9saW8gdm9sYXRpbGl0eS4KMi4gUmViYWxhbmNlIHRoZSBjcnlwdG9jdXJyZW5jeSBhbGxvY2F0aW9uIHRvIGFjaGlldmUgYmV0dGVyIGRpdmVyc2lmaWNhdGlvbjoKICAgLSBSZWR1Y2UgQml0Y29pbiBleHBvc3VyZSB0byA0MC01MCUKICAgLSBJbmNyZWFzZSBFdGhlcmV1bSB0byAyNS0zMCUKICAgLSBBbGxvY2F0ZSAxMC0xNSUgdG8gU29sYW5hCiAgIC0gQWxsb2NhdGUgNS0xMCUgdG8gRG9nZWNvaW4KMy4gQ2xvc2VseSBtb25pdG9yIHNob3J0LXRlcm0gbW9tZW50dW0gaW5kaWNhdG9ycyBhbmQgYmUgcHJlcGFyZWQgdG8gbWFrZSB0YWN0aWNhbCBhZGp1c3RtZW50cyB0byB0aGUgcG9ydGZvbGlvIGFzIG1hcmtldCBjb25kaXRpb25zIGV2b2x2ZS4KCioqU3VnZ2VzdGVkIG5leHQgc3RlcDoqKgpXb3VsZCB5b3UgbGlrZSBtZSB0byBwcm92aWRlIGEgZGV0YWlsZWQgcmVhbGxvY2F0aW9uIHBsYW4gZm9yIHlvdXIgY3J5cHRvIHBvcnRmb2xpbz8gWUVTL05PsWFkZGl0aW9uYWxfa3dhcmdzhaV1c2FnZYWtcHJvbXB0X3Rva2Vuc80htbFjb21wbGV0aW9uX3Rva2Vuc80BILdjYWNoZV9yZWFkX2lucHV0X3Rva2VucwC4Y2FjaGVfd3JpdGVfaW5wdXRfdG9rZW5zAKx0b3RhbF90b2tlbnPNItWrc3RvcF9yZWFzb26oZW5kX3R1cm6odGhpbmtpbmeAqG1vZGVsX2lk2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MKptb2RlbF9uYW1l2SZhbnRocm9waWMuY2xhdWRlLTMtaGFpa3UtMjAyNDAzMDctdjE6MLFyZXNwb25zZV9tZXRhZGF0YYWldXNhZ2WFrXByb21wdF90b2tlbnPNIbWxY29tcGxldGlvbl90b2tlbnPNASC3Y2FjaGVfcmVhZF9pbnB1dF90b2tlbnMAuGNhY2hlX3dyaXRlX2lucHV0X3Rva2VucwCsdG90YWxfdG9rZW5zzSLVq3N0b3BfcmVhc29uqGVuZF90dXJuqHRoaW5raW5ngKhtb2RlbF9pZNkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCqbW9kZWxfbmFtZdkmYW50aHJvcGljLmNsYXVkZS0zLWhhaWt1LTIwMjQwMzA3LXYxOjCkdHlwZaJhaaRuYW1lwKJpZNkrcnVuLS04OGE1YmE4YS1iZjUxLTRjYzItYWUxNS00YzhjY2IzMmUyYWItMKdleGFtcGxlwqp0b29sX2NhbGxzkLJpbnZhbGlkX3Rvb2xfY2FsbHOQrnVzYWdlX21ldGFkYXRhhKxpbnB1dF90b2tlbnPNIbWtb3V0cHV0X3Rva2Vuc80BIKx0b3RhbF90b2tlbnPNItWzaW5wdXRfdG9rZW5fZGV0YWlsc4KuY2FjaGVfY3JlYXRpb24AqmNhY2hlX3JlYWQAs21vZGVsX3ZhbGlkYXRlX2pzb24=",
      "subType": "00"
    }
  }
}]